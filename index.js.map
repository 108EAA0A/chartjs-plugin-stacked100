{"version":3,"file":"index.js","mappings":"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","sources":["webpack://chartjs-plugin-stacked100/./node_modules/chart.js/dist/chunks/helpers.segment.js","webpack://chartjs-plugin-stacked100/./node_modules/chart.js/dist/chart.js","webpack://chartjs-plugin-stacked100/./src/utils.ts","webpack://chartjs-plugin-stacked100/./src/plugin.ts","webpack://chartjs-plugin-stacked100/./src/index.ts","webpack://chartjs-plugin-stacked100/./examples/demo/index.ts"],"sourcesContent":["/*!\n * Chart.js v4.0.1\n * https://www.chartjs.org\n * (c) 2022 Chart.js Contributors\n * Released under the MIT License\n */\n/**\n * @namespace Chart.helpers\n */ /**\n * An empty function that can be used, for example, for optional callback.\n */ function noop() {\n/* noop */ }\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */ const uid = (()=>{\n    let id = 0;\n    return ()=>id++;\n})();\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isNullOrUndef(value) {\n    return value === null || typeof value === 'undefined';\n}\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */ function isArray(value) {\n    if (Array.isArray && Array.isArray(value)) {\n        return true;\n    }\n    const type = Object.prototype.toString.call(value);\n    if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n        return true;\n    }\n    return false;\n}\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isObject(value) {\n    return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */ function isNumberFinite(value) {\n    return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */ function finiteOrDefault(value, defaultValue) {\n    return isNumberFinite(value) ? value : defaultValue;\n}\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */ function valueOrDefault(value, defaultValue) {\n    return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 : +value / dimension;\nconst toDimension = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 * dimension : +value;\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */ function callback(fn, args, thisArg) {\n    if (fn && typeof fn.call === 'function') {\n        return fn.apply(thisArg, args);\n    }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n    let i, len, keys;\n    if (isArray(loopable)) {\n        len = loopable.length;\n        if (reverse) {\n            for(i = len - 1; i >= 0; i--){\n                fn.call(thisArg, loopable[i], i);\n            }\n        } else {\n            for(i = 0; i < len; i++){\n                fn.call(thisArg, loopable[i], i);\n            }\n        }\n    } else if (isObject(loopable)) {\n        keys = Object.keys(loopable);\n        len = keys.length;\n        for(i = 0; i < len; i++){\n            fn.call(thisArg, loopable[keys[i]], keys[i]);\n        }\n    }\n}\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */ function _elementsEqual(a0, a1) {\n    let i, ilen, v0, v1;\n    if (!a0 || !a1 || a0.length !== a1.length) {\n        return false;\n    }\n    for(i = 0, ilen = a0.length; i < ilen; ++i){\n        v0 = a0[i];\n        v1 = a1[i];\n        if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */ function clone$1(source) {\n    if (isArray(source)) {\n        return source.map(clone$1);\n    }\n    if (isObject(source)) {\n        const target = Object.create(null);\n        const keys = Object.keys(source);\n        const klen = keys.length;\n        let k = 0;\n        for(; k < klen; ++k){\n            target[keys[k]] = clone$1(source[keys[k]]);\n        }\n        return target;\n    }\n    return source;\n}\nfunction isValidKey(key) {\n    return [\n        '__proto__',\n        'prototype',\n        'constructor'\n    ].indexOf(key) === -1;\n}\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */ function _merger(key, target, source, options) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        merge(tval, sval, options);\n    } else {\n        target[key] = clone$1(sval);\n    }\n}\nfunction merge(target, source, options) {\n    const sources = isArray(source) ? source : [\n        source\n    ];\n    const ilen = sources.length;\n    if (!isObject(target)) {\n        return target;\n    }\n    options = options || {};\n    const merger = options.merger || _merger;\n    let current;\n    for(let i = 0; i < ilen; ++i){\n        current = sources[i];\n        if (!isObject(current)) {\n            continue;\n        }\n        const keys = Object.keys(current);\n        for(let k = 0, klen = keys.length; k < klen; ++k){\n            merger(keys[k], target, current, options);\n        }\n    }\n    return target;\n}\nfunction mergeIf(target, source) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    return merge(target, source, {\n        merger: _mergerIf\n    });\n}\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */ function _mergerIf(key, target, source) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        mergeIf(tval, sval);\n    } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n        target[key] = clone$1(sval);\n    }\n}\n/**\n * @private\n */ function _deprecated(scope, value, previous, current) {\n    if (value !== undefined) {\n        console.warn(scope + ': \"' + previous + '\" is deprecated. Please use \"' + current + '\" instead');\n    }\n}\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n    // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n    '': (v)=>v,\n    // default resolvers\n    x: (o)=>o.x,\n    y: (o)=>o.y\n};\n/**\n * @private\n */ function _splitKey(key) {\n    const parts = key.split('.');\n    const keys = [];\n    let tmp = '';\n    for (const part of parts){\n        tmp += part;\n        if (tmp.endsWith('\\\\')) {\n            tmp = tmp.slice(0, -1) + '.';\n        } else {\n            keys.push(tmp);\n            tmp = '';\n        }\n    }\n    return keys;\n}\nfunction _getKeyResolver(key) {\n    const keys = _splitKey(key);\n    return (obj)=>{\n        for (const k of keys){\n            if (k === '') {\n                break;\n            }\n            obj = obj && obj[k];\n        }\n        return obj;\n    };\n}\nfunction resolveObjectKey(obj, key) {\n    const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n    return resolver(obj);\n}\n/**\n * @private\n */ function _capitalize(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value)=>typeof value !== 'undefined';\nconst isFunction = (value)=>typeof value === 'function';\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nconst setsEqual = (a, b)=>{\n    if (a.size !== b.size) {\n        return false;\n    }\n    for (const item of a){\n        if (!b.has(item)) {\n            return false;\n        }\n    }\n    return true;\n};\n/**\n * @param e - The event\n * @private\n */ function _isClickEvent(e) {\n    return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */ const PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction almostEquals(x, y, epsilon) {\n    return Math.abs(x - y) < epsilon;\n}\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */ function niceNum(range) {\n    const roundedRange = Math.round(range);\n    range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n    const niceRange = Math.pow(10, Math.floor(log10(range)));\n    const fraction = range / niceRange;\n    const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n    return niceFraction * niceRange;\n}\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */ function _factorize(value) {\n    const result = [];\n    const sqrt = Math.sqrt(value);\n    let i;\n    for(i = 1; i < sqrt; i++){\n        if (value % i === 0) {\n            result.push(i);\n            result.push(value / i);\n        }\n    }\n    if (sqrt === (sqrt | 0)) {\n        result.push(sqrt);\n    }\n    result.sort((a, b)=>a - b).pop();\n    return result;\n}\nfunction isNumber(n) {\n    return !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostWhole(x, epsilon) {\n    const rounded = Math.round(x);\n    return rounded - epsilon <= x && rounded + epsilon >= x;\n}\n/**\n * @private\n */ function _setMinAndMaxByKey(array, target, property) {\n    let i, ilen, value;\n    for(i = 0, ilen = array.length; i < ilen; i++){\n        value = array[i][property];\n        if (!isNaN(value)) {\n            target.min = Math.min(target.min, value);\n            target.max = Math.max(target.max, value);\n        }\n    }\n}\nfunction toRadians(degrees) {\n    return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n    return radians * (180 / PI);\n}\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */ function _decimalPlaces(x) {\n    if (!isNumberFinite(x)) {\n        return;\n    }\n    let e = 1;\n    let p = 0;\n    while(Math.round(x * e) / e !== x){\n        e *= 10;\n        p++;\n    }\n    return p;\n}\n// Gets the angle from vertical upright to the point about a centre.\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n    const distanceFromXCenter = anglePoint.x - centrePoint.x;\n    const distanceFromYCenter = anglePoint.y - centrePoint.y;\n    const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n    let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n    if (angle < -0.5 * PI) {\n        angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n    }\n    return {\n        angle,\n        distance: radialDistanceFromCenter\n    };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n    return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */ function _angleDiff(a, b) {\n    return (a - b + PITAU) % TAU - PI;\n}\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */ function _normalizeAngle(a) {\n    return (a % TAU + TAU) % TAU;\n}\n/**\n * @private\n */ function _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n    const a = _normalizeAngle(angle);\n    const s = _normalizeAngle(start);\n    const e = _normalizeAngle(end);\n    const angleToStart = _normalizeAngle(s - a);\n    const angleToEnd = _normalizeAngle(e - a);\n    const startToAngle = _normalizeAngle(a - s);\n    const endToAngle = _normalizeAngle(a - e);\n    return a === s || a === e || sameAngleIsFullCircle && s === e || angleToStart > angleToEnd && startToAngle < endToAngle;\n}\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */ function _limitValue(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n}\n/**\n * @param {number} value\n * @private\n */ function _int16Range(value) {\n    return _limitValue(value, -32768, 32767);\n}\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */ function _isBetween(value, start, end, epsilon = 1e-6) {\n    return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n\nfunction _lookup(table, value, cmp) {\n    cmp = cmp || ((index)=>table[index] < value);\n    let hi = table.length - 1;\n    let lo = 0;\n    let mid;\n    while(hi - lo > 1){\n        mid = lo + hi >> 1;\n        if (cmp(mid)) {\n            lo = mid;\n        } else {\n            hi = mid;\n        }\n    }\n    return {\n        lo,\n        hi\n    };\n}\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */ const _lookupByKey = (table, key, value, last)=>_lookup(table, value, last ? (index)=>{\n        const ti = table[index][key];\n        return ti < value || ti === value && table[index + 1][key] === value;\n    } : (index)=>table[index][key] < value);\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */ const _rlookupByKey = (table, key, value)=>_lookup(table, value, (index)=>table[index][key] >= value);\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */ function _filterBetween(values, min, max) {\n    let start = 0;\n    let end = values.length;\n    while(start < end && values[start] < min){\n        start++;\n    }\n    while(end > start && values[end - 1] > max){\n        end--;\n    }\n    return start > 0 || end < values.length ? values.slice(start, end) : values;\n}\nconst arrayEvents = [\n    'push',\n    'pop',\n    'shift',\n    'splice',\n    'unshift'\n];\nfunction listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n        array._chartjs.listeners.push(listener);\n        return;\n    }\n    Object.defineProperty(array, '_chartjs', {\n        configurable: true,\n        enumerable: false,\n        value: {\n            listeners: [\n                listener\n            ]\n        }\n    });\n    arrayEvents.forEach((key)=>{\n        const method = '_onData' + _capitalize(key);\n        const base = array[key];\n        Object.defineProperty(array, key, {\n            configurable: true,\n            enumerable: false,\n            value (...args) {\n                const res = base.apply(this, args);\n                array._chartjs.listeners.forEach((object)=>{\n                    if (typeof object[method] === 'function') {\n                        object[method](...args);\n                    }\n                });\n                return res;\n            }\n        });\n    });\n}\nfunction unlistenArrayEvents(array, listener) {\n    const stub = array._chartjs;\n    if (!stub) {\n        return;\n    }\n    const listeners = stub.listeners;\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n        listeners.splice(index, 1);\n    }\n    if (listeners.length > 0) {\n        return;\n    }\n    arrayEvents.forEach((key)=>{\n        delete array[key];\n    });\n    delete array._chartjs;\n}\n/**\n * @param items\n */ function _arrayUnique(items) {\n    const set = new Set();\n    let i, ilen;\n    for(i = 0, ilen = items.length; i < ilen; ++i){\n        set.add(items[i]);\n    }\n    if (set.size === ilen) {\n        return items;\n    }\n    return Array.from(set);\n}\n\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n    return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n/**\n* Request animation polyfill\n*/ const requestAnimFrame = function() {\n    if (typeof window === 'undefined') {\n        return function(callback) {\n            return callback();\n        };\n    }\n    return window.requestAnimationFrame;\n}();\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */ function throttled(fn, thisArg) {\n    let ticking = false;\n    return function(...args) {\n        if (!ticking) {\n            ticking = true;\n            requestAnimFrame.call(window, ()=>{\n                ticking = false;\n                fn.apply(thisArg, args);\n            });\n        }\n    };\n}\n/**\n * Debounces calling `fn` for `delay` ms\n */ function debounce(fn, delay) {\n    let timeout;\n    return function(...args) {\n        if (delay) {\n            clearTimeout(timeout);\n            timeout = setTimeout(fn, delay, args);\n        } else {\n            fn.apply(this, args);\n        }\n        return delay;\n    };\n}\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */ const _toLeftRightCenter = (align)=>align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */ const _alignStartEnd = (align, start, end)=>align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */ const _textX = (align, left, right, rtl)=>{\n    const check = rtl ? 'left' : 'right';\n    return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n/**\n * Return start and count of visible points.\n * @private\n */ function _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n    const pointCount = points.length;\n    let start = 0;\n    let count = pointCount;\n    if (meta._sorted) {\n        const { iScale , _parsed  } = meta;\n        const axis = iScale.axis;\n        const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n        if (minDefined) {\n            start = _limitValue(Math.min(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, iScale.axis, min).lo, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo), 0, pointCount - 1);\n        }\n        if (maxDefined) {\n            count = _limitValue(Math.max(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, iScale.axis, max, true).hi + 1, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1), start, pointCount) - start;\n        } else {\n            count = pointCount - start;\n        }\n    }\n    return {\n        start,\n        count\n    };\n}\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */ function _scaleRangesChanged(meta) {\n    const { xScale , yScale , _scaleRanges  } = meta;\n    const newRanges = {\n        xmin: xScale.min,\n        xmax: xScale.max,\n        ymin: yScale.min,\n        ymax: yScale.max\n    };\n    if (!_scaleRanges) {\n        meta._scaleRanges = newRanges;\n        return true;\n    }\n    const changed = _scaleRanges.xmin !== xScale.min || _scaleRanges.xmax !== xScale.max || _scaleRanges.ymin !== yScale.min || _scaleRanges.ymax !== yScale.max;\n    Object.assign(_scaleRanges, newRanges);\n    return changed;\n}\n\nconst atEdge = (t)=>t === 0 || t === 1;\nconst elasticIn = (t, s, p)=>-(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p)=>Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */ const effects = {\n    linear: (t)=>t,\n    easeInQuad: (t)=>t * t,\n    easeOutQuad: (t)=>-t * (t - 2),\n    easeInOutQuad: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t : -0.5 * (--t * (t - 2) - 1),\n    easeInCubic: (t)=>t * t * t,\n    easeOutCubic: (t)=>(t -= 1) * t * t + 1,\n    easeInOutCubic: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t : 0.5 * ((t -= 2) * t * t + 2),\n    easeInQuart: (t)=>t * t * t * t,\n    easeOutQuart: (t)=>-((t -= 1) * t * t * t - 1),\n    easeInOutQuart: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t : -0.5 * ((t -= 2) * t * t * t - 2),\n    easeInQuint: (t)=>t * t * t * t * t,\n    easeOutQuint: (t)=>(t -= 1) * t * t * t * t + 1,\n    easeInOutQuint: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t * t : 0.5 * ((t -= 2) * t * t * t * t + 2),\n    easeInSine: (t)=>-Math.cos(t * HALF_PI) + 1,\n    easeOutSine: (t)=>Math.sin(t * HALF_PI),\n    easeInOutSine: (t)=>-0.5 * (Math.cos(PI * t) - 1),\n    easeInExpo: (t)=>t === 0 ? 0 : Math.pow(2, 10 * (t - 1)),\n    easeOutExpo: (t)=>t === 1 ? 1 : -Math.pow(2, -10 * t) + 1,\n    easeInOutExpo: (t)=>atEdge(t) ? t : t < 0.5 ? 0.5 * Math.pow(2, 10 * (t * 2 - 1)) : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n    easeInCirc: (t)=>t >= 1 ? t : -(Math.sqrt(1 - t * t) - 1),\n    easeOutCirc: (t)=>Math.sqrt(1 - (t -= 1) * t),\n    easeInOutCirc: (t)=>(t /= 0.5) < 1 ? -0.5 * (Math.sqrt(1 - t * t) - 1) : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n    easeInElastic: (t)=>atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n    easeOutElastic: (t)=>atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n    easeInOutElastic (t) {\n        const s = 0.1125;\n        const p = 0.45;\n        return atEdge(t) ? t : t < 0.5 ? 0.5 * elasticIn(t * 2, s, p) : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n    },\n    easeInBack (t) {\n        const s = 1.70158;\n        return t * t * ((s + 1) * t - s);\n    },\n    easeOutBack (t) {\n        const s = 1.70158;\n        return (t -= 1) * t * ((s + 1) * t + s) + 1;\n    },\n    easeInOutBack (t) {\n        let s = 1.70158;\n        if ((t /= 0.5) < 1) {\n            return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n        }\n        return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n    easeInBounce: (t)=>1 - effects.easeOutBounce(1 - t),\n    easeOutBounce (t) {\n        const m = 7.5625;\n        const d = 2.75;\n        if (t < 1 / d) {\n            return m * t * t;\n        }\n        if (t < 2 / d) {\n            return m * (t -= 1.5 / d) * t + 0.75;\n        }\n        if (t < 2.5 / d) {\n            return m * (t -= 2.25 / d) * t + 0.9375;\n        }\n        return m * (t -= 2.625 / d) * t + 0.984375;\n    },\n    easeInOutBounce: (t)=>t < 0.5 ? effects.easeInBounce(t * 2) * 0.5 : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5\n};\nvar effects$1 = effects;\n\n/*!\n * @kurkle/color v0.2.1\n * https://github.com/kurkle/color#readme\n * (c) 2022 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\nconst map = {\n  x: 'dark',\n  Z: 'light',\n  Y: 're',\n  X: 'blu',\n  W: 'gr',\n  V: 'medium',\n  U: 'slate',\n  A: 'ee',\n  T: 'ol',\n  S: 'or',\n  B: 'ra',\n  C: 'lateg',\n  D: 'ights',\n  R: 'in',\n  Q: 'turquois',\n  E: 'hi',\n  P: 'ro',\n  O: 'al',\n  N: 'le',\n  M: 'de',\n  L: 'yello',\n  F: 'en',\n  K: 'ch',\n  G: 'arks',\n  H: 'ea',\n  I: 'ightg',\n  J: 'wh'\n};\nconst names$1 = {\n  OiceXe: 'f0f8ff',\n  antiquewEte: 'faebd7',\n  aqua: 'ffff',\n  aquamarRe: '7fffd4',\n  azuY: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '0',\n  blanKedOmond: 'ffebcd',\n  Xe: 'ff',\n  XeviTet: '8a2be2',\n  bPwn: 'a52a2a',\n  burlywood: 'deb887',\n  caMtXe: '5f9ea0',\n  KartYuse: '7fff00',\n  KocTate: 'd2691e',\n  cSO: 'ff7f50',\n  cSnflowerXe: '6495ed',\n  cSnsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: 'ffff',\n  xXe: '8b',\n  xcyan: '8b8b',\n  xgTMnPd: 'b8860b',\n  xWay: 'a9a9a9',\n  xgYF: '6400',\n  xgYy: 'a9a9a9',\n  xkhaki: 'bdb76b',\n  xmagFta: '8b008b',\n  xTivegYF: '556b2f',\n  xSange: 'ff8c00',\n  xScEd: '9932cc',\n  xYd: '8b0000',\n  xsOmon: 'e9967a',\n  xsHgYF: '8fbc8f',\n  xUXe: '483d8b',\n  xUWay: '2f4f4f',\n  xUgYy: '2f4f4f',\n  xQe: 'ced1',\n  xviTet: '9400d3',\n  dAppRk: 'ff1493',\n  dApskyXe: 'bfff',\n  dimWay: '696969',\n  dimgYy: '696969',\n  dodgerXe: '1e90ff',\n  fiYbrick: 'b22222',\n  flSOwEte: 'fffaf0',\n  foYstWAn: '228b22',\n  fuKsia: 'ff00ff',\n  gaRsbSo: 'dcdcdc',\n  ghostwEte: 'f8f8ff',\n  gTd: 'ffd700',\n  gTMnPd: 'daa520',\n  Way: '808080',\n  gYF: '8000',\n  gYFLw: 'adff2f',\n  gYy: '808080',\n  honeyMw: 'f0fff0',\n  hotpRk: 'ff69b4',\n  RdianYd: 'cd5c5c',\n  Rdigo: '4b0082',\n  ivSy: 'fffff0',\n  khaki: 'f0e68c',\n  lavFMr: 'e6e6fa',\n  lavFMrXsh: 'fff0f5',\n  lawngYF: '7cfc00',\n  NmoncEffon: 'fffacd',\n  ZXe: 'add8e6',\n  ZcSO: 'f08080',\n  Zcyan: 'e0ffff',\n  ZgTMnPdLw: 'fafad2',\n  ZWay: 'd3d3d3',\n  ZgYF: '90ee90',\n  ZgYy: 'd3d3d3',\n  ZpRk: 'ffb6c1',\n  ZsOmon: 'ffa07a',\n  ZsHgYF: '20b2aa',\n  ZskyXe: '87cefa',\n  ZUWay: '778899',\n  ZUgYy: '778899',\n  ZstAlXe: 'b0c4de',\n  ZLw: 'ffffe0',\n  lime: 'ff00',\n  limegYF: '32cd32',\n  lRF: 'faf0e6',\n  magFta: 'ff00ff',\n  maPon: '800000',\n  VaquamarRe: '66cdaa',\n  VXe: 'cd',\n  VScEd: 'ba55d3',\n  VpurpN: '9370db',\n  VsHgYF: '3cb371',\n  VUXe: '7b68ee',\n  VsprRggYF: 'fa9a',\n  VQe: '48d1cc',\n  VviTetYd: 'c71585',\n  midnightXe: '191970',\n  mRtcYam: 'f5fffa',\n  mistyPse: 'ffe4e1',\n  moccasR: 'ffe4b5',\n  navajowEte: 'ffdead',\n  navy: '80',\n  Tdlace: 'fdf5e6',\n  Tive: '808000',\n  TivedBb: '6b8e23',\n  Sange: 'ffa500',\n  SangeYd: 'ff4500',\n  ScEd: 'da70d6',\n  pOegTMnPd: 'eee8aa',\n  pOegYF: '98fb98',\n  pOeQe: 'afeeee',\n  pOeviTetYd: 'db7093',\n  papayawEp: 'ffefd5',\n  pHKpuff: 'ffdab9',\n  peru: 'cd853f',\n  pRk: 'ffc0cb',\n  plum: 'dda0dd',\n  powMrXe: 'b0e0e6',\n  purpN: '800080',\n  YbeccapurpN: '663399',\n  Yd: 'ff0000',\n  Psybrown: 'bc8f8f',\n  PyOXe: '4169e1',\n  saddNbPwn: '8b4513',\n  sOmon: 'fa8072',\n  sandybPwn: 'f4a460',\n  sHgYF: '2e8b57',\n  sHshell: 'fff5ee',\n  siFna: 'a0522d',\n  silver: 'c0c0c0',\n  skyXe: '87ceeb',\n  UXe: '6a5acd',\n  UWay: '708090',\n  UgYy: '708090',\n  snow: 'fffafa',\n  sprRggYF: 'ff7f',\n  stAlXe: '4682b4',\n  tan: 'd2b48c',\n  teO: '8080',\n  tEstN: 'd8bfd8',\n  tomato: 'ff6347',\n  Qe: '40e0d0',\n  viTet: 'ee82ee',\n  JHt: 'f5deb3',\n  wEte: 'ffffff',\n  wEtesmoke: 'f5f5f5',\n  Lw: 'ffff00',\n  LwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nfunction isPatternOrGradient(value) {\n    if (value && typeof value === 'object') {\n        const type = value.toString();\n        return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n    }\n    return false;\n}\nfunction color(value) {\n    return isPatternOrGradient(value) ? value : index_esm(value);\n}\nfunction getHoverColor(value) {\n    return isPatternOrGradient(value) ? value : index_esm(value).saturate(0.5).darken(0.1).hexString();\n}\n\nconst numbers = [\n    'x',\n    'y',\n    'borderWidth',\n    'radius',\n    'tension'\n];\nconst colors = [\n    'color',\n    'borderColor',\n    'backgroundColor'\n];\nfunction applyAnimationsDefaults(defaults) {\n    defaults.set('animation', {\n        delay: undefined,\n        duration: 1000,\n        easing: 'easeOutQuart',\n        fn: undefined,\n        from: undefined,\n        loop: undefined,\n        to: undefined,\n        type: undefined\n    });\n    defaults.describe('animation', {\n        _fallback: false,\n        _indexable: false,\n        _scriptable: (name)=>name !== 'onProgress' && name !== 'onComplete' && name !== 'fn'\n    });\n    defaults.set('animations', {\n        colors: {\n            type: 'color',\n            properties: colors\n        },\n        numbers: {\n            type: 'number',\n            properties: numbers\n        }\n    });\n    defaults.describe('animations', {\n        _fallback: 'animation'\n    });\n    defaults.set('transitions', {\n        active: {\n            animation: {\n                duration: 400\n            }\n        },\n        resize: {\n            animation: {\n                duration: 0\n            }\n        },\n        show: {\n            animations: {\n                colors: {\n                    from: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    duration: 0\n                }\n            }\n        },\n        hide: {\n            animations: {\n                colors: {\n                    to: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    easing: 'linear',\n                    fn: (v)=>v | 0\n                }\n            }\n        }\n    });\n}\n\nfunction applyLayoutsDefaults(defaults) {\n    defaults.set('layout', {\n        autoPadding: true,\n        padding: {\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0\n        }\n    });\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n    options = options || {};\n    const cacheKey = locale + JSON.stringify(options);\n    let formatter = intlCache.get(cacheKey);\n    if (!formatter) {\n        formatter = new Intl.NumberFormat(locale, options);\n        intlCache.set(cacheKey, formatter);\n    }\n    return formatter;\n}\nfunction formatNumber(num, locale, options) {\n    return getNumberFormat(locale, options).format(num);\n}\n\nconst formatters = {\n values (value) {\n        return isArray(value) ?  (value) : '' + value;\n    },\n numeric (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const locale = this.chart.options.locale;\n        let notation;\n        let delta = tickValue;\n        if (ticks.length > 1) {\n            const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n            if (maxTick < 1e-4 || maxTick > 1e+15) {\n                notation = 'scientific';\n            }\n            delta = calculateDelta(tickValue, ticks);\n        }\n        const logDelta = log10(Math.abs(delta));\n        const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n        const options = {\n            notation,\n            minimumFractionDigits: numDecimal,\n            maximumFractionDigits: numDecimal\n        };\n        Object.assign(options, this.options.ticks.format);\n        return formatNumber(tickValue, locale, options);\n    },\n logarithmic (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const remain = ticks[index].significand || tickValue / Math.pow(10, Math.floor(log10(tickValue)));\n        if ([\n            1,\n            2,\n            3,\n            5,\n            10,\n            15\n        ].includes(remain) || index > 0.8 * ticks.length) {\n            return formatters.numeric.call(this, tickValue, index, ticks);\n        }\n        return '';\n    }\n};\nfunction calculateDelta(tickValue, ticks) {\n    let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n    if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n        delta = tickValue - Math.floor(tickValue);\n    }\n    return delta;\n}\n var Ticks = {\n    formatters\n};\n\nfunction applyScaleDefaults(defaults) {\n    defaults.set('scale', {\n        display: true,\n        offset: false,\n        reverse: false,\n        beginAtZero: false,\n bounds: 'ticks',\n grace: 0,\n        grid: {\n            display: true,\n            lineWidth: 1,\n            drawOnChartArea: true,\n            drawTicks: true,\n            tickLength: 8,\n            tickWidth: (_ctx, options)=>options.lineWidth,\n            tickColor: (_ctx, options)=>options.color,\n            offset: false\n        },\n        border: {\n            display: true,\n            dash: [],\n            dashOffset: 0.0,\n            width: 1\n        },\n        title: {\n            display: false,\n            text: '',\n            padding: {\n                top: 4,\n                bottom: 4\n            }\n        },\n        ticks: {\n            minRotation: 0,\n            maxRotation: 50,\n            mirror: false,\n            textStrokeWidth: 0,\n            textStrokeColor: '',\n            padding: 3,\n            display: true,\n            autoSkip: true,\n            autoSkipPadding: 3,\n            labelOffset: 0,\n            callback: Ticks.formatters.values,\n            minor: {},\n            major: {},\n            align: 'center',\n            crossAlign: 'near',\n            showLabelBackdrop: false,\n            backdropColor: 'rgba(255, 255, 255, 0.75)',\n            backdropPadding: 2\n        }\n    });\n    defaults.route('scale.ticks', 'color', '', 'color');\n    defaults.route('scale.grid', 'color', '', 'borderColor');\n    defaults.route('scale.border', 'color', '', 'borderColor');\n    defaults.route('scale.title', 'color', '', 'color');\n    defaults.describe('scale', {\n        _fallback: false,\n        _scriptable: (name)=>!name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n        _indexable: (name)=>name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash'\n    });\n    defaults.describe('scales', {\n        _fallback: 'scale'\n    });\n    defaults.describe('scale.ticks', {\n        _scriptable: (name)=>name !== 'backdropPadding' && name !== 'callback',\n        _indexable: (name)=>name !== 'backdropPadding'\n    });\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\n function getScope$1(node, key) {\n    if (!key) {\n        return node;\n    }\n    const keys = key.split('.');\n    for(let i = 0, n = keys.length; i < n; ++i){\n        const k = keys[i];\n        node = node[k] || (node[k] = Object.create(null));\n    }\n    return node;\n}\nfunction set(root, scope, values) {\n    if (typeof scope === 'string') {\n        return merge(getScope$1(root, scope), values);\n    }\n    return merge(getScope$1(root, ''), scope);\n}\n class Defaults {\n    constructor(_descriptors, _appliers){\n        this.animation = undefined;\n        this.backgroundColor = 'rgba(0,0,0,0.1)';\n        this.borderColor = 'rgba(0,0,0,0.1)';\n        this.color = '#666';\n        this.datasets = {};\n        this.devicePixelRatio = (context)=>context.chart.platform.getDevicePixelRatio();\n        this.elements = {};\n        this.events = [\n            'mousemove',\n            'mouseout',\n            'click',\n            'touchstart',\n            'touchmove'\n        ];\n        this.font = {\n            family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n            size: 12,\n            style: 'normal',\n            lineHeight: 1.2,\n            weight: null\n        };\n        this.hover = {};\n        this.hoverBackgroundColor = (ctx, options)=>getHoverColor(options.backgroundColor);\n        this.hoverBorderColor = (ctx, options)=>getHoverColor(options.borderColor);\n        this.hoverColor = (ctx, options)=>getHoverColor(options.color);\n        this.indexAxis = 'x';\n        this.interaction = {\n            mode: 'nearest',\n            intersect: true,\n            includeInvisible: false\n        };\n        this.maintainAspectRatio = true;\n        this.onHover = null;\n        this.onClick = null;\n        this.parsing = true;\n        this.plugins = {};\n        this.responsive = true;\n        this.scale = undefined;\n        this.scales = {};\n        this.showLine = true;\n        this.drawActiveElementsOnTop = true;\n        this.describe(_descriptors);\n        this.apply(_appliers);\n    }\n set(scope, values) {\n        return set(this, scope, values);\n    }\n get(scope) {\n        return getScope$1(this, scope);\n    }\n describe(scope, values) {\n        return set(descriptors, scope, values);\n    }\n    override(scope, values) {\n        return set(overrides, scope, values);\n    }\n route(scope, name, targetScope, targetName) {\n        const scopeObject = getScope$1(this, scope);\n        const targetScopeObject = getScope$1(this, targetScope);\n        const privateName = '_' + name;\n        Object.defineProperties(scopeObject, {\n            [privateName]: {\n                value: scopeObject[name],\n                writable: true\n            },\n            [name]: {\n                enumerable: true,\n                get () {\n                    const local = this[privateName];\n                    const target = targetScopeObject[targetName];\n                    if (isObject(local)) {\n                        return Object.assign({}, target, local);\n                    }\n                    return valueOrDefault(local, target);\n                },\n                set (value) {\n                    this[privateName] = value;\n                }\n            }\n        });\n    }\n    apply(appliers) {\n        appliers.forEach((apply)=>apply(this));\n    }\n}\nvar defaults = /* #__PURE__ */ new Defaults({\n    _scriptable: (name)=>!name.startsWith('on'),\n    _indexable: (name)=>name !== 'events',\n    hover: {\n        _fallback: 'interaction'\n    },\n    interaction: {\n        _scriptable: false,\n        _indexable: false\n    }\n}, [\n    applyAnimationsDefaults,\n    applyLayoutsDefaults,\n    applyScaleDefaults\n]);\n\nfunction toFontString(font) {\n    if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n        return null;\n    }\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n}\n function _measureText(ctx, data, gc, longest, string) {\n    let textWidth = data[string];\n    if (!textWidth) {\n        textWidth = data[string] = ctx.measureText(string).width;\n        gc.push(string);\n    }\n    if (textWidth > longest) {\n        longest = textWidth;\n    }\n    return longest;\n}\n function _longestText(ctx, font, arrayOfThings, cache) {\n    cache = cache || {};\n    let data = cache.data = cache.data || {};\n    let gc = cache.garbageCollect = cache.garbageCollect || [];\n    if (cache.font !== font) {\n        data = cache.data = {};\n        gc = cache.garbageCollect = [];\n        cache.font = font;\n    }\n    ctx.save();\n    ctx.font = font;\n    let longest = 0;\n    const ilen = arrayOfThings.length;\n    let i, j, jlen, thing, nestedThing;\n    for(i = 0; i < ilen; i++){\n        thing = arrayOfThings[i];\n        if (thing !== undefined && thing !== null && isArray(thing) !== true) {\n            longest = _measureText(ctx, data, gc, longest, thing);\n        } else if (isArray(thing)) {\n            for(j = 0, jlen = thing.length; j < jlen; j++){\n                nestedThing = thing[j];\n                if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n                    longest = _measureText(ctx, data, gc, longest, nestedThing);\n                }\n            }\n        }\n    }\n    ctx.restore();\n    const gcLen = gc.length / 2;\n    if (gcLen > arrayOfThings.length) {\n        for(i = 0; i < gcLen; i++){\n            delete data[gc[i]];\n        }\n        gc.splice(0, gcLen);\n    }\n    return longest;\n}\n function _alignPixel(chart, pixel, width) {\n    const devicePixelRatio = chart.currentDevicePixelRatio;\n    const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n    return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n function clearCanvas(canvas, ctx) {\n    ctx = ctx || canvas.getContext('2d');\n    ctx.save();\n    ctx.resetTransform();\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n    drawPointLegend(ctx, options, x, y, null);\n}\nfunction drawPointLegend(ctx, options, x, y, w) {\n    let type, xOffset, yOffset, size, cornerRadius, width, xOffsetW, yOffsetW;\n    const style = options.pointStyle;\n    const rotation = options.rotation;\n    const radius = options.radius;\n    let rad = (rotation || 0) * RAD_PER_DEG;\n    if (style && typeof style === 'object') {\n        type = style.toString();\n        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n            ctx.save();\n            ctx.translate(x, y);\n            ctx.rotate(rad);\n            ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n            ctx.restore();\n            return;\n        }\n    }\n    if (isNaN(radius) || radius <= 0) {\n        return;\n    }\n    ctx.beginPath();\n    switch(style){\n        default:\n            if (w) {\n                ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n            } else {\n                ctx.arc(x, y, radius, 0, TAU);\n            }\n            ctx.closePath();\n            break;\n        case 'triangle':\n            width = w ? w / 2 : radius;\n            ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            ctx.closePath();\n            break;\n        case 'rectRounded':\n            cornerRadius = radius * 0.516;\n            size = radius - cornerRadius;\n            xOffset = Math.cos(rad + QUARTER_PI) * size;\n            xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            yOffset = Math.sin(rad + QUARTER_PI) * size;\n            yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n            ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n            ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n            ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n            ctx.closePath();\n            break;\n        case 'rect':\n            if (!rotation) {\n                size = Math.SQRT1_2 * radius;\n                width = w ? w / 2 : size;\n                ctx.rect(x - width, y - size, 2 * width, 2 * size);\n                break;\n            }\n            rad += QUARTER_PI;\n         case 'rectRot':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            ctx.closePath();\n            break;\n        case 'crossRot':\n            rad += QUARTER_PI;\n         case 'cross':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'star':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            rad += QUARTER_PI;\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'line':\n            xOffset = w ? w / 2 : Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            ctx.moveTo(x - xOffset, y - yOffset);\n            ctx.lineTo(x + xOffset, y + yOffset);\n            break;\n        case 'dash':\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n            break;\n    }\n    ctx.fill();\n    if (options.borderWidth > 0) {\n        ctx.stroke();\n    }\n}\n function _isPointInArea(point, area, margin) {\n    margin = margin || 0.5;\n    return !area || point && point.x > area.left - margin && point.x < area.right + margin && point.y > area.top - margin && point.y < area.bottom + margin;\n}\nfunction clipArea(ctx, area) {\n    ctx.save();\n    ctx.beginPath();\n    ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n    ctx.clip();\n}\nfunction unclipArea(ctx) {\n    ctx.restore();\n}\n function _steppedLineTo(ctx, previous, target, flip, mode) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    if (mode === 'middle') {\n        const midpoint = (previous.x + target.x) / 2.0;\n        ctx.lineTo(midpoint, previous.y);\n        ctx.lineTo(midpoint, target.y);\n    } else if (mode === 'after' !== !!flip) {\n        ctx.lineTo(previous.x, target.y);\n    } else {\n        ctx.lineTo(target.x, previous.y);\n    }\n    ctx.lineTo(target.x, target.y);\n}\n function _bezierCurveTo(ctx, previous, target, flip) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    ctx.bezierCurveTo(flip ? previous.cp1x : previous.cp2x, flip ? previous.cp1y : previous.cp2y, flip ? target.cp2x : target.cp1x, flip ? target.cp2y : target.cp1y, target.x, target.y);\n}\n function renderText(ctx, text, x, y, font, opts = {}) {\n    const lines = isArray(text) ? text : [\n        text\n    ];\n    const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n    let i, line;\n    ctx.save();\n    ctx.font = font.string;\n    setRenderOpts(ctx, opts);\n    for(i = 0; i < lines.length; ++i){\n        line = lines[i];\n        if (opts.backdrop) {\n            drawBackdrop(ctx, opts.backdrop);\n        }\n        if (stroke) {\n            if (opts.strokeColor) {\n                ctx.strokeStyle = opts.strokeColor;\n            }\n            if (!isNullOrUndef(opts.strokeWidth)) {\n                ctx.lineWidth = opts.strokeWidth;\n            }\n            ctx.strokeText(line, x, y, opts.maxWidth);\n        }\n        ctx.fillText(line, x, y, opts.maxWidth);\n        decorateText(ctx, x, y, line, opts);\n        y += font.lineHeight;\n    }\n    ctx.restore();\n}\nfunction setRenderOpts(ctx, opts) {\n    if (opts.translation) {\n        ctx.translate(opts.translation[0], opts.translation[1]);\n    }\n    if (!isNullOrUndef(opts.rotation)) {\n        ctx.rotate(opts.rotation);\n    }\n    if (opts.color) {\n        ctx.fillStyle = opts.color;\n    }\n    if (opts.textAlign) {\n        ctx.textAlign = opts.textAlign;\n    }\n    if (opts.textBaseline) {\n        ctx.textBaseline = opts.textBaseline;\n    }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n    if (opts.strikethrough || opts.underline) {\n const metrics = ctx.measureText(line);\n        const left = x - metrics.actualBoundingBoxLeft;\n        const right = x + metrics.actualBoundingBoxRight;\n        const top = y - metrics.actualBoundingBoxAscent;\n        const bottom = y + metrics.actualBoundingBoxDescent;\n        const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n        ctx.strokeStyle = ctx.fillStyle;\n        ctx.beginPath();\n        ctx.lineWidth = opts.decorationWidth || 2;\n        ctx.moveTo(left, yDecoration);\n        ctx.lineTo(right, yDecoration);\n        ctx.stroke();\n    }\n}\nfunction drawBackdrop(ctx, opts) {\n    const oldColor = ctx.fillStyle;\n    ctx.fillStyle = opts.color;\n    ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n    ctx.fillStyle = oldColor;\n}\n function addRoundedRectPath(ctx, rect) {\n    const { x , y , w , h , radius  } = rect;\n    ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, -HALF_PI, PI, true);\n    ctx.lineTo(x, y + h - radius.bottomLeft);\n    ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n    ctx.lineTo(x + w - radius.bottomRight, y + h);\n    ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n    ctx.lineTo(x + w, y + radius.topRight);\n    ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n    ctx.lineTo(x + radius.topLeft, y);\n}\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n/**\n * @alias Chart.helpers.options\n * @namespace\n */ /**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */ function toLineHeight(value, size) {\n    const matches = ('' + value).match(LINE_HEIGHT);\n    if (!matches || matches[1] === 'normal') {\n        return size * 1.2;\n    }\n    value = +matches[2];\n    switch(matches[3]){\n        case 'px':\n            return value;\n        case '%':\n            value /= 100;\n            break;\n    }\n    return size * value;\n}\nconst numberOrZero = (v)=>+v || 0;\nfunction _readValueToProps(value, props) {\n    const ret = {};\n    const objProps = isObject(props);\n    const keys = objProps ? Object.keys(props) : props;\n    const read = isObject(value) ? objProps ? (prop)=>valueOrDefault(value[prop], value[props[prop]]) : (prop)=>value[prop] : ()=>value;\n    for (const prop of keys){\n        ret[prop] = numberOrZero(read(prop));\n    }\n    return ret;\n}\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */ function toTRBL(value) {\n    return _readValueToProps(value, {\n        top: 'y',\n        right: 'x',\n        bottom: 'y',\n        left: 'x'\n    });\n}\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */ function toTRBLCorners(value) {\n    return _readValueToProps(value, [\n        'topLeft',\n        'topRight',\n        'bottomLeft',\n        'bottomRight'\n    ]);\n}\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */ function toPadding(value) {\n    const obj = toTRBL(value);\n    obj.width = obj.left + obj.right;\n    obj.height = obj.top + obj.bottom;\n    return obj;\n}\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */ function toFont(options, fallback) {\n    options = options || {};\n    fallback = fallback || defaults.font;\n    let size = valueOrDefault(options.size, fallback.size);\n    if (typeof size === 'string') {\n        size = parseInt(size, 10);\n    }\n    let style = valueOrDefault(options.style, fallback.style);\n    if (style && !('' + style).match(FONT_STYLE)) {\n        console.warn('Invalid font style specified: \"' + style + '\"');\n        style = undefined;\n    }\n    const font = {\n        family: valueOrDefault(options.family, fallback.family),\n        lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n        size,\n        style,\n        weight: valueOrDefault(options.weight, fallback.weight),\n        string: ''\n    };\n    font.string = toFontString(font);\n    return font;\n}\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */ function resolve(inputs, context, index, info) {\n    let cacheable = true;\n    let i, ilen, value;\n    for(i = 0, ilen = inputs.length; i < ilen; ++i){\n        value = inputs[i];\n        if (value === undefined) {\n            continue;\n        }\n        if (context !== undefined && typeof value === 'function') {\n            value = value(context);\n            cacheable = false;\n        }\n        if (index !== undefined && isArray(value)) {\n            value = value[index % value.length];\n            cacheable = false;\n        }\n        if (value !== undefined) {\n            if (info && !cacheable) {\n                info.cacheable = false;\n            }\n            return value;\n        }\n    }\n}\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */ function _addGrace(minmax, grace, beginAtZero) {\n    const { min , max  } = minmax;\n    const change = toDimension(grace, (max - min) / 2);\n    const keepZero = (value, add)=>beginAtZero && value === 0 ? 0 : value + add;\n    return {\n        min: keepZero(min, -Math.abs(change)),\n        max: keepZero(max, change)\n    };\n}\n/**\n * Create a context inheriting parentContext\n * @param parentContext\n * @param context\n * @returns\n */ function createContext(parentContext, context) {\n    return Object.assign(Object.create(parentContext), context);\n}\n\nfunction _createResolver(scopes, prefixes = [\n    ''\n], rootScopes = scopes, fallback, getTarget = ()=>scopes[0]) {\n    if (!defined(fallback)) {\n        fallback = _resolve('_fallback', scopes);\n    }\n    const cache = {\n        [Symbol.toStringTag]: 'Object',\n        _cacheable: true,\n        _scopes: scopes,\n        _rootScopes: rootScopes,\n        _fallback: fallback,\n        _getTarget: getTarget,\n        override: (scope)=>_createResolver([\n                scope,\n                ...scopes\n            ], prefixes, rootScopes, fallback)\n    };\n    return new Proxy(cache, {\n deleteProperty (target, prop) {\n            delete target[prop];\n            delete target._keys;\n            delete scopes[0][prop];\n            return true;\n        },\n get (target, prop) {\n            return _cached(target, prop, ()=>_resolveWithPrefixes(prop, prefixes, scopes, target));\n        },\n getOwnPropertyDescriptor (target, prop) {\n            return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n        },\n getPrototypeOf () {\n            return Reflect.getPrototypeOf(scopes[0]);\n        },\n has (target, prop) {\n            return getKeysFromAllScopes(target).includes(prop);\n        },\n ownKeys (target) {\n            return getKeysFromAllScopes(target);\n        },\n set (target, prop, value) {\n            const storage = target._storage || (target._storage = getTarget());\n            target[prop] = storage[prop] = value;\n            delete target._keys;\n            return true;\n        }\n    });\n}\n function _attachContext(proxy, context, subProxy, descriptorDefaults) {\n    const cache = {\n        _cacheable: false,\n        _proxy: proxy,\n        _context: context,\n        _subProxy: subProxy,\n        _stack: new Set(),\n        _descriptors: _descriptors(proxy, descriptorDefaults),\n        setContext: (ctx)=>_attachContext(proxy, ctx, subProxy, descriptorDefaults),\n        override: (scope)=>_attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n    };\n    return new Proxy(cache, {\n deleteProperty (target, prop) {\n            delete target[prop];\n            delete proxy[prop];\n            return true;\n        },\n get (target, prop, receiver) {\n            return _cached(target, prop, ()=>_resolveWithContext(target, prop, receiver));\n        },\n getOwnPropertyDescriptor (target, prop) {\n            return target._descriptors.allKeys ? Reflect.has(proxy, prop) ? {\n                enumerable: true,\n                configurable: true\n            } : undefined : Reflect.getOwnPropertyDescriptor(proxy, prop);\n        },\n getPrototypeOf () {\n            return Reflect.getPrototypeOf(proxy);\n        },\n has (target, prop) {\n            return Reflect.has(proxy, prop);\n        },\n ownKeys () {\n            return Reflect.ownKeys(proxy);\n        },\n set (target, prop, value) {\n            proxy[prop] = value;\n            delete target[prop];\n            return true;\n        }\n    });\n}\n function _descriptors(proxy, defaults = {\n    scriptable: true,\n    indexable: true\n}) {\n    const { _scriptable =defaults.scriptable , _indexable =defaults.indexable , _allKeys =defaults.allKeys  } = proxy;\n    return {\n        allKeys: _allKeys,\n        scriptable: _scriptable,\n        indexable: _indexable,\n        isScriptable: isFunction(_scriptable) ? _scriptable : ()=>_scriptable,\n        isIndexable: isFunction(_indexable) ? _indexable : ()=>_indexable\n    };\n}\nconst readKey = (prefix, name)=>prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value)=>isObject(value) && prop !== 'adapters' && (Object.getPrototypeOf(value) === null || value.constructor === Object);\nfunction _cached(target, prop, resolve) {\n    if (Object.prototype.hasOwnProperty.call(target, prop)) {\n        return target[prop];\n    }\n    const value = resolve();\n    target[prop] = value;\n    return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    let value = _proxy[prop];\n    if (isFunction(value) && descriptors.isScriptable(prop)) {\n        value = _resolveScriptable(prop, value, target, receiver);\n    }\n    if (isArray(value) && value.length) {\n        value = _resolveArray(prop, value, target, descriptors.isIndexable);\n    }\n    if (needsSubResolver(prop, value)) {\n        value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n    }\n    return value;\n}\nfunction _resolveScriptable(prop, value, target, receiver) {\n    const { _proxy , _context , _subProxy , _stack  } = target;\n    if (_stack.has(prop)) {\n        throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n    }\n    _stack.add(prop);\n    value = value(_context, _subProxy || receiver);\n    _stack.delete(prop);\n    if (needsSubResolver(prop, value)) {\n        value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n    }\n    return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    if (defined(_context.index) && isIndexable(prop)) {\n        value = value[_context.index % value.length];\n    } else if (isObject(value[0])) {\n        const arr = value;\n        const scopes = _proxy._scopes.filter((s)=>s !== arr);\n        value = [];\n        for (const item of arr){\n            const resolver = createSubResolver(scopes, _proxy, prop, item);\n            value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n        }\n    }\n    return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n    return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent)=>key === true ? parent : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n    for (const parent of parentScopes){\n        const scope = getScope(key, parent);\n        if (scope) {\n            set.add(scope);\n            const fallback = resolveFallback(scope._fallback, key, value);\n            if (defined(fallback) && fallback !== key && fallback !== parentFallback) {\n                return fallback;\n            }\n        } else if (scope === false && defined(parentFallback) && key !== parentFallback) {\n            return null;\n        }\n    }\n    return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n    const rootScopes = resolver._rootScopes;\n    const fallback = resolveFallback(resolver._fallback, prop, value);\n    const allScopes = [\n        ...parentScopes,\n        ...rootScopes\n    ];\n    const set = new Set();\n    set.add(value);\n    let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n    if (key === null) {\n        return false;\n    }\n    if (defined(fallback) && fallback !== prop) {\n        key = addScopesFromKey(set, allScopes, fallback, key, value);\n        if (key === null) {\n            return false;\n        }\n    }\n    return _createResolver(Array.from(set), [\n        ''\n    ], rootScopes, fallback, ()=>subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n    while(key){\n        key = addScopes(set, allScopes, key, fallback, item);\n    }\n    return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n    const parent = resolver._getTarget();\n    if (!(prop in parent)) {\n        parent[prop] = {};\n    }\n    const target = parent[prop];\n    if (isArray(target) && isObject(value)) {\n        return value;\n    }\n    return target || {};\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n    let value;\n    for (const prefix of prefixes){\n        value = _resolve(readKey(prefix, prop), scopes);\n        if (defined(value)) {\n            return needsSubResolver(prop, value) ? createSubResolver(scopes, proxy, prop, value) : value;\n        }\n    }\n}\nfunction _resolve(key, scopes) {\n    for (const scope of scopes){\n        if (!scope) {\n            continue;\n        }\n        const value = scope[key];\n        if (defined(value)) {\n            return value;\n        }\n    }\n}\nfunction getKeysFromAllScopes(target) {\n    let keys = target._keys;\n    if (!keys) {\n        keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n    }\n    return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n    const set = new Set();\n    for (const scope of scopes){\n        for (const key of Object.keys(scope).filter((k)=>!k.startsWith('_'))){\n            set.add(key);\n        }\n    }\n    return Array.from(set);\n}\nfunction _parseObjectDataRadialScale(meta, data, start, count) {\n    const { iScale  } = meta;\n    const { key ='r'  } = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for(i = 0, ilen = count; i < ilen; ++i){\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n            r: iScale.parse(resolveObjectKey(item, key), index)\n        };\n    }\n    return parsed;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i)=>i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis)=>indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n    // Props to Rob Spencer at scaled innovation for his post on splining between points\n    // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n    // This function must also respect \"skipped\" points\n    const previous = firstPoint.skip ? middlePoint : firstPoint;\n    const current = middlePoint;\n    const next = afterPoint.skip ? middlePoint : afterPoint;\n    const d01 = distanceBetweenPoints(current, previous);\n    const d12 = distanceBetweenPoints(next, current);\n    let s01 = d01 / (d01 + d12);\n    let s12 = d12 / (d01 + d12);\n    // If all points are the same, s01 & s02 will be inf\n    s01 = isNaN(s01) ? 0 : s01;\n    s12 = isNaN(s12) ? 0 : s12;\n    const fa = t * s01; // scaling factor for triangle Ta\n    const fb = t * s12;\n    return {\n        previous: {\n            x: current.x - fa * (next.x - previous.x),\n            y: current.y - fa * (next.y - previous.y)\n        },\n        next: {\n            x: current.x + fb * (next.x - previous.x),\n            y: current.y + fb * (next.y - previous.y)\n        }\n    };\n}\n/**\n * Adjust tangents to ensure monotonic properties\n */ function monotoneAdjust(points, deltaK, mK) {\n    const pointsLen = points.length;\n    let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen - 1; ++i){\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent || !pointAfter) {\n            continue;\n        }\n        if (almostEquals(deltaK[i], 0, EPSILON)) {\n            mK[i] = mK[i + 1] = 0;\n            continue;\n        }\n        alphaK = mK[i] / deltaK[i];\n        betaK = mK[i + 1] / deltaK[i];\n        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n        if (squaredMagnitude <= 9) {\n            continue;\n        }\n        tauK = 3 / Math.sqrt(squaredMagnitude);\n        mK[i] = alphaK * tauK * deltaK[i];\n        mK[i + 1] = betaK * tauK * deltaK[i];\n    }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    let delta, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        const iPixel = pointCurrent[indexAxis];\n        const vPixel = pointCurrent[valueAxis];\n        if (pointBefore) {\n            delta = (iPixel - pointBefore[indexAxis]) / 3;\n            pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n            pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n        }\n        if (pointAfter) {\n            delta = (pointAfter[indexAxis] - iPixel) / 3;\n            pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n            pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n        }\n    }\n}\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */ function splineCurveMonotone(points, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    const deltaK = Array(pointsLen).fill(0);\n    const mK = Array(pointsLen);\n    // Calculate slopes (deltaK) and initialize tangents (mK)\n    let i, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        if (pointAfter) {\n            const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n            // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n            deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n        }\n        mK[i] = !pointBefore ? deltaK[i] : !pointAfter ? deltaK[i - 1] : sign(deltaK[i - 1]) !== sign(deltaK[i]) ? 0 : (deltaK[i - 1] + deltaK[i]) / 2;\n    }\n    monotoneAdjust(points, deltaK, mK);\n    monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n    return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n    let i, ilen, point, inArea, inAreaPrev;\n    let inAreaNext = _isPointInArea(points[0], area);\n    for(i = 0, ilen = points.length; i < ilen; ++i){\n        inAreaPrev = inArea;\n        inArea = inAreaNext;\n        inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n        if (!inArea) {\n            continue;\n        }\n        point = points[i];\n        if (inAreaPrev) {\n            point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n            point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n        }\n        if (inAreaNext) {\n            point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n            point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n        }\n    }\n}\n/**\n * @private\n */ function _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n    let i, ilen, point, controlPoints;\n    // Only consider points that are drawn in case the spanGaps option is used\n    if (options.spanGaps) {\n        points = points.filter((pt)=>!pt.skip);\n    }\n    if (options.cubicInterpolationMode === 'monotone') {\n        splineCurveMonotone(points, indexAxis);\n    } else {\n        let prev = loop ? points[points.length - 1] : points[0];\n        for(i = 0, ilen = points.length; i < ilen; ++i){\n            point = points[i];\n            controlPoints = splineCurve(prev, point, points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen], options.tension);\n            point.cp1x = controlPoints.previous.x;\n            point.cp1y = controlPoints.previous.y;\n            point.cp2x = controlPoints.next.x;\n            point.cp2y = controlPoints.next.y;\n            prev = point;\n        }\n    }\n    if (options.capBezierPoints) {\n        capBezierPoints(points, area);\n    }\n}\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `dom` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import(\"../core/core.controller\").default } dom.Chart\n * @typedef { import('../../types').ChartEvent } ChartEvent\n */ /**\n * @private\n */ function _isDomSupported() {\n    return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n/**\n * @private\n */ function _getParentNode(domNode) {\n    let parent = domNode.parentNode;\n    if (parent && parent.toString() === '[object ShadowRoot]') {\n        parent = parent.host;\n    }\n    return parent;\n}\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */ function parseMaxStyle(styleValue, node, parentProperty) {\n    let valueInPixels;\n    if (typeof styleValue === 'string') {\n        valueInPixels = parseInt(styleValue, 10);\n        if (styleValue.indexOf('%') !== -1) {\n            // percentage * size in dimension\n            valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n        }\n    } else {\n        valueInPixels = styleValue;\n    }\n    return valueInPixels;\n}\nconst getComputedStyle = (element)=>element.ownerDocument.defaultView.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n    return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = [\n    'top',\n    'right',\n    'bottom',\n    'left'\n];\nfunction getPositionedStyle(styles, style, suffix) {\n    const result = {};\n    suffix = suffix ? '-' + suffix : '';\n    for(let i = 0; i < 4; i++){\n        const pos = positions[i];\n        result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n    }\n    result.width = result.left + result.right;\n    result.height = result.top + result.bottom;\n    return result;\n}\nconst useOffsetPos = (x, y, target)=>(x > 0 || y > 0) && (!target || !target.shadowRoot);\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */ function getCanvasPosition(e, canvas) {\n    const touches = e.touches;\n    const source = touches && touches.length ? touches[0] : e;\n    const { offsetX , offsetY  } = source;\n    let box = false;\n    let x, y;\n    if (useOffsetPos(offsetX, offsetY, e.target)) {\n        x = offsetX;\n        y = offsetY;\n    } else {\n        const rect = canvas.getBoundingClientRect();\n        x = source.clientX - rect.left;\n        y = source.clientY - rect.top;\n        box = true;\n    }\n    return {\n        x,\n        y,\n        box\n    };\n}\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */ function getRelativePosition(event, chart) {\n    if ('native' in event) {\n        return event;\n    }\n    const { canvas , currentDevicePixelRatio  } = chart;\n    const style = getComputedStyle(canvas);\n    const borderBox = style.boxSizing === 'border-box';\n    const paddings = getPositionedStyle(style, 'padding');\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const { x , y , box  } = getCanvasPosition(event, canvas);\n    const xOffset = paddings.left + (box && borders.left);\n    const yOffset = paddings.top + (box && borders.top);\n    let { width , height  } = chart;\n    if (borderBox) {\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    return {\n        x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n        y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n    };\n}\nfunction getContainerSize(canvas, width, height) {\n    let maxWidth, maxHeight;\n    if (width === undefined || height === undefined) {\n        const container = _getParentNode(canvas);\n        if (!container) {\n            width = canvas.clientWidth;\n            height = canvas.clientHeight;\n        } else {\n            const rect = container.getBoundingClientRect(); // this is the border box of the container\n            const containerStyle = getComputedStyle(container);\n            const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n            const containerPadding = getPositionedStyle(containerStyle, 'padding');\n            width = rect.width - containerPadding.width - containerBorder.width;\n            height = rect.height - containerPadding.height - containerBorder.height;\n            maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n            maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n        }\n    }\n    return {\n        width,\n        height,\n        maxWidth: maxWidth || INFINITY,\n        maxHeight: maxHeight || INFINITY\n    };\n}\nconst round1 = (v)=>Math.round(v * 10) / 10;\n// eslint-disable-next-line complexity\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n    const style = getComputedStyle(canvas);\n    const margins = getPositionedStyle(style, 'margin');\n    const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n    const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n    const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n    let { width , height  } = containerSize;\n    if (style.boxSizing === 'content-box') {\n        const borders = getPositionedStyle(style, 'border', 'width');\n        const paddings = getPositionedStyle(style, 'padding');\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    width = Math.max(0, width - margins.width);\n    height = Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height - margins.height);\n    width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n    height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n    if (width && !height) {\n        // https://github.com/chartjs/Chart.js/issues/4659\n        // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n        height = round1(width / 2);\n    }\n    const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n    if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n        height = containerSize.height;\n        width = round1(Math.floor(height * aspectRatio));\n    }\n    return {\n        width,\n        height\n    };\n}\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */ function retinaScale(chart, forceRatio, forceStyle) {\n    const pixelRatio = forceRatio || 1;\n    const deviceHeight = Math.floor(chart.height * pixelRatio);\n    const deviceWidth = Math.floor(chart.width * pixelRatio);\n    chart.height = deviceHeight / pixelRatio;\n    chart.width = deviceWidth / pixelRatio;\n    const canvas = chart.canvas;\n    // If no style has been set on the canvas, the render size is used as display size,\n    // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n    // See https://github.com/chartjs/Chart.js/issues/3575\n    if (canvas.style && (forceStyle || !canvas.style.height && !canvas.style.width)) {\n        canvas.style.height = `${chart.height}px`;\n        canvas.style.width = `${chart.width}px`;\n    }\n    if (chart.currentDevicePixelRatio !== pixelRatio || canvas.height !== deviceHeight || canvas.width !== deviceWidth) {\n        chart.currentDevicePixelRatio = pixelRatio;\n        canvas.height = deviceHeight;\n        canvas.width = deviceWidth;\n        chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n        return true;\n    }\n    return false;\n}\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */ const supportsEventListenerOptions = function() {\n    let passiveSupported = false;\n    try {\n        const options = {\n            get passive () {\n                passiveSupported = true;\n                return false;\n            }\n        };\n        window.addEventListener('test', null, options);\n        window.removeEventListener('test', null, options);\n    } catch (e) {\n    // continue regardless of error\n    }\n    return passiveSupported;\n}();\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */ function readUsedSize(element, property) {\n    const value = getStyle(element, property);\n    const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? +matches[1] : undefined;\n}\n\n/**\n * @private\n */ function _pointInLine(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: p1.y + t * (p2.y - p1.y)\n    };\n}\n/**\n * @private\n */ function _steppedInterpolation(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y : mode === 'after' ? t < 1 ? p1.y : p2.y : t > 0 ? p2.y : p1.y\n    };\n}\n/**\n * @private\n */ function _bezierInterpolation(p1, p2, t, mode) {\n    const cp1 = {\n        x: p1.cp2x,\n        y: p1.cp2y\n    };\n    const cp2 = {\n        x: p2.cp1x,\n        y: p2.cp1y\n    };\n    const a = _pointInLine(p1, cp1, t);\n    const b = _pointInLine(cp1, cp2, t);\n    const c = _pointInLine(cp2, p2, t);\n    const d = _pointInLine(a, b, t);\n    const e = _pointInLine(b, c, t);\n    return _pointInLine(d, e, t);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n    return {\n        x (x) {\n            return rectX + rectX + width - x;\n        },\n        setWidth (w) {\n            width = w;\n        },\n        textAlign (align) {\n            if (align === 'center') {\n                return align;\n            }\n            return align === 'right' ? 'left' : 'right';\n        },\n        xPlus (x, value) {\n            return x - value;\n        },\n        leftForLtr (x, itemWidth) {\n            return x - itemWidth;\n        }\n    };\n};\nconst getLeftToRightAdapter = function() {\n    return {\n        x (x) {\n            return x;\n        },\n        setWidth (w) {},\n        textAlign (align) {\n            return align;\n        },\n        xPlus (x, value) {\n            return x + value;\n        },\n        leftForLtr (x, _itemWidth) {\n            return x;\n        }\n    };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n    return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n    let style, original;\n    if (direction === 'ltr' || direction === 'rtl') {\n        style = ctx.canvas.style;\n        original = [\n            style.getPropertyValue('direction'),\n            style.getPropertyPriority('direction'), \n        ];\n        style.setProperty('direction', direction, 'important');\n        ctx.prevTextDirection = original;\n    }\n}\nfunction restoreTextDirection(ctx, original) {\n    if (original !== undefined) {\n        delete ctx.prevTextDirection;\n        ctx.canvas.style.setProperty('direction', original[0], original[1]);\n    }\n}\n\nfunction propertyFn(property) {\n    if (property === 'angle') {\n        return {\n            between: _angleBetween,\n            compare: _angleDiff,\n            normalize: _normalizeAngle\n        };\n    }\n    return {\n        between: _isBetween,\n        compare: (a, b)=>a - b,\n        normalize: (x)=>x\n    };\n}\nfunction normalizeSegment({ start , end , count , loop , style  }) {\n    return {\n        start: start % count,\n        end: end % count,\n        loop: loop && (end - start + 1) % count === 0,\n        style\n    };\n}\nfunction getSegment(segment, points, bounds) {\n    const { property , start: startBound , end: endBound  } = bounds;\n    const { between , normalize  } = propertyFn(property);\n    const count = points.length;\n    let { start , end , loop  } = segment;\n    let i, ilen;\n    if (loop) {\n        start += count;\n        end += count;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n                break;\n            }\n            start--;\n            end--;\n        }\n        start %= count;\n        end %= count;\n    }\n    if (end < start) {\n        end += count;\n    }\n    return {\n        start,\n        end,\n        loop,\n        style: segment.style\n    };\n}\n function _boundSegment(segment, points, bounds) {\n    if (!bounds) {\n        return [\n            segment\n        ];\n    }\n    const { property , start: startBound , end: endBound  } = bounds;\n    const count = points.length;\n    const { compare , between , normalize  } = propertyFn(property);\n    const { start , end , loop , style  } = getSegment(segment, points, bounds);\n    const result = [];\n    let inside = false;\n    let subStart = null;\n    let value, point, prevValue;\n    const startIsBefore = ()=>between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n    const endIsBefore = ()=>compare(endBound, value) === 0 || between(endBound, prevValue, value);\n    const shouldStart = ()=>inside || startIsBefore();\n    const shouldStop = ()=>!inside || endIsBefore();\n    for(let i = start, prev = start; i <= end; ++i){\n        point = points[i % count];\n        if (point.skip) {\n            continue;\n        }\n        value = normalize(point[property]);\n        if (value === prevValue) {\n            continue;\n        }\n        inside = between(value, startBound, endBound);\n        if (subStart === null && shouldStart()) {\n            subStart = compare(value, startBound) === 0 ? i : prev;\n        }\n        if (subStart !== null && shouldStop()) {\n            result.push(normalizeSegment({\n                start: subStart,\n                end: i,\n                loop,\n                count,\n                style\n            }));\n            subStart = null;\n        }\n        prev = i;\n        prevValue = value;\n    }\n    if (subStart !== null) {\n        result.push(normalizeSegment({\n            start: subStart,\n            end,\n            loop,\n            count,\n            style\n        }));\n    }\n    return result;\n}\n function _boundSegments(line, bounds) {\n    const result = [];\n    const segments = line.segments;\n    for(let i = 0; i < segments.length; i++){\n        const sub = _boundSegment(segments[i], line.points, bounds);\n        if (sub.length) {\n            result.push(...sub);\n        }\n    }\n    return result;\n}\n function findStartAndEnd(points, count, loop, spanGaps) {\n    let start = 0;\n    let end = count - 1;\n    if (loop && !spanGaps) {\n        while(start < count && !points[start].skip){\n            start++;\n        }\n    }\n    while(start < count && points[start].skip){\n        start++;\n    }\n    start %= count;\n    if (loop) {\n        end += start;\n    }\n    while(end > start && points[end % count].skip){\n        end--;\n    }\n    end %= count;\n    return {\n        start,\n        end\n    };\n}\n function solidSegments(points, start, max, loop) {\n    const count = points.length;\n    const result = [];\n    let last = start;\n    let prev = points[start];\n    let end;\n    for(end = start + 1; end <= max; ++end){\n        const cur = points[end % count];\n        if (cur.skip || cur.stop) {\n            if (!prev.skip) {\n                loop = false;\n                result.push({\n                    start: start % count,\n                    end: (end - 1) % count,\n                    loop\n                });\n                start = last = cur.stop ? end : null;\n            }\n        } else {\n            last = end;\n            if (prev.skip) {\n                start = end;\n            }\n        }\n        prev = cur;\n    }\n    if (last !== null) {\n        result.push({\n            start: start % count,\n            end: last % count,\n            loop\n        });\n    }\n    return result;\n}\n function _computeSegments(line, segmentOptions) {\n    const points = line.points;\n    const spanGaps = line.options.spanGaps;\n    const count = points.length;\n    if (!count) {\n        return [];\n    }\n    const loop = !!line._loop;\n    const { start , end  } = findStartAndEnd(points, count, loop, spanGaps);\n    if (spanGaps === true) {\n        return splitByStyles(line, [\n            {\n                start,\n                end,\n                loop\n            }\n        ], points, segmentOptions);\n    }\n    const max = end < start ? end + count : end;\n    const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n    return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n function splitByStyles(line, segments, points, segmentOptions) {\n    if (!segmentOptions || !segmentOptions.setContext || !points) {\n        return segments;\n    }\n    return doSplitByStyles(line, segments, points, segmentOptions);\n}\n function doSplitByStyles(line, segments, points, segmentOptions) {\n    const chartContext = line._chart.getContext();\n    const baseStyle = readStyle(line.options);\n    const { _datasetIndex: datasetIndex , options: { spanGaps  }  } = line;\n    const count = points.length;\n    const result = [];\n    let prevStyle = baseStyle;\n    let start = segments[0].start;\n    let i = start;\n    function addStyle(s, e, l, st) {\n        const dir = spanGaps ? -1 : 1;\n        if (s === e) {\n            return;\n        }\n        s += count;\n        while(points[s % count].skip){\n            s -= dir;\n        }\n        while(points[e % count].skip){\n            e += dir;\n        }\n        if (s % count !== e % count) {\n            result.push({\n                start: s % count,\n                end: e % count,\n                loop: l,\n                style: st\n            });\n            prevStyle = st;\n            start = e % count;\n        }\n    }\n    for (const segment of segments){\n        start = spanGaps ? start : segment.start;\n        let prev = points[start % count];\n        let style;\n        for(i = start + 1; i <= segment.end; i++){\n            const pt = points[i % count];\n            style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n                type: 'segment',\n                p0: prev,\n                p1: pt,\n                p0DataIndex: (i - 1) % count,\n                p1DataIndex: i % count,\n                datasetIndex\n            })));\n            if (styleChanged(style, prevStyle)) {\n                addStyle(start, i - 1, segment.loop, prevStyle);\n            }\n            prev = pt;\n            prevStyle = style;\n        }\n        if (start < i - 1) {\n            addStyle(start, i - 1, segment.loop, prevStyle);\n        }\n    }\n    return result;\n}\nfunction readStyle(options) {\n    return {\n        backgroundColor: options.backgroundColor,\n        borderCapStyle: options.borderCapStyle,\n        borderDash: options.borderDash,\n        borderDashOffset: options.borderDashOffset,\n        borderJoinStyle: options.borderJoinStyle,\n        borderWidth: options.borderWidth,\n        borderColor: options.borderColor\n    };\n}\nfunction styleChanged(style, prevStyle) {\n    return prevStyle && JSON.stringify(style) !== JSON.stringify(prevStyle);\n}\n\nexport { unclipArea as $, _rlookupByKey as A, _lookupByKey as B, _isPointInArea as C, getAngleFromPoint as D, toPadding as E, each as F, getMaximumSize as G, HALF_PI as H, _getParentNode as I, readUsedSize as J, supportsEventListenerOptions as K, throttled as L, _isDomSupported as M, _factorize as N, finiteOrDefault as O, PI as P, callback as Q, _addGrace as R, _limitValue as S, TAU as T, toDegrees as U, _measureText as V, _int16Range as W, _alignPixel as X, clipArea as Y, renderText as Z, _arrayUnique as _, resolve as a, fontString as a$, toFont as a0, _toLeftRightCenter as a1, _alignStartEnd as a2, overrides as a3, merge as a4, _capitalize as a5, descriptors as a6, isFunction as a7, _attachContext as a8, _createResolver as a9, overrideTextDirection as aA, _textX as aB, restoreTextDirection as aC, drawPointLegend as aD, distanceBetweenPoints as aE, noop as aF, _setMinAndMaxByKey as aG, niceNum as aH, almostWhole as aI, almostEquals as aJ, _decimalPlaces as aK, Ticks as aL, log10 as aM, _longestText as aN, _filterBetween as aO, _lookup as aP, isPatternOrGradient as aQ, getHoverColor as aR, clone$1 as aS, _merger as aT, _mergerIf as aU, _deprecated as aV, _splitKey as aW, toFontString as aX, splineCurve as aY, splineCurveMonotone as aZ, getStyle as a_, _descriptors as aa, mergeIf as ab, uid as ac, debounce as ad, retinaScale as ae, clearCanvas as af, setsEqual as ag, _elementsEqual as ah, _isClickEvent as ai, _isBetween as aj, _readValueToProps as ak, _updateBezierControlPoints as al, _computeSegments as am, _boundSegments as an, _steppedInterpolation as ao, _bezierInterpolation as ap, _pointInLine as aq, _steppedLineTo as ar, _bezierCurveTo as as, drawPoint as at, addRoundedRectPath as au, toTRBL as av, toTRBLCorners as aw, _boundSegment as ax, _normalizeAngle as ay, getRtlAdapter as az, isArray as b, toLineHeight as b0, PITAU as b1, INFINITY as b2, RAD_PER_DEG as b3, QUARTER_PI as b4, TWO_THIRDS_PI as b5, _angleDiff as b6, color as c, defaults as d, effects$1 as e, resolveObjectKey as f, isNumberFinite as g, defined as h, isObject as i, createContext as j, isNullOrUndef as k, listenArrayEvents as l, toPercentage as m, toDimension as n, formatNumber as o, _angleBetween as p, _getStartAndCountOfVisiblePoints as q, requestAnimFrame as r, sign as s, toRadians as t, unlistenArrayEvents as u, valueOrDefault as v, _scaleRangesChanged as w, isNumber as x, _parseObjectDataRadialScale as y, getRelativePosition as z };\n//# sourceMappingURL=helpers.segment.js.map\n","/*!\n * Chart.js v4.0.1\n * https://www.chartjs.org\n * (c) 2022 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, i as isObject, d as defaults, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as createContext, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, T as TAU, m as toPercentage, n as toDimension, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as _getStartAndCountOfVisiblePoints, w as _scaleRangesChanged, x as isNumber, y as _parseObjectDataRadialScale, z as getRelativePosition, A as _rlookupByKey, B as _lookupByKey, C as _isPointInArea, D as getAngleFromPoint, E as toPadding, F as each, G as getMaximumSize, I as _getParentNode, J as readUsedSize, K as supportsEventListenerOptions, L as throttled, M as _isDomSupported, N as _factorize, O as finiteOrDefault, Q as callback, R as _addGrace, S as _limitValue, U as toDegrees, V as _measureText, W as _int16Range, X as _alignPixel, Y as clipArea, Z as renderText, $ as unclipArea, a0 as toFont, a1 as _toLeftRightCenter, a2 as _alignStartEnd, a3 as overrides, a4 as merge, a5 as _capitalize, a6 as descriptors, a7 as isFunction, a8 as _attachContext, a9 as _createResolver, aa as _descriptors, ab as mergeIf, ac as uid, ad as debounce, ae as retinaScale, af as clearCanvas, ag as setsEqual, ah as _elementsEqual, ai as _isClickEvent, aj as _isBetween, ak as _readValueToProps, al as _updateBezierControlPoints, am as _computeSegments, an as _boundSegments, ao as _steppedInterpolation, ap as _bezierInterpolation, aq as _pointInLine, ar as _steppedLineTo, as as _bezierCurveTo, at as drawPoint, au as addRoundedRectPath, av as toTRBL, aw as toTRBLCorners, ax as _boundSegment, ay as _normalizeAngle, az as getRtlAdapter, aA as overrideTextDirection, aB as _textX, aC as restoreTextDirection, aD as drawPointLegend, aE as distanceBetweenPoints, aF as noop, aG as _setMinAndMaxByKey, aH as niceNum, aI as almostWhole, aJ as almostEquals, aK as _decimalPlaces, aL as Ticks, aM as log10, aN as _longestText, aO as _filterBetween, aP as _lookup } from './chunks/helpers.segment.js';\nexport { aL as Ticks, d as defaults } from './chunks/helpers.segment.js';\n\nclass Animator {\n    constructor(){\n        this._request = null;\n        this._charts = new Map();\n        this._running = false;\n        this._lastDate = undefined;\n    }\n _notify(chart, anims, date, type) {\n        const callbacks = anims.listeners[type];\n        const numSteps = anims.duration;\n        callbacks.forEach((fn)=>fn({\n                chart,\n                initial: anims.initial,\n                numSteps,\n                currentStep: Math.min(date - anims.start, numSteps)\n            }));\n    }\n _refresh() {\n        if (this._request) {\n            return;\n        }\n        this._running = true;\n        this._request = requestAnimFrame.call(window, ()=>{\n            this._update();\n            this._request = null;\n            if (this._running) {\n                this._refresh();\n            }\n        });\n    }\n _update(date = Date.now()) {\n        let remaining = 0;\n        this._charts.forEach((anims, chart)=>{\n            if (!anims.running || !anims.items.length) {\n                return;\n            }\n            const items = anims.items;\n            let i = items.length - 1;\n            let draw = false;\n            let item;\n            for(; i >= 0; --i){\n                item = items[i];\n                if (item._active) {\n                    if (item._total > anims.duration) {\n                        anims.duration = item._total;\n                    }\n                    item.tick(date);\n                    draw = true;\n                } else {\n                    items[i] = items[items.length - 1];\n                    items.pop();\n                }\n            }\n            if (draw) {\n                chart.draw();\n                this._notify(chart, anims, date, 'progress');\n            }\n            if (!items.length) {\n                anims.running = false;\n                this._notify(chart, anims, date, 'complete');\n                anims.initial = false;\n            }\n            remaining += items.length;\n        });\n        this._lastDate = date;\n        if (remaining === 0) {\n            this._running = false;\n        }\n    }\n _getAnims(chart) {\n        const charts = this._charts;\n        let anims = charts.get(chart);\n        if (!anims) {\n            anims = {\n                running: false,\n                initial: true,\n                items: [],\n                listeners: {\n                    complete: [],\n                    progress: []\n                }\n            };\n            charts.set(chart, anims);\n        }\n        return anims;\n    }\n listen(chart, event, cb) {\n        this._getAnims(chart).listeners[event].push(cb);\n    }\n add(chart, items) {\n        if (!items || !items.length) {\n            return;\n        }\n        this._getAnims(chart).items.push(...items);\n    }\n has(chart) {\n        return this._getAnims(chart).items.length > 0;\n    }\n start(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims) {\n            return;\n        }\n        anims.running = true;\n        anims.start = Date.now();\n        anims.duration = anims.items.reduce((acc, cur)=>Math.max(acc, cur._duration), 0);\n        this._refresh();\n    }\n    running(chart) {\n        if (!this._running) {\n            return false;\n        }\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.running || !anims.items.length) {\n            return false;\n        }\n        return true;\n    }\n stop(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.items.length) {\n            return;\n        }\n        const items = anims.items;\n        let i = items.length - 1;\n        for(; i >= 0; --i){\n            items[i].cancel();\n        }\n        anims.items = [];\n        this._notify(chart, anims, Date.now(), 'complete');\n    }\n remove(chart) {\n        return this._charts.delete(chart);\n    }\n}\nvar animator = /* #__PURE__ */ new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n    boolean (from, to, factor) {\n        return factor > 0.5 ? to : from;\n    },\n color (from, to, factor) {\n        const c0 = color(from || transparent);\n        const c1 = c0.valid && color(to || transparent);\n        return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n    },\n    number (from, to, factor) {\n        return from + (to - from) * factor;\n    }\n};\nclass Animation {\n    constructor(cfg, target, prop, to){\n        const currentValue = target[prop];\n        to = resolve([\n            cfg.to,\n            to,\n            currentValue,\n            cfg.from\n        ]);\n        const from = resolve([\n            cfg.from,\n            currentValue,\n            to\n        ]);\n        this._active = true;\n        this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n        this._easing = effects[cfg.easing] || effects.linear;\n        this._start = Math.floor(Date.now() + (cfg.delay || 0));\n        this._duration = this._total = Math.floor(cfg.duration);\n        this._loop = !!cfg.loop;\n        this._target = target;\n        this._prop = prop;\n        this._from = from;\n        this._to = to;\n        this._promises = undefined;\n    }\n    active() {\n        return this._active;\n    }\n    update(cfg, to, date) {\n        if (this._active) {\n            this._notify(false);\n            const currentValue = this._target[this._prop];\n            const elapsed = date - this._start;\n            const remain = this._duration - elapsed;\n            this._start = date;\n            this._duration = Math.floor(Math.max(remain, cfg.duration));\n            this._total += elapsed;\n            this._loop = !!cfg.loop;\n            this._to = resolve([\n                cfg.to,\n                to,\n                currentValue,\n                cfg.from\n            ]);\n            this._from = resolve([\n                cfg.from,\n                currentValue,\n                to\n            ]);\n        }\n    }\n    cancel() {\n        if (this._active) {\n            this.tick(Date.now());\n            this._active = false;\n            this._notify(false);\n        }\n    }\n    tick(date) {\n        const elapsed = date - this._start;\n        const duration = this._duration;\n        const prop = this._prop;\n        const from = this._from;\n        const loop = this._loop;\n        const to = this._to;\n        let factor;\n        this._active = from !== to && (loop || elapsed < duration);\n        if (!this._active) {\n            this._target[prop] = to;\n            this._notify(true);\n            return;\n        }\n        if (elapsed < 0) {\n            this._target[prop] = from;\n            return;\n        }\n        factor = elapsed / duration % 2;\n        factor = loop && factor > 1 ? 2 - factor : factor;\n        factor = this._easing(Math.min(1, Math.max(0, factor)));\n        this._target[prop] = this._fn(from, to, factor);\n    }\n    wait() {\n        const promises = this._promises || (this._promises = []);\n        return new Promise((res, rej)=>{\n            promises.push({\n                res,\n                rej\n            });\n        });\n    }\n    _notify(resolved) {\n        const method = resolved ? 'res' : 'rej';\n        const promises = this._promises || [];\n        for(let i = 0; i < promises.length; i++){\n            promises[i][method]();\n        }\n    }\n}\n\nclass Animations {\n    constructor(chart, config){\n        this._chart = chart;\n        this._properties = new Map();\n        this.configure(config);\n    }\n    configure(config) {\n        if (!isObject(config)) {\n            return;\n        }\n        const animationOptions = Object.keys(defaults.animation);\n        const animatedProps = this._properties;\n        Object.getOwnPropertyNames(config).forEach((key)=>{\n            const cfg = config[key];\n            if (!isObject(cfg)) {\n                return;\n            }\n            const resolved = {};\n            for (const option of animationOptions){\n                resolved[option] = cfg[option];\n            }\n            (isArray(cfg.properties) && cfg.properties || [\n                key\n            ]).forEach((prop)=>{\n                if (prop === key || !animatedProps.has(prop)) {\n                    animatedProps.set(prop, resolved);\n                }\n            });\n        });\n    }\n _animateOptions(target, values) {\n        const newOptions = values.options;\n        const options = resolveTargetOptions(target, newOptions);\n        if (!options) {\n            return [];\n        }\n        const animations = this._createAnimations(options, newOptions);\n        if (newOptions.$shared) {\n            awaitAll(target.options.$animations, newOptions).then(()=>{\n                target.options = newOptions;\n            }, ()=>{\n            });\n        }\n        return animations;\n    }\n _createAnimations(target, values) {\n        const animatedProps = this._properties;\n        const animations = [];\n        const running = target.$animations || (target.$animations = {});\n        const props = Object.keys(values);\n        const date = Date.now();\n        let i;\n        for(i = props.length - 1; i >= 0; --i){\n            const prop = props[i];\n            if (prop.charAt(0) === '$') {\n                continue;\n            }\n            if (prop === 'options') {\n                animations.push(...this._animateOptions(target, values));\n                continue;\n            }\n            const value = values[prop];\n            let animation = running[prop];\n            const cfg = animatedProps.get(prop);\n            if (animation) {\n                if (cfg && animation.active()) {\n                    animation.update(cfg, value, date);\n                    continue;\n                } else {\n                    animation.cancel();\n                }\n            }\n            if (!cfg || !cfg.duration) {\n                target[prop] = value;\n                continue;\n            }\n            running[prop] = animation = new Animation(cfg, target, prop, value);\n            animations.push(animation);\n        }\n        return animations;\n    }\n update(target, values) {\n        if (this._properties.size === 0) {\n            Object.assign(target, values);\n            return;\n        }\n        const animations = this._createAnimations(target, values);\n        if (animations.length) {\n            animator.add(this._chart, animations);\n            return true;\n        }\n    }\n}function awaitAll(animations, properties) {\n    const running = [];\n    const keys = Object.keys(properties);\n    for(let i = 0; i < keys.length; i++){\n        const anim = animations[keys[i]];\n        if (anim && anim.active()) {\n            running.push(anim.wait());\n        }\n    }\n    return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n    if (!newOptions) {\n        return;\n    }\n    let options = target.options;\n    if (!options) {\n        target.options = newOptions;\n        return;\n    }\n    if (options.$shared) {\n        target.options = options = Object.assign({}, options, {\n            $shared: false,\n            $animations: {}\n        });\n    }\n    return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n    const opts = scale && scale.options || {};\n    const reverse = opts.reverse;\n    const min = opts.min === undefined ? allowedOverflow : 0;\n    const max = opts.max === undefined ? allowedOverflow : 0;\n    return {\n        start: reverse ? max : min,\n        end: reverse ? min : max\n    };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n    if (allowedOverflow === false) {\n        return false;\n    }\n    const x = scaleClip(xScale, allowedOverflow);\n    const y = scaleClip(yScale, allowedOverflow);\n    return {\n        top: y.end,\n        right: x.end,\n        bottom: y.start,\n        left: x.start\n    };\n}\nfunction toClip(value) {\n    let t, r, b, l;\n    if (isObject(value)) {\n        t = value.top;\n        r = value.right;\n        b = value.bottom;\n        l = value.left;\n    } else {\n        t = r = b = l = value;\n    }\n    return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        disabled: value === false\n    };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n    const keys = [];\n    const metasets = chart._getSortedDatasetMetas(filterVisible);\n    let i, ilen;\n    for(i = 0, ilen = metasets.length; i < ilen; ++i){\n        keys.push(metasets[i].index);\n    }\n    return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n    const keys = stack.keys;\n    const singleMode = options.mode === 'single';\n    let i, ilen, datasetIndex, otherValue;\n    if (value === null) {\n        return;\n    }\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        datasetIndex = +keys[i];\n        if (datasetIndex === dsIndex) {\n            if (options.all) {\n                continue;\n            }\n            break;\n        }\n        otherValue = stack.values[datasetIndex];\n        if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n            value += otherValue;\n        }\n    }\n    return value;\n}\nfunction convertObjectDataToArray(data) {\n    const keys = Object.keys(data);\n    const adata = new Array(keys.length);\n    let i, ilen, key;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        key = keys[i];\n        adata[i] = {\n            x: key,\n            y: data[key]\n        };\n    }\n    return adata;\n}\nfunction isStacked(scale, meta) {\n    const stacked = scale && scale.options.stacked;\n    return stacked || stacked === undefined && meta.stack !== undefined;\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n    return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n    const { min , max , minDefined , maxDefined  } = scale.getUserBounds();\n    return {\n        min: minDefined ? min : Number.NEGATIVE_INFINITY,\n        max: maxDefined ? max : Number.POSITIVE_INFINITY\n    };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n    const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n    return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n    for (const meta of vScale.getMatchingVisibleMetas(type).reverse()){\n        const value = stack[meta.index];\n        if (positive && value > 0 || !positive && value < 0) {\n            return meta.index;\n        }\n    }\n    return null;\n}\nfunction updateStacks(controller, parsed) {\n    const { chart , _cachedMeta: meta  } = controller;\n    const stacks = chart._stacks || (chart._stacks = {});\n    const { iScale , vScale , index: datasetIndex  } = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const key = getStackKey(iScale, vScale, meta);\n    const ilen = parsed.length;\n    let stack;\n    for(let i = 0; i < ilen; ++i){\n        const item = parsed[i];\n        const { [iAxis]: index , [vAxis]: value  } = item;\n        const itemStacks = item._stacks || (item._stacks = {});\n        stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n        stack[datasetIndex] = value;\n        stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n        stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n    }\n}\nfunction getFirstScaleId(chart, axis) {\n    const scales = chart.scales;\n    return Object.keys(scales).filter((key)=>scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n    return createContext(parent, {\n        active: false,\n        dataset: undefined,\n        datasetIndex: index,\n        index,\n        mode: 'default',\n        type: 'dataset'\n    });\n}\nfunction createDataContext(parent, index, element) {\n    return createContext(parent, {\n        active: false,\n        dataIndex: index,\n        parsed: undefined,\n        raw: undefined,\n        element,\n        index,\n        mode: 'default',\n        type: 'data'\n    });\n}\nfunction clearStacks(meta, items) {\n    const datasetIndex = meta.controller.index;\n    const axis = meta.vScale && meta.vScale.axis;\n    if (!axis) {\n        return;\n    }\n    items = items || meta._parsed;\n    for (const parsed of items){\n        const stacks = parsed._stacks;\n        if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n            return;\n        }\n        delete stacks[axis][datasetIndex];\n    }\n}\nconst isDirectUpdateMode = (mode)=>mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared)=>shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart)=>canStack && !meta.hidden && meta._stacked && {\n        keys: getSortedDatasetIndices(chart, true),\n        values: null\n    };\nclass DatasetController {\n static defaults = {};\n static datasetElementType = null;\n static dataElementType = null;\n constructor(chart, datasetIndex){\n        this.chart = chart;\n        this._ctx = chart.ctx;\n        this.index = datasetIndex;\n        this._cachedDataOpts = {};\n        this._cachedMeta = this.getMeta();\n        this._type = this._cachedMeta.type;\n        this.options = undefined;\n         this._parsing = false;\n        this._data = undefined;\n        this._objectData = undefined;\n        this._sharedOptions = undefined;\n        this._drawStart = undefined;\n        this._drawCount = undefined;\n        this.enableOptionSharing = false;\n        this.supportsDecimation = false;\n        this.$context = undefined;\n        this._syncList = [];\n        this.datasetElementType = new.target.datasetElementType;\n        this.dataElementType = new.target.dataElementType;\n        this.initialize();\n    }\n    initialize() {\n        const meta = this._cachedMeta;\n        this.configure();\n        this.linkScales();\n        meta._stacked = isStacked(meta.vScale, meta);\n        this.addElements();\n        if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n            console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n        }\n    }\n    updateIndex(datasetIndex) {\n        if (this.index !== datasetIndex) {\n            clearStacks(this._cachedMeta);\n        }\n        this.index = datasetIndex;\n    }\n    linkScales() {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        const chooseId = (axis, x, y, r)=>axis === 'x' ? x : axis === 'r' ? r : y;\n        const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n        const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n        const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n        const indexAxis = meta.indexAxis;\n        const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n        const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n        meta.xScale = this.getScaleForId(xid);\n        meta.yScale = this.getScaleForId(yid);\n        meta.rScale = this.getScaleForId(rid);\n        meta.iScale = this.getScaleForId(iid);\n        meta.vScale = this.getScaleForId(vid);\n    }\n    getDataset() {\n        return this.chart.data.datasets[this.index];\n    }\n    getMeta() {\n        return this.chart.getDatasetMeta(this.index);\n    }\n getScaleForId(scaleID) {\n        return this.chart.scales[scaleID];\n    }\n _getOtherScale(scale) {\n        const meta = this._cachedMeta;\n        return scale === meta.iScale ? meta.vScale : meta.iScale;\n    }\n    reset() {\n        this._update('reset');\n    }\n _destroy() {\n        const meta = this._cachedMeta;\n        if (this._data) {\n            unlistenArrayEvents(this._data, this);\n        }\n        if (meta._stacked) {\n            clearStacks(meta);\n        }\n    }\n _dataCheck() {\n        const dataset = this.getDataset();\n        const data = dataset.data || (dataset.data = []);\n        const _data = this._data;\n        if (isObject(data)) {\n            this._data = convertObjectDataToArray(data);\n        } else if (_data !== data) {\n            if (_data) {\n                unlistenArrayEvents(_data, this);\n                const meta = this._cachedMeta;\n                clearStacks(meta);\n                meta._parsed = [];\n            }\n            if (data && Object.isExtensible(data)) {\n                listenArrayEvents(data, this);\n            }\n            this._syncList = [];\n            this._data = data;\n        }\n    }\n    addElements() {\n        const meta = this._cachedMeta;\n        this._dataCheck();\n        if (this.datasetElementType) {\n            meta.dataset = new this.datasetElementType();\n        }\n    }\n    buildOrUpdateElements(resetNewElements) {\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        let stackChanged = false;\n        this._dataCheck();\n        const oldStacked = meta._stacked;\n        meta._stacked = isStacked(meta.vScale, meta);\n        if (meta.stack !== dataset.stack) {\n            stackChanged = true;\n            clearStacks(meta);\n            meta.stack = dataset.stack;\n        }\n        this._resyncElements(resetNewElements);\n        if (stackChanged || oldStacked !== meta._stacked) {\n            updateStacks(this, meta._parsed);\n        }\n    }\n configure() {\n        const config = this.chart.config;\n        const scopeKeys = config.datasetScopeKeys(this._type);\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n        this.options = config.createResolver(scopes, this.getContext());\n        this._parsing = this.options.parsing;\n        this._cachedDataOpts = {};\n    }\n parse(start, count) {\n        const { _cachedMeta: meta , _data: data  } = this;\n        const { iScale , _stacked  } = meta;\n        const iAxis = iScale.axis;\n        let sorted = start === 0 && count === data.length ? true : meta._sorted;\n        let prev = start > 0 && meta._parsed[start - 1];\n        let i, cur, parsed;\n        if (this._parsing === false) {\n            meta._parsed = data;\n            meta._sorted = true;\n            parsed = data;\n        } else {\n            if (isArray(data[start])) {\n                parsed = this.parseArrayData(meta, data, start, count);\n            } else if (isObject(data[start])) {\n                parsed = this.parseObjectData(meta, data, start, count);\n            } else {\n                parsed = this.parsePrimitiveData(meta, data, start, count);\n            }\n            const isNotInOrderComparedToPrev = ()=>cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n            for(i = 0; i < count; ++i){\n                meta._parsed[i + start] = cur = parsed[i];\n                if (sorted) {\n                    if (isNotInOrderComparedToPrev()) {\n                        sorted = false;\n                    }\n                    prev = cur;\n                }\n            }\n            meta._sorted = sorted;\n        }\n        if (_stacked) {\n            updateStacks(this, parsed);\n        }\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const labels = iScale.getLabels();\n        const singleScale = iScale === vScale;\n        const parsed = new Array(count);\n        let i, ilen, index;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            parsed[i] = {\n                [iAxis]: singleScale || iScale.parse(labels[index], index),\n                [vAxis]: vScale.parse(data[index], index)\n            };\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(item[0], index),\n                y: yScale.parse(item[1], index)\n            };\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n                y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n            };\n        }\n        return parsed;\n    }\n getParsed(index) {\n        return this._cachedMeta._parsed[index];\n    }\n getDataElement(index) {\n        return this._cachedMeta.data[index];\n    }\n applyStack(scale, parsed, mode) {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const value = parsed[scale.axis];\n        const stack = {\n            keys: getSortedDatasetIndices(chart, true),\n            values: parsed._stacks[scale.axis]\n        };\n        return applyStack(stack, value, meta.index, {\n            mode\n        });\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        const parsedValue = parsed[scale.axis];\n        let value = parsedValue === null ? NaN : parsedValue;\n        const values = stack && parsed._stacks[scale.axis];\n        if (stack && values) {\n            stack.values = values;\n            value = applyStack(stack, parsedValue, this._cachedMeta.index);\n        }\n        range.min = Math.min(range.min, value);\n        range.max = Math.max(range.max, value);\n    }\n getMinMax(scale, canStack) {\n        const meta = this._cachedMeta;\n        const _parsed = meta._parsed;\n        const sorted = meta._sorted && scale === meta.iScale;\n        const ilen = _parsed.length;\n        const otherScale = this._getOtherScale(scale);\n        const stack = createStack(canStack, meta, this.chart);\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        const { min: otherMin , max: otherMax  } = getUserBounds(otherScale);\n        let i, parsed;\n        function _skip() {\n            parsed = _parsed[i];\n            const otherValue = parsed[otherScale.axis];\n            return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n        }\n        for(i = 0; i < ilen; ++i){\n            if (_skip()) {\n                continue;\n            }\n            this.updateRangeFromParsed(range, scale, parsed, stack);\n            if (sorted) {\n                break;\n            }\n        }\n        if (sorted) {\n            for(i = ilen - 1; i >= 0; --i){\n                if (_skip()) {\n                    continue;\n                }\n                this.updateRangeFromParsed(range, scale, parsed, stack);\n                break;\n            }\n        }\n        return range;\n    }\n    getAllParsedValues(scale) {\n        const parsed = this._cachedMeta._parsed;\n        const values = [];\n        let i, ilen, value;\n        for(i = 0, ilen = parsed.length; i < ilen; ++i){\n            value = parsed[i][scale.axis];\n            if (isNumberFinite(value)) {\n                values.push(value);\n            }\n        }\n        return values;\n    }\n getMaxOverflow() {\n        return false;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const vScale = meta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n            value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n        };\n    }\n _update(mode) {\n        const meta = this._cachedMeta;\n        this.update(mode || 'default');\n        meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n    }\n update(mode) {}\n    draw() {\n        const ctx = this._ctx;\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const elements = meta.data || [];\n        const area = chart.chartArea;\n        const active = [];\n        const start = this._drawStart || 0;\n        const count = this._drawCount || elements.length - start;\n        const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n        let i;\n        if (meta.dataset) {\n            meta.dataset.draw(ctx, area, start, count);\n        }\n        for(i = start; i < start + count; ++i){\n            const element = elements[i];\n            if (element.hidden) {\n                continue;\n            }\n            if (element.active && drawActiveElementsOnTop) {\n                active.push(element);\n            } else {\n                element.draw(ctx, area);\n            }\n        }\n        for(i = 0; i < active.length; ++i){\n            active[i].draw(ctx, area);\n        }\n    }\n getStyle(index, active) {\n        const mode = active ? 'active' : 'default';\n        return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n    }\n getContext(index, active, mode) {\n        const dataset = this.getDataset();\n        let context;\n        if (index >= 0 && index < this._cachedMeta.data.length) {\n            const element = this._cachedMeta.data[index];\n            context = element.$context || (element.$context = createDataContext(this.getContext(), index, element));\n            context.parsed = this.getParsed(index);\n            context.raw = dataset.data[index];\n            context.index = context.dataIndex = index;\n        } else {\n            context = this.$context || (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n            context.dataset = dataset;\n            context.index = context.datasetIndex = this.index;\n        }\n        context.active = !!active;\n        context.mode = mode;\n        return context;\n    }\n resolveDatasetElementOptions(mode) {\n        return this._resolveElementOptions(this.datasetElementType.id, mode);\n    }\n resolveDataElementOptions(index, mode) {\n        return this._resolveElementOptions(this.dataElementType.id, mode, index);\n    }\n _resolveElementOptions(elementType, mode = 'default', index) {\n        const active = mode === 'active';\n        const cache = this._cachedDataOpts;\n        const cacheKey = elementType + '-' + mode;\n        const cached = cache[cacheKey];\n        const sharing = this.enableOptionSharing && defined(index);\n        if (cached) {\n            return cloneIfNotShared(cached, sharing);\n        }\n        const config = this.chart.config;\n        const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n        const prefixes = active ? [\n            `${elementType}Hover`,\n            'hover',\n            elementType,\n            ''\n        ] : [\n            elementType,\n            ''\n        ];\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n        const names = Object.keys(defaults.elements[elementType]);\n        const context = ()=>this.getContext(index, active);\n        const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n        if (values.$shared) {\n            values.$shared = sharing;\n            cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n        }\n        return values;\n    }\n _resolveAnimations(index, transition, active) {\n        const chart = this.chart;\n        const cache = this._cachedDataOpts;\n        const cacheKey = `animation-${transition}`;\n        const cached = cache[cacheKey];\n        if (cached) {\n            return cached;\n        }\n        let options;\n        if (chart.options.animation !== false) {\n            const config = this.chart.config;\n            const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n            const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n            options = config.createResolver(scopes, this.getContext(index, active, transition));\n        }\n        const animations = new Animations(chart, options && options.animations);\n        if (options && options._cacheable) {\n            cache[cacheKey] = Object.freeze(animations);\n        }\n        return animations;\n    }\n getSharedOptions(options) {\n        if (!options.$shared) {\n            return;\n        }\n        return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n    }\n includeOptions(mode, sharedOptions) {\n        return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n    }\n _getSharedOptions(start, mode) {\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const previouslySharedOptions = this._sharedOptions;\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions) || sharedOptions !== previouslySharedOptions;\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n        return {\n            sharedOptions,\n            includeOptions\n        };\n    }\n updateElement(element, index, properties, mode) {\n        if (isDirectUpdateMode(mode)) {\n            Object.assign(element, properties);\n        } else {\n            this._resolveAnimations(index, mode).update(element, properties);\n        }\n    }\n updateSharedOptions(sharedOptions, mode, newOptions) {\n        if (sharedOptions && !isDirectUpdateMode(mode)) {\n            this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n        }\n    }\n _setStyle(element, index, mode, active) {\n        element.active = active;\n        const options = this.getStyle(index, active);\n        this._resolveAnimations(index, mode, active).update(element, {\n            options: !active && this.getSharedOptions(options) || options\n        });\n    }\n    removeHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', false);\n    }\n    setHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', true);\n    }\n _removeDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', false);\n        }\n    }\n _setDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', true);\n        }\n    }\n _resyncElements(resetNewElements) {\n        const data = this._data;\n        const elements = this._cachedMeta.data;\n        for (const [method, arg1, arg2] of this._syncList){\n            this[method](arg1, arg2);\n        }\n        this._syncList = [];\n        const numMeta = elements.length;\n        const numData = data.length;\n        const count = Math.min(numData, numMeta);\n        if (count) {\n            this.parse(0, count);\n        }\n        if (numData > numMeta) {\n            this._insertElements(numMeta, numData - numMeta, resetNewElements);\n        } else if (numData < numMeta) {\n            this._removeElements(numData, numMeta - numData);\n        }\n    }\n _insertElements(start, count, resetNewElements = true) {\n        const meta = this._cachedMeta;\n        const data = meta.data;\n        const end = start + count;\n        let i;\n        const move = (arr)=>{\n            arr.length += count;\n            for(i = arr.length - 1; i >= end; i--){\n                arr[i] = arr[i - count];\n            }\n        };\n        move(data);\n        for(i = start; i < end; ++i){\n            data[i] = new this.dataElementType();\n        }\n        if (this._parsing) {\n            move(meta._parsed);\n        }\n        this.parse(start, count);\n        if (resetNewElements) {\n            this.updateElements(data, start, count, 'reset');\n        }\n    }\n    updateElements(element, start, count, mode) {}\n _removeElements(start, count) {\n        const meta = this._cachedMeta;\n        if (this._parsing) {\n            const removed = meta._parsed.splice(start, count);\n            if (meta._stacked) {\n                clearStacks(meta, removed);\n            }\n        }\n        meta.data.splice(start, count);\n    }\n _sync(args) {\n        if (this._parsing) {\n            this._syncList.push(args);\n        } else {\n            const [method, arg1, arg2] = args;\n            this[method](arg1, arg2);\n        }\n        this.chart._dataChanges.push([\n            this.index,\n            ...args\n        ]);\n    }\n    _onDataPush() {\n        const count = arguments.length;\n        this._sync([\n            '_insertElements',\n            this.getDataset().data.length - count,\n            count\n        ]);\n    }\n    _onDataPop() {\n        this._sync([\n            '_removeElements',\n            this._cachedMeta.data.length - 1,\n            1\n        ]);\n    }\n    _onDataShift() {\n        this._sync([\n            '_removeElements',\n            0,\n            1\n        ]);\n    }\n    _onDataSplice(start, count) {\n        if (count) {\n            this._sync([\n                '_removeElements',\n                start,\n                count\n            ]);\n        }\n        const newCount = arguments.length - 2;\n        if (newCount) {\n            this._sync([\n                '_insertElements',\n                start,\n                newCount\n            ]);\n        }\n    }\n    _onDataUnshift() {\n        this._sync([\n            '_insertElements',\n            0,\n            arguments.length\n        ]);\n    }\n}\n\nfunction getAllScaleValues(scale, type) {\n    if (!scale._cache.$bar) {\n        const visibleMetas = scale.getMatchingVisibleMetas(type);\n        let values = [];\n        for(let i = 0, ilen = visibleMetas.length; i < ilen; i++){\n            values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n        }\n        scale._cache.$bar = _arrayUnique(values.sort((a, b)=>a - b));\n    }\n    return scale._cache.$bar;\n}\n function computeMinSampleSize(meta) {\n    const scale = meta.iScale;\n    const values = getAllScaleValues(scale, meta.type);\n    let min = scale._length;\n    let i, ilen, curr, prev;\n    const updateMinAndPrev = ()=>{\n        if (curr === 32767 || curr === -32768) {\n            return;\n        }\n        if (defined(prev)) {\n            min = Math.min(min, Math.abs(curr - prev) || min);\n        }\n        prev = curr;\n    };\n    for(i = 0, ilen = values.length; i < ilen; ++i){\n        curr = scale.getPixelForValue(values[i]);\n        updateMinAndPrev();\n    }\n    prev = undefined;\n    for(i = 0, ilen = scale.ticks.length; i < ilen; ++i){\n        curr = scale.getPixelForTick(i);\n        updateMinAndPrev();\n    }\n    return min;\n}\n function computeFitCategoryTraits(index, ruler, options, stackCount) {\n    const thickness = options.barThickness;\n    let size, ratio;\n    if (isNullOrUndef(thickness)) {\n        size = ruler.min * options.categoryPercentage;\n        ratio = options.barPercentage;\n    } else {\n        size = thickness * stackCount;\n        ratio = 1;\n    }\n    return {\n        chunk: size / stackCount,\n        ratio,\n        start: ruler.pixels[index] - size / 2\n    };\n}\n function computeFlexCategoryTraits(index, ruler, options, stackCount) {\n    const pixels = ruler.pixels;\n    const curr = pixels[index];\n    let prev = index > 0 ? pixels[index - 1] : null;\n    let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    const percent = options.categoryPercentage;\n    if (prev === null) {\n        prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n    if (next === null) {\n        next = curr + curr - prev;\n    }\n    const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    const size = Math.abs(next - prev) / 2 * percent;\n    return {\n        chunk: size / stackCount,\n        ratio: options.barPercentage,\n        start\n    };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n    const startValue = vScale.parse(entry[0], i);\n    const endValue = vScale.parse(entry[1], i);\n    const min = Math.min(startValue, endValue);\n    const max = Math.max(startValue, endValue);\n    let barStart = min;\n    let barEnd = max;\n    if (Math.abs(min) > Math.abs(max)) {\n        barStart = max;\n        barEnd = min;\n    }\n    item[vScale.axis] = barEnd;\n    item._custom = {\n        barStart,\n        barEnd,\n        start: startValue,\n        end: endValue,\n        min,\n        max\n    };\n}\nfunction parseValue(entry, item, vScale, i) {\n    if (isArray(entry)) {\n        parseFloatBar(entry, item, vScale, i);\n    } else {\n        item[vScale.axis] = vScale.parse(entry, i);\n    }\n    return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = [];\n    let i, ilen, item, entry;\n    for(i = start, ilen = start + count; i < ilen; ++i){\n        entry = data[i];\n        item = {};\n        item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n        parsed.push(parseValue(entry, item, vScale, i));\n    }\n    return parsed;\n}\nfunction isFloatBar(custom) {\n    return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n    if (size !== 0) {\n        return sign(size);\n    }\n    return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n    let reverse, start, end, top, bottom;\n    if (properties.horizontal) {\n        reverse = properties.base > properties.x;\n        start = 'left';\n        end = 'right';\n    } else {\n        reverse = properties.base < properties.y;\n        start = 'bottom';\n        end = 'top';\n    }\n    if (reverse) {\n        top = 'end';\n        bottom = 'start';\n    } else {\n        top = 'start';\n        bottom = 'end';\n    }\n    return {\n        start,\n        end,\n        reverse,\n        top,\n        bottom\n    };\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n    let edge = options.borderSkipped;\n    const res = {};\n    if (!edge) {\n        properties.borderSkipped = res;\n        return;\n    }\n    if (edge === true) {\n        properties.borderSkipped = {\n            top: true,\n            right: true,\n            bottom: true,\n            left: true\n        };\n        return;\n    }\n    const { start , end , reverse , top , bottom  } = borderProps(properties);\n    if (edge === 'middle' && stack) {\n        properties.enableBorderRadius = true;\n        if ((stack._top || 0) === index) {\n            edge = top;\n        } else if ((stack._bottom || 0) === index) {\n            edge = bottom;\n        } else {\n            res[parseEdge(bottom, start, end, reverse)] = true;\n            edge = top;\n        }\n    }\n    res[parseEdge(edge, start, end, reverse)] = true;\n    properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n    if (reverse) {\n        edge = swap(edge, a, b);\n        edge = startEnd(edge, b, a);\n    } else {\n        edge = startEnd(edge, a, b);\n    }\n    return edge;\n}\nfunction swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n    return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, { inflateAmount  }, ratio) {\n    properties.inflateAmount = inflateAmount === 'auto' ? ratio === 1 ? 0.33 : 0 : inflateAmount;\n}\nclass BarController extends DatasetController {\n    static id = 'bar';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'bar',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        grouped: true,\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'base',\n                    'width',\n                    'height'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category',\n                offset: true,\n                grid: {\n                    offset: true\n                }\n            },\n            _value_: {\n                type: 'linear',\n                beginAtZero: true\n            }\n        }\n    };\n parsePrimitiveData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseArrayData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseObjectData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const parsed = [];\n        let i, ilen, item, obj;\n        for(i = start, ilen = start + count; i < ilen; ++i){\n            obj = data[i];\n            item = {};\n            item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n            parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n        }\n        return parsed;\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        super.updateRangeFromParsed(range, scale, parsed, stack);\n        const custom = parsed._custom;\n        if (custom && scale === this._cachedMeta.vScale) {\n            range.min = Math.min(range.min, custom.min);\n            range.max = Math.max(range.max, custom.max);\n        }\n    }\n getMaxOverflow() {\n        return 0;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const { iScale , vScale  } = meta;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n        return {\n            label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n            value\n        };\n    }\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n        const meta = this._cachedMeta;\n        meta.stack = this.getDataset().stack;\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        this.updateElements(meta.data, 0, meta.data.length, mode);\n    }\n    updateElements(bars, start, count, mode) {\n        const reset = mode === 'reset';\n        const { index , _cachedMeta: { vScale  }  } = this;\n        const base = vScale.getBasePixel();\n        const horizontal = vScale.isHorizontal();\n        const ruler = this._getRuler();\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        for(let i = start; i < start + count; i++){\n            const parsed = this.getParsed(i);\n            const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n                base,\n                head: base\n            } : this._calculateBarValuePixels(i);\n            const ipixels = this._calculateBarIndexPixels(i, ruler);\n            const stack = (parsed._stacks || {})[vScale.axis];\n            const properties = {\n                horizontal,\n                base: vpixels.base,\n                enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n                x: horizontal ? vpixels.head : ipixels.center,\n                y: horizontal ? ipixels.center : vpixels.head,\n                height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n                width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n            }\n            const options = properties.options || bars[i].options;\n            setBorderSkipped(properties, options, stack, index);\n            setInflateAmount(properties, options, ruler.ratio);\n            this.updateElement(bars[i], i, properties, mode);\n        }\n    }\n _getStacks(last, dataIndex) {\n        const { iScale  } = this._cachedMeta;\n        const metasets = iScale.getMatchingVisibleMetas(this._type).filter((meta)=>meta.controller.options.grouped);\n        const stacked = iScale.options.stacked;\n        const stacks = [];\n        const skipNull = (meta)=>{\n            const parsed = meta.controller.getParsed(dataIndex);\n            const val = parsed && parsed[meta.vScale.axis];\n            if (isNullOrUndef(val) || isNaN(val)) {\n                return true;\n            }\n        };\n        for (const meta of metasets){\n            if (dataIndex !== undefined && skipNull(meta)) {\n                continue;\n            }\n            if (stacked === false || stacks.indexOf(meta.stack) === -1 || stacked === undefined && meta.stack === undefined) {\n                stacks.push(meta.stack);\n            }\n            if (meta.index === last) {\n                break;\n            }\n        }\n        if (!stacks.length) {\n            stacks.push(undefined);\n        }\n        return stacks;\n    }\n _getStackCount(index) {\n        return this._getStacks(undefined, index).length;\n    }\n _getStackIndex(datasetIndex, name, dataIndex) {\n        const stacks = this._getStacks(datasetIndex, dataIndex);\n        const index = name !== undefined ? stacks.indexOf(name) : -1;\n        return index === -1 ? stacks.length - 1 : index;\n    }\n _getRuler() {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const pixels = [];\n        let i, ilen;\n        for(i = 0, ilen = meta.data.length; i < ilen; ++i){\n            pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n        }\n        const barThickness = opts.barThickness;\n        const min = barThickness || computeMinSampleSize(meta);\n        return {\n            min,\n            pixels,\n            start: iScale._startPixel,\n            end: iScale._endPixel,\n            stackCount: this._getStackCount(),\n            scale: iScale,\n            grouped: opts.grouped,\n            ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n        };\n    }\n _calculateBarValuePixels(index) {\n        const { _cachedMeta: { vScale , _stacked  } , options: { base: baseValue , minBarLength  }  } = this;\n        const actualBase = baseValue || 0;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const floating = isFloatBar(custom);\n        let value = parsed[vScale.axis];\n        let start = 0;\n        let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n        let head, size;\n        if (length !== value) {\n            start = length - value;\n            length = value;\n        }\n        if (floating) {\n            value = custom.barStart;\n            length = custom.barEnd - custom.barStart;\n            if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n                start = 0;\n            }\n            start += value;\n        }\n        const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n        let base = vScale.getPixelForValue(startValue);\n        if (this.chart.getDataVisibility(index)) {\n            head = vScale.getPixelForValue(start + length);\n        } else {\n            head = base;\n        }\n        size = head - base;\n        if (Math.abs(size) < minBarLength) {\n            size = barSign(size, vScale, actualBase) * minBarLength;\n            if (value === actualBase) {\n                base -= size / 2;\n            }\n            const startPixel = vScale.getPixelForDecimal(0);\n            const endPixel = vScale.getPixelForDecimal(1);\n            const min = Math.min(startPixel, endPixel);\n            const max = Math.max(startPixel, endPixel);\n            base = Math.max(Math.min(base, max), min);\n            head = base + size;\n        }\n        if (base === vScale.getPixelForValue(actualBase)) {\n            const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n            base += halfGrid;\n            size -= halfGrid;\n        }\n        return {\n            size,\n            base,\n            head,\n            center: head + size / 2\n        };\n    }\n _calculateBarIndexPixels(index, ruler) {\n        const scale = ruler.scale;\n        const options = this.options;\n        const skipNull = options.skipNull;\n        const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n        let center, size;\n        if (ruler.grouped) {\n            const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n            const range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount) : computeFitCategoryTraits(index, ruler, options, stackCount);\n            const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n            center = range.start + range.chunk * stackIndex + range.chunk / 2;\n            size = Math.min(maxBarThickness, range.chunk * range.ratio);\n        } else {\n            center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n            size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n        }\n        return {\n            base: center - size / 2,\n            head: center + size / 2,\n            center,\n            size\n        };\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        const vScale = meta.vScale;\n        const rects = meta.data;\n        const ilen = rects.length;\n        let i = 0;\n        for(; i < ilen; ++i){\n            if (this.getParsed(i)[vScale.axis] !== null) {\n                rects[i].draw(this._ctx);\n            }\n        }\n    }\n}\n\nclass BubbleController extends DatasetController {\n    static id = 'bubble';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'borderWidth',\n                    'radius'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const parsed = super.parsePrimitiveData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const parsed = super.parseArrayData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const parsed = super.parseObjectData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n getMaxOverflow() {\n        const data = this._cachedMeta.data;\n        let max = 0;\n        for(let i = data.length - 1; i >= 0; --i){\n            max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n        }\n        return max > 0 && max;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        const r = parsed._custom;\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n        };\n    }\n    update(mode) {\n        const points = this._cachedMeta.data;\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const parsed = !reset && this.getParsed(i);\n            const properties = {};\n            const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n            const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel);\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n                if (reset) {\n                    properties.options.radius = 0;\n                }\n            }\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n resolveDataElementOptions(index, mode) {\n        const parsed = this.getParsed(index);\n        let values = super.resolveDataElementOptions(index, mode);\n        if (values.$shared) {\n            values = Object.assign({}, values, {\n                $shared: false\n            });\n        }\n        const radius = values.radius;\n        if (mode !== 'active') {\n            values.radius = 0;\n        }\n        values.radius += valueOrDefault(parsed && parsed._custom, radius);\n        return values;\n    }\n}\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n    let ratioX = 1;\n    let ratioY = 1;\n    let offsetX = 0;\n    let offsetY = 0;\n    if (circumference < TAU) {\n        const startAngle = rotation;\n        const endAngle = startAngle + circumference;\n        const startX = Math.cos(startAngle);\n        const startY = Math.sin(startAngle);\n        const endX = Math.cos(endAngle);\n        const endY = Math.sin(endAngle);\n        const calcMax = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n        const calcMin = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n        const maxX = calcMax(0, startX, endX);\n        const maxY = calcMax(HALF_PI, startY, endY);\n        const minX = calcMin(PI, startX, endX);\n        const minY = calcMin(PI + HALF_PI, startY, endY);\n        ratioX = (maxX - minX) / 2;\n        ratioY = (maxY - minY) / 2;\n        offsetX = -(maxX + minX) / 2;\n        offsetY = -(maxY + minY) / 2;\n    }\n    return {\n        ratioX,\n        ratioY,\n        offsetX,\n        offsetY\n    };\n}\nclass DoughnutController extends DatasetController {\n    static id = 'doughnut';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: false\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'circumference',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius',\n                    'startAngle',\n                    'x',\n                    'y',\n                    'offset',\n                    'borderWidth',\n                    'spacing'\n                ]\n            }\n        },\n        cutout: '50%',\n        rotation: 0,\n        circumference: 360,\n        radius: '100%',\n        spacing: 0,\n        indexAxis: 'r'\n    };\n    static descriptors = {\n        _scriptable: (name)=>name !== 'spacing',\n        _indexable: (name)=>name !== 'spacing'\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.enableOptionSharing = true;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.offsetX = undefined;\n        this.offsetY = undefined;\n    }\n    linkScales() {}\n parse(start, count) {\n        const data = this.getDataset().data;\n        const meta = this._cachedMeta;\n        if (this._parsing === false) {\n            meta._parsed = data;\n        } else {\n            let getter = (i)=>+data[i];\n            if (isObject(data[start])) {\n                const { key ='value'  } = this._parsing;\n                getter = (i)=>+resolveObjectKey(data[i], key);\n            }\n            let i, ilen;\n            for(i = start, ilen = start + count; i < ilen; ++i){\n                meta._parsed[i] = getter(i);\n            }\n        }\n    }\n _getRotation() {\n        return toRadians(this.options.rotation - 90);\n    }\n _getCircumference() {\n        return toRadians(this.options.circumference);\n    }\n _getRotationExtents() {\n        let min = TAU;\n        let max = -TAU;\n        for(let i = 0; i < this.chart.data.datasets.length; ++i){\n            if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n                const controller = this.chart.getDatasetMeta(i).controller;\n                const rotation = controller._getRotation();\n                const circumference = controller._getCircumference();\n                min = Math.min(min, rotation);\n                max = Math.max(max, rotation + circumference);\n            }\n        }\n        return {\n            rotation: min,\n            circumference: max - min\n        };\n    }\n update(mode) {\n        const chart = this.chart;\n        const { chartArea  } = chart;\n        const meta = this._cachedMeta;\n        const arcs = meta.data;\n        const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n        const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n        const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n        const chartWeight = this._getRingWeight(this.index);\n        const { circumference , rotation  } = this._getRotationExtents();\n        const { ratioX , ratioY , offsetX , offsetY  } = getRatioAndOffset(rotation, circumference, cutout);\n        const maxWidth = (chartArea.width - spacing) / ratioX;\n        const maxHeight = (chartArea.height - spacing) / ratioY;\n        const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n        const outerRadius = toDimension(this.options.radius, maxRadius);\n        const innerRadius = Math.max(outerRadius * cutout, 0);\n        const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n        this.offsetX = offsetX * outerRadius;\n        this.offsetY = offsetY * outerRadius;\n        meta.total = this.calculateTotal();\n        this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n        this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n _circumference(i, reset) {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const circumference = this._getCircumference();\n        if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n            return 0;\n        }\n        return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const centerX = (chartArea.left + chartArea.right) / 2;\n        const centerY = (chartArea.top + chartArea.bottom) / 2;\n        const animateScale = reset && animationOpts.animateScale;\n        const innerRadius = animateScale ? 0 : this.innerRadius;\n        const outerRadius = animateScale ? 0 : this.outerRadius;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        let startAngle = this._getRotation();\n        let i;\n        for(i = 0; i < start; ++i){\n            startAngle += this._circumference(i, reset);\n        }\n        for(i = start; i < start + count; ++i){\n            const circumference = this._circumference(i, reset);\n            const arc = arcs[i];\n            const properties = {\n                x: centerX + this.offsetX,\n                y: centerY + this.offsetY,\n                startAngle,\n                endAngle: startAngle + circumference,\n                circumference,\n                outerRadius,\n                innerRadius\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n            }\n            startAngle += circumference;\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    calculateTotal() {\n        const meta = this._cachedMeta;\n        const metaData = meta.data;\n        let total = 0;\n        let i;\n        for(i = 0; i < metaData.length; i++){\n            const value = meta._parsed[i];\n            if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n                total += Math.abs(value);\n            }\n        }\n        return total;\n    }\n    calculateCircumference(value) {\n        const total = this._cachedMeta.total;\n        if (total > 0 && !isNaN(value)) {\n            return TAU * (Math.abs(value) / total);\n        }\n        return 0;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index], chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    getMaxBorderWidth(arcs) {\n        let max = 0;\n        const chart = this.chart;\n        let i, ilen, meta, controller, options;\n        if (!arcs) {\n            for(i = 0, ilen = chart.data.datasets.length; i < ilen; ++i){\n                if (chart.isDatasetVisible(i)) {\n                    meta = chart.getDatasetMeta(i);\n                    arcs = meta.data;\n                    controller = meta.controller;\n                    break;\n                }\n            }\n        }\n        if (!arcs) {\n            return 0;\n        }\n        for(i = 0, ilen = arcs.length; i < ilen; ++i){\n            options = controller.resolveDataElementOptions(i);\n            if (options.borderAlign !== 'inner') {\n                max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n            }\n        }\n        return max;\n    }\n    getMaxOffset(arcs) {\n        let max = 0;\n        for(let i = 0, ilen = arcs.length; i < ilen; ++i){\n            const options = this.resolveDataElementOptions(i);\n            max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n        }\n        return max;\n    }\n _getRingWeightOffset(datasetIndex) {\n        let ringWeightOffset = 0;\n        for(let i = 0; i < datasetIndex; ++i){\n            if (this.chart.isDatasetVisible(i)) {\n                ringWeightOffset += this._getRingWeight(i);\n            }\n        }\n        return ringWeightOffset;\n    }\n _getRingWeight(datasetIndex) {\n        return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n    }\n _getVisibleDatasetWeightTotal() {\n        return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n    }\n}\n\nclass LineController extends DatasetController {\n    static id = 'line';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        showLine: true,\n        spanGaps: false\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category'\n            },\n            _value_: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        this.supportsDecimation = true;\n        super.initialize();\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { dataset: line , data: points = [] , _dataset  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        line._chart = this.chart;\n        line._datasetIndex = this.index;\n        line._decimated = !!_dataset._decimated;\n        line.points = points;\n        const options = this.resolveDatasetElementOptions(mode);\n        if (!this.options.showLine) {\n            options.borderWidth = 0;\n        }\n        options.segment = this.options.segment;\n        this.updateElement(line, undefined, {\n            animated: !animationsDisabled,\n            options\n        }, mode);\n        this.updateElements(points, start, count, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        const end = start + count;\n        const pointsCount = points.length;\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = 0; i < pointsCount; ++i){\n            const point = points[i];\n            const properties = directUpdate ? point : {};\n            if (i < start || i >= end) {\n                properties.skip = true;\n                continue;\n            }\n            const parsed = this.getParsed(i);\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        const data = meta.data || [];\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n        super.draw();\n    }\n}\n\nclass PolarAreaController extends DatasetController {\n    static id = 'polarArea';\n static defaults = {\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: true\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'startAngle',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius'\n                ]\n            }\n        },\n        indexAxis: 'r',\n        startAngle: 0\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        },\n        scales: {\n            r: {\n                type: 'radialLinear',\n                angleLines: {\n                    display: false\n                },\n                beginAtZero: true,\n                grid: {\n                    circular: true\n                },\n                pointLabels: {\n                    display: false\n                },\n                startAngle: 0\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const arcs = this._cachedMeta.data;\n        this._updateRadius();\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n getMinMax() {\n        const meta = this._cachedMeta;\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        meta.data.forEach((element, index)=>{\n            const parsed = this.getParsed(index).r;\n            if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n                if (parsed < range.min) {\n                    range.min = parsed;\n                }\n                if (parsed > range.max) {\n                    range.max = parsed;\n                }\n            }\n        });\n        return range;\n    }\n _updateRadius() {\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n        const outerRadius = Math.max(minSize / 2, 0);\n        const innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n        const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n        this.outerRadius = outerRadius - radiusLength * this.index;\n        this.innerRadius = this.outerRadius - radiusLength;\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const scale = this._cachedMeta.rScale;\n        const centerX = scale.xCenter;\n        const centerY = scale.yCenter;\n        const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n        let angle = datasetStartAngle;\n        let i;\n        const defaultAngle = 360 / this.countVisibleElements();\n        for(i = 0; i < start; ++i){\n            angle += this._computeAngle(i, mode, defaultAngle);\n        }\n        for(i = start; i < start + count; i++){\n            const arc = arcs[i];\n            let startAngle = angle;\n            let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n            let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n            angle = endAngle;\n            if (reset) {\n                if (animationOpts.animateScale) {\n                    outerRadius = 0;\n                }\n                if (animationOpts.animateRotate) {\n                    startAngle = endAngle = datasetStartAngle;\n                }\n            }\n            const properties = {\n                x: centerX,\n                y: centerY,\n                innerRadius: 0,\n                outerRadius,\n                startAngle,\n                endAngle,\n                options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n            };\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    countVisibleElements() {\n        const meta = this._cachedMeta;\n        let count = 0;\n        meta.data.forEach((element, index)=>{\n            if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n                count++;\n            }\n        });\n        return count;\n    }\n _computeAngle(index, mode, defaultAngle) {\n        return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n    }\n}\n\nclass PieController extends DoughnutController {\n    static id = 'pie';\n static defaults = {\n        cutout: 0,\n        rotation: 0,\n        circumference: 360,\n        radius: '100%'\n    };\n}\n\nclass RadarController extends DatasetController {\n    static id = 'radar';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        indexAxis: 'r',\n        showLine: true,\n        elements: {\n            line: {\n                fill: 'start'\n            }\n        }\n    };\n static overrides = {\n        aspectRatio: 1,\n        scales: {\n            r: {\n                type: 'radialLinear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const vScale = this._cachedMeta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: vScale.getLabels()[index],\n            value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const line = meta.dataset;\n        const points = meta.data || [];\n        const labels = meta.iScale.getLabels();\n        line.points = points;\n        if (mode !== 'resize') {\n            const options = this.resolveDatasetElementOptions(mode);\n            if (!this.options.showLine) {\n                options.borderWidth = 0;\n            }\n            const properties = {\n                _loop: true,\n                _fullLoop: labels.length === points.length,\n                options\n            };\n            this.updateElement(line, undefined, properties, mode);\n        }\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const scale = this._cachedMeta.rScale;\n        const reset = mode === 'reset';\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n            const x = reset ? scale.xCenter : pointPosition.x;\n            const y = reset ? scale.yCenter : pointPosition.y;\n            const properties = {\n                x,\n                y,\n                angle: pointPosition.angle,\n                skip: isNaN(x) || isNaN(y),\n                options\n            };\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n}\n\nclass ScatterController extends DatasetController {\n    static id = 'scatter';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        showLine: false,\n        fill: false\n    };\n static overrides = {\n        interaction: {\n            mode: 'point'\n        },\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + ')'\n        };\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { data: points = []  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        if (this.options.showLine) {\n            const { dataset: line , _dataset  } = meta;\n            line._chart = this.chart;\n            line._datasetIndex = this.index;\n            line._decimated = !!_dataset._decimated;\n            line.points = points;\n            const options = this.resolveDatasetElementOptions(mode);\n            options.segment = this.options.segment;\n            this.updateElement(line, undefined, {\n                animated: !animationsDisabled,\n                options\n            }, mode);\n        }\n        this.updateElements(points, start, count, mode);\n    }\n    addElements() {\n        const { showLine  } = this.options;\n        if (!this.datasetElementType && showLine) {\n            this.datasetElementType = this.chart.registry.getElement('line');\n        }\n        super.addElements();\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = start; i < start + count; ++i){\n            const point = points[i];\n            const parsed = this.getParsed(i);\n            const properties = directUpdate ? point : {};\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const data = meta.data || [];\n        if (!this.options.showLine) {\n            let max = 0;\n            for(let i = data.length - 1; i >= 0; --i){\n                max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n            }\n            return max > 0 && max;\n        }\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n}\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPolarAreaController: PolarAreaController,\nPieController: PieController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\n/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */ function abstract() {\n    throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */ class DateAdapterBase {\n    /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */ static override(members) {\n        Object.assign(DateAdapterBase.prototype, members);\n    }\n    constructor(options){\n        this.options = options || {};\n    }\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    init() {}\n    formats() {\n        return abstract();\n    }\n    parse() {\n        return abstract();\n    }\n    format() {\n        return abstract();\n    }\n    add() {\n        return abstract();\n    }\n    diff() {\n        return abstract();\n    }\n    startOf() {\n        return abstract();\n    }\n    endOf() {\n        return abstract();\n    }\n}\nvar adapters = {\n    _date: DateAdapterBase\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n    const { controller , data , _sorted  } = metaset;\n    const iScale = controller._cachedMeta.iScale;\n    if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n        const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n        if (!intersect) {\n            return lookupMethod(data, axis, value);\n        } else if (controller._sharedOptions) {\n            const el = data[0];\n            const range = typeof el.getRange === 'function' && el.getRange(axis);\n            if (range) {\n                const start = lookupMethod(data, axis, value - range);\n                const end = lookupMethod(data, axis, value + range);\n                return {\n                    lo: start.lo,\n                    hi: end.hi\n                };\n            }\n        }\n    }\n    return {\n        lo: 0,\n        hi: data.length - 1\n    };\n}\n function evaluateInteractionItems(chart, axis, position, handler, intersect) {\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const value = position[axis];\n    for(let i = 0, ilen = metasets.length; i < ilen; ++i){\n        const { index , data  } = metasets[i];\n        const { lo , hi  } = binarySearch(metasets[i], axis, value, intersect);\n        for(let j = lo; j <= hi; ++j){\n            const element = data[j];\n            if (!element.skip) {\n                handler(element, index, j);\n            }\n        }\n    }\n}\n function getDistanceMetricForAxis(axis) {\n    const useX = axis.indexOf('x') !== -1;\n    const useY = axis.indexOf('y') !== -1;\n    return function(pt1, pt2) {\n        const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n        const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n        return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n}\n function getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n    const items = [];\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return items;\n    }\n    const evaluationFunc = function(element, datasetIndex, index) {\n        if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n            return;\n        }\n        if (element.inRange(position.x, position.y, useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    };\n    evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n    return items;\n}\n function getNearestRadialItems(chart, position, axis, useFinalPosition) {\n    let items = [];\n    function evaluationFunc(element, datasetIndex, index) {\n        const { startAngle , endAngle  } = element.getProps([\n            'startAngle',\n            'endAngle'\n        ], useFinalPosition);\n        const { angle  } = getAngleFromPoint(element, {\n            x: position.x,\n            y: position.y\n        });\n        if (_angleBetween(angle, startAngle, endAngle)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    let items = [];\n    const distanceMetric = getDistanceMetricForAxis(axis);\n    let minDistance = Number.POSITIVE_INFINITY;\n    function evaluationFunc(element, datasetIndex, index) {\n        const inRange = element.inRange(position.x, position.y, useFinalPosition);\n        if (intersect && !inRange) {\n            return;\n        }\n        const center = element.getCenterPoint(useFinalPosition);\n        const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n        if (!pointInArea && !inRange) {\n            return;\n        }\n        const distance = distanceMetric(position, center);\n        if (distance < minDistance) {\n            items = [\n                {\n                    element,\n                    datasetIndex,\n                    index\n                }\n            ];\n            minDistance = distance;\n        } else if (distance === minDistance) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return [];\n    }\n    return axis === 'r' && !intersect ? getNearestRadialItems(chart, position, axis, useFinalPosition) : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n function getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n    const items = [];\n    const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n    let intersectsItem = false;\n    evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index)=>{\n        if (element[rangeMethod](position[axis], useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n            intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n        }\n    });\n    if (intersect && !intersectsItem) {\n        return [];\n    }\n    return items;\n}\n var Interaction = {\n    evaluateInteractionItems,\n    modes: {\n index (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'x';\n            const includeInvisible = options.includeInvisible || false;\n            const items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            const elements = [];\n            if (!items.length) {\n                return [];\n            }\n            chart.getSortedVisibleDatasetMetas().forEach((meta)=>{\n                const index = items[0].index;\n                const element = meta.data[index];\n                if (element && !element.skip) {\n                    elements.push({\n                        element,\n                        datasetIndex: meta.index,\n                        index\n                    });\n                }\n            });\n            return elements;\n        },\n dataset (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            let items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            if (items.length > 0) {\n                const datasetIndex = items[0].datasetIndex;\n                const data = chart.getDatasetMeta(datasetIndex).data;\n                items = [];\n                for(let i = 0; i < data.length; ++i){\n                    items.push({\n                        element: data[i],\n                        datasetIndex,\n                        index: i\n                    });\n                }\n            }\n            return items;\n        },\n point (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n        },\n nearest (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n        },\n x (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n        },\n y (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n        }\n    }\n};\n\nconst STATIC_POSITIONS = [\n    'left',\n    'top',\n    'right',\n    'bottom'\n];\nfunction filterByPosition(array, position) {\n    return array.filter((v)=>v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n    return array.filter((v)=>STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n    return array.sort((a, b)=>{\n        const v0 = reverse ? b : a;\n        const v1 = reverse ? a : b;\n        return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n    });\n}\nfunction wrapBoxes(boxes) {\n    const layoutBoxes = [];\n    let i, ilen, box, pos, stack, stackWeight;\n    for(i = 0, ilen = (boxes || []).length; i < ilen; ++i){\n        box = boxes[i];\n        ({ position: pos , options: { stack , stackWeight =1  }  } = box);\n        layoutBoxes.push({\n            index: i,\n            box,\n            pos,\n            horizontal: box.isHorizontal(),\n            weight: box.weight,\n            stack: stack && pos + stack,\n            stackWeight\n        });\n    }\n    return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n    const stacks = {};\n    for (const wrap of layouts){\n        const { stack , pos , stackWeight  } = wrap;\n        if (!stack || !STATIC_POSITIONS.includes(pos)) {\n            continue;\n        }\n        const _stack = stacks[stack] || (stacks[stack] = {\n            count: 0,\n            placed: 0,\n            weight: 0,\n            size: 0\n        });\n        _stack.count++;\n        _stack.weight += stackWeight;\n    }\n    return stacks;\n}\n function setLayoutDims(layouts, params) {\n    const stacks = buildStacks(layouts);\n    const { vBoxMaxWidth , hBoxMaxHeight  } = params;\n    let i, ilen, layout;\n    for(i = 0, ilen = layouts.length; i < ilen; ++i){\n        layout = layouts[i];\n        const { fullSize  } = layout.box;\n        const stack = stacks[layout.stack];\n        const factor = stack && layout.stackWeight / stack.weight;\n        if (layout.horizontal) {\n            layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n            layout.height = hBoxMaxHeight;\n        } else {\n            layout.width = vBoxMaxWidth;\n            layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n        }\n    }\n    return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n    const layoutBoxes = wrapBoxes(boxes);\n    const fullSize = sortByWeight(layoutBoxes.filter((wrap)=>wrap.box.fullSize), true);\n    const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n    const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n    const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n    const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n    const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n    const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n    return {\n        fullSize,\n        leftAndTop: left.concat(top),\n        rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n        chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n        vertical: left.concat(right).concat(centerVertical),\n        horizontal: top.concat(bottom).concat(centerHorizontal)\n    };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n    return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n    maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n    maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n    maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n    maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n    const { pos , box  } = layout;\n    const maxPadding = chartArea.maxPadding;\n    if (!isObject(pos)) {\n        if (layout.size) {\n            chartArea[pos] -= layout.size;\n        }\n        const stack = stacks[layout.stack] || {\n            size: 0,\n            count: 1\n        };\n        stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n        layout.size = stack.size / stack.count;\n        chartArea[pos] += layout.size;\n    }\n    if (box.getPadding) {\n        updateMaxPadding(maxPadding, box.getPadding());\n    }\n    const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n    const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n    const widthChanged = newWidth !== chartArea.w;\n    const heightChanged = newHeight !== chartArea.h;\n    chartArea.w = newWidth;\n    chartArea.h = newHeight;\n    return layout.horizontal ? {\n        same: widthChanged,\n        other: heightChanged\n    } : {\n        same: heightChanged,\n        other: widthChanged\n    };\n}\nfunction handleMaxPadding(chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function updatePos(pos) {\n        const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n        chartArea[pos] += change;\n        return change;\n    }\n    chartArea.y += updatePos('top');\n    chartArea.x += updatePos('left');\n    updatePos('right');\n    updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function marginForPositions(positions) {\n        const margin = {\n            left: 0,\n            top: 0,\n            right: 0,\n            bottom: 0\n        };\n        positions.forEach((pos)=>{\n            margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n        });\n        return margin;\n    }\n    return horizontal ? marginForPositions([\n        'left',\n        'right'\n    ]) : marginForPositions([\n        'top',\n        'bottom'\n    ]);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n    const refitBoxes = [];\n    let i, ilen, layout, box, refit, changed;\n    for(i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i){\n        layout = boxes[i];\n        box = layout.box;\n        box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n        const { same , other  } = updateDims(chartArea, params, layout, stacks);\n        refit |= same && refitBoxes.length;\n        changed = changed || other;\n        if (!box.fullSize) {\n            refitBoxes.push(layout);\n        }\n    }\n    return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n    box.top = top;\n    box.left = left;\n    box.right = left + width;\n    box.bottom = top + height;\n    box.width = width;\n    box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n    const userPadding = params.padding;\n    let { x , y  } = chartArea;\n    for (const layout of boxes){\n        const box = layout.box;\n        const stack = stacks[layout.stack] || {\n            count: 1,\n            placed: 0,\n            weight: 1\n        };\n        const weight = layout.stackWeight / stack.weight || 1;\n        if (layout.horizontal) {\n            const width = chartArea.w * weight;\n            const height = stack.size || box.height;\n            if (defined(stack.start)) {\n                y = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n            } else {\n                setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n            }\n            stack.start = y;\n            stack.placed += width;\n            y = box.bottom;\n        } else {\n            const height1 = chartArea.h * weight;\n            const width1 = stack.size || box.width;\n            if (defined(stack.start)) {\n                x = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, x, userPadding.top, width1, params.outerHeight - userPadding.bottom - userPadding.top);\n            } else {\n                setBoxDims(box, x, chartArea.top + stack.placed, width1, height1);\n            }\n            stack.start = x;\n            stack.placed += height1;\n            x = box.right;\n        }\n    }\n    chartArea.x = x;\n    chartArea.y = y;\n}\nvar layouts = {\n addBox (chart, item) {\n        if (!chart.boxes) {\n            chart.boxes = [];\n        }\n        item.fullSize = item.fullSize || false;\n        item.position = item.position || 'top';\n        item.weight = item.weight || 0;\n        item._layers = item._layers || function() {\n            return [\n                {\n                    z: 0,\n                    draw (chartArea) {\n                        item.draw(chartArea);\n                    }\n                }\n            ];\n        };\n        chart.boxes.push(item);\n    },\n removeBox (chart, layoutItem) {\n        const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n        if (index !== -1) {\n            chart.boxes.splice(index, 1);\n        }\n    },\n configure (chart, item, options) {\n        item.fullSize = options.fullSize;\n        item.position = options.position;\n        item.weight = options.weight;\n    },\n update (chart, width, height, minPadding) {\n        if (!chart) {\n            return;\n        }\n        const padding = toPadding(chart.options.layout.padding);\n        const availableWidth = Math.max(width - padding.width, 0);\n        const availableHeight = Math.max(height - padding.height, 0);\n        const boxes = buildLayoutBoxes(chart.boxes);\n        const verticalBoxes = boxes.vertical;\n        const horizontalBoxes = boxes.horizontal;\n        each(chart.boxes, (box)=>{\n            if (typeof box.beforeLayout === 'function') {\n                box.beforeLayout();\n            }\n        });\n        const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap)=>wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n        const params = Object.freeze({\n            outerWidth: width,\n            outerHeight: height,\n            padding,\n            availableWidth,\n            availableHeight,\n            vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n            hBoxMaxHeight: availableHeight / 2\n        });\n        const maxPadding = Object.assign({}, padding);\n        updateMaxPadding(maxPadding, toPadding(minPadding));\n        const chartArea = Object.assign({\n            maxPadding,\n            w: availableWidth,\n            h: availableHeight,\n            x: padding.left,\n            y: padding.top\n        }, padding);\n        const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n        fitBoxes(boxes.fullSize, chartArea, params, stacks);\n        fitBoxes(verticalBoxes, chartArea, params, stacks);\n        if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n            fitBoxes(verticalBoxes, chartArea, params, stacks);\n        }\n        handleMaxPadding(chartArea);\n        placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n        chartArea.x += chartArea.w;\n        chartArea.y += chartArea.h;\n        placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n        chart.chartArea = {\n            left: chartArea.left,\n            top: chartArea.top,\n            right: chartArea.left + chartArea.w,\n            bottom: chartArea.top + chartArea.h,\n            height: chartArea.h,\n            width: chartArea.w\n        };\n        each(boxes.chartArea, (layout)=>{\n            const box = layout.box;\n            Object.assign(box, chart.chartArea);\n            box.update(chartArea.w, chartArea.h, {\n                left: 0,\n                top: 0,\n                right: 0,\n                bottom: 0\n            });\n        });\n    }\n};\n\nclass BasePlatform {\n acquireContext(canvas, aspectRatio) {}\n releaseContext(context) {\n        return false;\n    }\n addEventListener(chart, type, listener) {}\n removeEventListener(chart, type, listener) {}\n getDevicePixelRatio() {\n        return 1;\n    }\n getMaximumSize(element, width, height, aspectRatio) {\n        width = Math.max(0, width || element.width);\n        height = height || element.height;\n        return {\n            width,\n            height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n        };\n    }\n isAttached(canvas) {\n        return true;\n    }\n updateConfig(config) {\n    }\n}\n\nclass BasicPlatform extends BasePlatform {\n    acquireContext(item) {\n        return item && item.getContext && item.getContext('2d') || null;\n    }\n    updateConfig(config) {\n        config.options.animation = false;\n    }\n}\n\nconst EXPANDO_KEY = '$chartjs';\n const EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n};\nconst isNullOrEmpty = (value)=>value === null || value === '';\n function initCanvas(canvas, aspectRatio) {\n    const style = canvas.style;\n    const renderHeight = canvas.getAttribute('height');\n    const renderWidth = canvas.getAttribute('width');\n    canvas[EXPANDO_KEY] = {\n        initial: {\n            height: renderHeight,\n            width: renderWidth,\n            style: {\n                display: style.display,\n                height: style.height,\n                width: style.width\n            }\n        }\n    };\n    style.display = style.display || 'block';\n    style.boxSizing = style.boxSizing || 'border-box';\n    if (isNullOrEmpty(renderWidth)) {\n        const displayWidth = readUsedSize(canvas, 'width');\n        if (displayWidth !== undefined) {\n            canvas.width = displayWidth;\n        }\n    }\n    if (isNullOrEmpty(renderHeight)) {\n        if (canvas.style.height === '') {\n            canvas.height = canvas.width / (aspectRatio || 2);\n        } else {\n            const displayHeight = readUsedSize(canvas, 'height');\n            if (displayHeight !== undefined) {\n                canvas.height = displayHeight;\n            }\n        }\n    }\n    return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n} : false;\nfunction addListener(node, type, listener) {\n    node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n    chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n    const type = EVENT_TYPES[event.type] || event.type;\n    const { x , y  } = getRelativePosition(event, chart);\n    return {\n        type,\n        chart,\n        native: event,\n        x: x !== undefined ? x : null,\n        y: y !== undefined ? y : null\n    };\n}\nfunction nodeListContains(nodeList, canvas) {\n    for (const node of nodeList){\n        if (node === canvas || node.contains(canvas)) {\n            return true;\n        }\n    }\n}\nfunction createAttachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n    const dpr = window.devicePixelRatio;\n    if (dpr === oldDevicePixelRatio) {\n        return;\n    }\n    oldDevicePixelRatio = dpr;\n    drpListeningCharts.forEach((resize, chart)=>{\n        if (chart.currentDevicePixelRatio !== dpr) {\n            resize();\n        }\n    });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n    if (!drpListeningCharts.size) {\n        window.addEventListener('resize', onWindowResize);\n    }\n    drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n    drpListeningCharts.delete(chart);\n    if (!drpListeningCharts.size) {\n        window.removeEventListener('resize', onWindowResize);\n    }\n}\nfunction createResizeObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const container = canvas && _getParentNode(canvas);\n    if (!container) {\n        return;\n    }\n    const resize = throttled((width, height)=>{\n        const w = container.clientWidth;\n        listener(width, height);\n        if (w < container.clientWidth) {\n            listener();\n        }\n    }, window);\n    const observer = new ResizeObserver((entries)=>{\n        const entry = entries[0];\n        const width = entry.contentRect.width;\n        const height = entry.contentRect.height;\n        if (width === 0 && height === 0) {\n            return;\n        }\n        resize(width, height);\n    });\n    observer.observe(container);\n    listenDevicePixelRatioChanges(chart, resize);\n    return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n    if (observer) {\n        observer.disconnect();\n    }\n    if (type === 'resize') {\n        unlistenDevicePixelRatioChanges(chart);\n    }\n}\nfunction createProxyAndListen(chart, type, listener) {\n    const canvas = chart.canvas;\n    const proxy = throttled((event)=>{\n        if (chart.ctx !== null) {\n            listener(fromNativeEvent(event, chart));\n        }\n    }, chart);\n    addListener(canvas, type, proxy);\n    return proxy;\n}\n class DomPlatform extends BasePlatform {\n acquireContext(canvas, aspectRatio) {\n        const context = canvas && canvas.getContext && canvas.getContext('2d');\n        if (context && context.canvas === canvas) {\n            initCanvas(canvas, aspectRatio);\n            return context;\n        }\n        return null;\n    }\n releaseContext(context) {\n        const canvas = context.canvas;\n        if (!canvas[EXPANDO_KEY]) {\n            return false;\n        }\n        const initial = canvas[EXPANDO_KEY].initial;\n        [\n            'height',\n            'width'\n        ].forEach((prop)=>{\n            const value = initial[prop];\n            if (isNullOrUndef(value)) {\n                canvas.removeAttribute(prop);\n            } else {\n                canvas.setAttribute(prop, value);\n            }\n        });\n        const style = initial.style || {};\n        Object.keys(style).forEach((key)=>{\n            canvas.style[key] = style[key];\n        });\n        canvas.width = canvas.width;\n        delete canvas[EXPANDO_KEY];\n        return true;\n    }\n addEventListener(chart, type, listener) {\n        this.removeEventListener(chart, type);\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const handlers = {\n            attach: createAttachObserver,\n            detach: createDetachObserver,\n            resize: createResizeObserver\n        };\n        const handler = handlers[type] || createProxyAndListen;\n        proxies[type] = handler(chart, type, listener);\n    }\n removeEventListener(chart, type) {\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const proxy = proxies[type];\n        if (!proxy) {\n            return;\n        }\n        const handlers = {\n            attach: releaseObserver,\n            detach: releaseObserver,\n            resize: releaseObserver\n        };\n        const handler = handlers[type] || removeListener;\n        handler(chart, type, proxy);\n        proxies[type] = undefined;\n    }\n    getDevicePixelRatio() {\n        return window.devicePixelRatio;\n    }\n getMaximumSize(canvas, width, height, aspectRatio) {\n        return getMaximumSize(canvas, width, height, aspectRatio);\n    }\n isAttached(canvas) {\n        const container = _getParentNode(canvas);\n        return !!(container && container.isConnected);\n    }\n}\n\nfunction _detectPlatform(canvas) {\n    if (!_isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n        return BasicPlatform;\n    }\n    return DomPlatform;\n}\n\nclass Element {\n    static defaults = {};\n    static defaultRoutes = undefined;\n    active = false;\n    tooltipPosition(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    hasValue() {\n        return isNumber(this.x) && isNumber(this.y);\n    }\n    getProps(props, final) {\n        const anims = this.$animations;\n        if (!final || !anims) {\n            // let's not create an object, if not needed\n            return this;\n        }\n        const ret = {};\n        props.forEach((prop)=>{\n            ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n        });\n        return ret;\n    }\n}\n\nfunction autoSkip(scale, ticks) {\n    const tickOpts = scale.options.ticks;\n    const determinedMaxTicks = determineMaxTicks(scale);\n    const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n    const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n    const numMajorIndices = majorIndices.length;\n    const first = majorIndices[0];\n    const last = majorIndices[numMajorIndices - 1];\n    const newTicks = [];\n    if (numMajorIndices > ticksLimit) {\n        skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n        return newTicks;\n    }\n    const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n    if (numMajorIndices > 0) {\n        let i, ilen;\n        const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n        skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n        for(i = 0, ilen = numMajorIndices - 1; i < ilen; i++){\n            skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n        }\n        skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n        return newTicks;\n    }\n    skip(ticks, newTicks, spacing);\n    return newTicks;\n}\nfunction determineMaxTicks(scale) {\n    const offset = scale.options.offset;\n    const tickLength = scale._tickSize();\n    const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n    const maxChart = scale._maxLength / tickLength;\n    return Math.floor(Math.min(maxScale, maxChart));\n}\n function calculateSpacing(majorIndices, ticks, ticksLimit) {\n    const evenMajorSpacing = getEvenSpacing(majorIndices);\n    const spacing = ticks.length / ticksLimit;\n    if (!evenMajorSpacing) {\n        return Math.max(spacing, 1);\n    }\n    const factors = _factorize(evenMajorSpacing);\n    for(let i = 0, ilen = factors.length - 1; i < ilen; i++){\n        const factor = factors[i];\n        if (factor > spacing) {\n            return factor;\n        }\n    }\n    return Math.max(spacing, 1);\n}\n function getMajorIndices(ticks) {\n    const result = [];\n    let i, ilen;\n    for(i = 0, ilen = ticks.length; i < ilen; i++){\n        if (ticks[i].major) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n function skipMajors(ticks, newTicks, majorIndices, spacing) {\n    let count = 0;\n    let next = majorIndices[0];\n    let i;\n    spacing = Math.ceil(spacing);\n    for(i = 0; i < ticks.length; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = majorIndices[count * spacing];\n        }\n    }\n}\n function skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n    const start = valueOrDefault(majorStart, 0);\n    const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n    let count = 0;\n    let length, i, next;\n    spacing = Math.ceil(spacing);\n    if (majorEnd) {\n        length = majorEnd - majorStart;\n        spacing = length / Math.floor(length / spacing);\n    }\n    next = start;\n    while(next < 0){\n        count++;\n        next = Math.round(start + count * spacing);\n    }\n    for(i = Math.max(start, 0); i < end; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = Math.round(start + count * spacing);\n        }\n    }\n}\n function getEvenSpacing(arr) {\n    const len = arr.length;\n    let i, diff;\n    if (len < 2) {\n        return false;\n    }\n    for(diff = arr[0], i = 1; i < len; ++i){\n        if (arr[i] - arr[i - 1] !== diff) {\n            return false;\n        }\n    }\n    return diff;\n}\n\nconst reverseAlign = (align)=>align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset)=>edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\n function sample(arr, numItems) {\n    const result = [];\n    const increment = arr.length / numItems;\n    const len = arr.length;\n    let i = 0;\n    for(; i < len; i += increment){\n        result.push(arr[Math.floor(i)]);\n    }\n    return result;\n}\n function getPixelForGridLine(scale, index, offsetGridLines) {\n    const length = scale.ticks.length;\n    const validIndex = Math.min(index, length - 1);\n    const start = scale._startPixel;\n    const end = scale._endPixel;\n    const epsilon = 1e-6;\n    let lineValue = scale.getPixelForTick(validIndex);\n    let offset;\n    if (offsetGridLines) {\n        if (length === 1) {\n            offset = Math.max(lineValue - start, end - lineValue);\n        } else if (index === 0) {\n            offset = (scale.getPixelForTick(1) - lineValue) / 2;\n        } else {\n            offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n        }\n        lineValue += validIndex < index ? offset : -offset;\n        if (lineValue < start - epsilon || lineValue > end + epsilon) {\n            return;\n        }\n    }\n    return lineValue;\n}\n function garbageCollect(caches, length) {\n    each(caches, (cache)=>{\n        const gc = cache.gc;\n        const gcLen = gc.length / 2;\n        let i;\n        if (gcLen > length) {\n            for(i = 0; i < gcLen; ++i){\n                delete cache.data[gc[i]];\n            }\n            gc.splice(0, gcLen);\n        }\n    });\n}\n function getTickMarkLength(options) {\n    return options.drawTicks ? options.tickLength : 0;\n}\n function getTitleHeight(options, fallback) {\n    if (!options.display) {\n        return 0;\n    }\n    const font = toFont(options.font, fallback);\n    const padding = toPadding(options.padding);\n    const lines = isArray(options.text) ? options.text.length : 1;\n    return lines * font.lineHeight + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n    return createContext(parent, {\n        scale,\n        type: 'scale'\n    });\n}\nfunction createTickContext(parent, index, tick) {\n    return createContext(parent, {\n        tick,\n        index,\n        type: 'tick'\n    });\n}\nfunction titleAlign(align, position, reverse) {\n    let ret = _toLeftRightCenter(align);\n    if (reverse && position !== 'right' || !reverse && position === 'right') {\n        ret = reverseAlign(ret);\n    }\n    return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n    const { top , left , bottom , right , chart  } = scale;\n    const { chartArea , scales  } = chart;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    const height = bottom - top;\n    const width = right - left;\n    if (scale.isHorizontal()) {\n        titleX = _alignStartEnd(align, left, right);\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n        } else if (position === 'center') {\n            titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n        } else {\n            titleY = offsetFromEdge(scale, position, offset);\n        }\n        maxWidth = right - left;\n    } else {\n        if (isObject(position)) {\n            const positionAxisID1 = Object.keys(position)[0];\n            const value1 = position[positionAxisID1];\n            titleX = scales[positionAxisID1].getPixelForValue(value1) - width + offset;\n        } else if (position === 'center') {\n            titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n        } else {\n            titleX = offsetFromEdge(scale, position, offset);\n        }\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = position === 'left' ? -HALF_PI : HALF_PI;\n    }\n    return {\n        titleX,\n        titleY,\n        maxWidth,\n        rotation\n    };\n}\nclass Scale extends Element {\n    constructor(cfg){\n        super();\n         this.id = cfg.id;\n         this.type = cfg.type;\n         this.options = undefined;\n         this.ctx = cfg.ctx;\n         this.chart = cfg.chart;\n         this.top = undefined;\n         this.bottom = undefined;\n         this.left = undefined;\n         this.right = undefined;\n         this.width = undefined;\n         this.height = undefined;\n        this._margins = {\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        };\n         this.maxWidth = undefined;\n         this.maxHeight = undefined;\n         this.paddingTop = undefined;\n         this.paddingBottom = undefined;\n         this.paddingLeft = undefined;\n         this.paddingRight = undefined;\n         this.axis = undefined;\n         this.labelRotation = undefined;\n        this.min = undefined;\n        this.max = undefined;\n        this._range = undefined;\n         this.ticks = [];\n         this._gridLineItems = null;\n         this._labelItems = null;\n         this._labelSizes = null;\n        this._length = 0;\n        this._maxLength = 0;\n        this._longestTextCache = {};\n         this._startPixel = undefined;\n         this._endPixel = undefined;\n        this._reversePixels = false;\n        this._userMax = undefined;\n        this._userMin = undefined;\n        this._suggestedMax = undefined;\n        this._suggestedMin = undefined;\n        this._ticksLength = 0;\n        this._borderValue = 0;\n        this._cache = {};\n        this._dataLimitsCached = false;\n        this.$context = undefined;\n    }\n init(options) {\n        this.options = options.setContext(this.getContext());\n        this.axis = options.axis;\n        this._userMin = this.parse(options.min);\n        this._userMax = this.parse(options.max);\n        this._suggestedMin = this.parse(options.suggestedMin);\n        this._suggestedMax = this.parse(options.suggestedMax);\n    }\n parse(raw, index) {\n        return raw;\n    }\n getUserBounds() {\n        let { _userMin , _userMax , _suggestedMin , _suggestedMax  } = this;\n        _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n        _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n        _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n        _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n        return {\n            min: finiteOrDefault(_userMin, _suggestedMin),\n            max: finiteOrDefault(_userMax, _suggestedMax),\n            minDefined: isNumberFinite(_userMin),\n            maxDefined: isNumberFinite(_userMax)\n        };\n    }\n getMinMax(canStack) {\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n        let range;\n        if (minDefined && maxDefined) {\n            return {\n                min,\n                max\n            };\n        }\n        const metas = this.getMatchingVisibleMetas();\n        for(let i = 0, ilen = metas.length; i < ilen; ++i){\n            range = metas[i].controller.getMinMax(this, canStack);\n            if (!minDefined) {\n                min = Math.min(min, range.min);\n            }\n            if (!maxDefined) {\n                max = Math.max(max, range.max);\n            }\n        }\n        min = maxDefined && min > max ? max : min;\n        max = minDefined && min > max ? min : max;\n        return {\n            min: finiteOrDefault(min, finiteOrDefault(max, min)),\n            max: finiteOrDefault(max, finiteOrDefault(min, max))\n        };\n    }\n getPadding() {\n        return {\n            left: this.paddingLeft || 0,\n            top: this.paddingTop || 0,\n            right: this.paddingRight || 0,\n            bottom: this.paddingBottom || 0\n        };\n    }\n getTicks() {\n        return this.ticks;\n    }\n getLabels() {\n        const data = this.chart.data;\n        return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n    }\n    beforeLayout() {\n        this._cache = {};\n        this._dataLimitsCached = false;\n    }\n    beforeUpdate() {\n        callback(this.options.beforeUpdate, [\n            this\n        ]);\n    }\n update(maxWidth, maxHeight, margins) {\n        const { beginAtZero , grace , ticks: tickOpts  } = this.options;\n        const sampleSize = tickOpts.sampleSize;\n        this.beforeUpdate();\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins = Object.assign({\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        }, margins);\n        this.ticks = null;\n        this._labelSizes = null;\n        this._gridLineItems = null;\n        this._labelItems = null;\n        this.beforeSetDimensions();\n        this.setDimensions();\n        this.afterSetDimensions();\n        this._maxLength = this.isHorizontal() ? this.width + margins.left + margins.right : this.height + margins.top + margins.bottom;\n        if (!this._dataLimitsCached) {\n            this.beforeDataLimits();\n            this.determineDataLimits();\n            this.afterDataLimits();\n            this._range = _addGrace(this, grace, beginAtZero);\n            this._dataLimitsCached = true;\n        }\n        this.beforeBuildTicks();\n        this.ticks = this.buildTicks() || [];\n        this.afterBuildTicks();\n        const samplingEnabled = sampleSize < this.ticks.length;\n        this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n        this.configure();\n        this.beforeCalculateLabelRotation();\n        this.calculateLabelRotation();\n        this.afterCalculateLabelRotation();\n        if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n            this.ticks = autoSkip(this, this.ticks);\n            this._labelSizes = null;\n            this.afterAutoSkip();\n        }\n        if (samplingEnabled) {\n            this._convertTicksToLabels(this.ticks);\n        }\n        this.beforeFit();\n        this.fit();\n        this.afterFit();\n        this.afterUpdate();\n    }\n configure() {\n        let reversePixels = this.options.reverse;\n        let startPixel, endPixel;\n        if (this.isHorizontal()) {\n            startPixel = this.left;\n            endPixel = this.right;\n        } else {\n            startPixel = this.top;\n            endPixel = this.bottom;\n            reversePixels = !reversePixels;\n        }\n        this._startPixel = startPixel;\n        this._endPixel = endPixel;\n        this._reversePixels = reversePixels;\n        this._length = endPixel - startPixel;\n        this._alignToPixels = this.options.alignToPixels;\n    }\n    afterUpdate() {\n        callback(this.options.afterUpdate, [\n            this\n        ]);\n    }\n    beforeSetDimensions() {\n        callback(this.options.beforeSetDimensions, [\n            this\n        ]);\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = 0;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = 0;\n            this.bottom = this.height;\n        }\n        this.paddingLeft = 0;\n        this.paddingTop = 0;\n        this.paddingRight = 0;\n        this.paddingBottom = 0;\n    }\n    afterSetDimensions() {\n        callback(this.options.afterSetDimensions, [\n            this\n        ]);\n    }\n    _callHooks(name) {\n        this.chart.notifyPlugins(name, this.getContext());\n        callback(this.options[name], [\n            this\n        ]);\n    }\n    beforeDataLimits() {\n        this._callHooks('beforeDataLimits');\n    }\n    determineDataLimits() {}\n    afterDataLimits() {\n        this._callHooks('afterDataLimits');\n    }\n    beforeBuildTicks() {\n        this._callHooks('beforeBuildTicks');\n    }\n buildTicks() {\n        return [];\n    }\n    afterBuildTicks() {\n        this._callHooks('afterBuildTicks');\n    }\n    beforeTickToLabelConversion() {\n        callback(this.options.beforeTickToLabelConversion, [\n            this\n        ]);\n    }\n generateTickLabels(ticks) {\n        const tickOpts = this.options.ticks;\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            tick = ticks[i];\n            tick.label = callback(tickOpts.callback, [\n                tick.value,\n                i,\n                ticks\n            ], this);\n        }\n    }\n    afterTickToLabelConversion() {\n        callback(this.options.afterTickToLabelConversion, [\n            this\n        ]);\n    }\n    beforeCalculateLabelRotation() {\n        callback(this.options.beforeCalculateLabelRotation, [\n            this\n        ]);\n    }\n    calculateLabelRotation() {\n        const options = this.options;\n        const tickOpts = options.ticks;\n        const numTicks = this.ticks.length;\n        const minRotation = tickOpts.minRotation || 0;\n        const maxRotation = tickOpts.maxRotation;\n        let labelRotation = minRotation;\n        let tickWidth, maxHeight, maxLabelDiagonal;\n        if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n            this.labelRotation = minRotation;\n            return;\n        }\n        const labelSizes = this._getLabelSizes();\n        const maxLabelWidth = labelSizes.widest.width;\n        const maxLabelHeight = labelSizes.highest.height;\n        const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n        tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n        if (maxLabelWidth + 6 > tickWidth) {\n            tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n            maxHeight = this.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n            maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n            labelRotation = toDegrees(Math.min(Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n            labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n        }\n        this.labelRotation = labelRotation;\n    }\n    afterCalculateLabelRotation() {\n        callback(this.options.afterCalculateLabelRotation, [\n            this\n        ]);\n    }\n    afterAutoSkip() {}\n    beforeFit() {\n        callback(this.options.beforeFit, [\n            this\n        ]);\n    }\n    fit() {\n        const minSize = {\n            width: 0,\n            height: 0\n        };\n        const { chart , options: { ticks: tickOpts , title: titleOpts , grid: gridOpts  }  } = this;\n        const display = this._isVisible();\n        const isHorizontal = this.isHorizontal();\n        if (display) {\n            const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n            if (isHorizontal) {\n                minSize.width = this.maxWidth;\n                minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n            } else {\n                minSize.height = this.maxHeight;\n                minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n            }\n            if (tickOpts.display && this.ticks.length) {\n                const { first , last , widest , highest  } = this._getLabelSizes();\n                const tickPadding = tickOpts.padding * 2;\n                const angleRadians = toRadians(this.labelRotation);\n                const cos = Math.cos(angleRadians);\n                const sin = Math.sin(angleRadians);\n                if (isHorizontal) {\n                    const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n                    minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n                } else {\n                    const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n                    minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n                }\n                this._calculatePadding(first, last, sin, cos);\n            }\n        }\n        this._handleMargins();\n        if (isHorizontal) {\n            this.width = this._length = chart.width - this._margins.left - this._margins.right;\n            this.height = minSize.height;\n        } else {\n            this.width = minSize.width;\n            this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n        }\n    }\n    _calculatePadding(first, last, sin, cos) {\n        const { ticks: { align , padding  } , position  } = this.options;\n        const isRotated = this.labelRotation !== 0;\n        const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n        if (this.isHorizontal()) {\n            const offsetLeft = this.getPixelForTick(0) - this.left;\n            const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n            let paddingLeft = 0;\n            let paddingRight = 0;\n            if (isRotated) {\n                if (labelsBelowTicks) {\n                    paddingLeft = cos * first.width;\n                    paddingRight = sin * last.height;\n                } else {\n                    paddingLeft = sin * first.height;\n                    paddingRight = cos * last.width;\n                }\n            } else if (align === 'start') {\n                paddingRight = last.width;\n            } else if (align === 'end') {\n                paddingLeft = first.width;\n            } else if (align !== 'inner') {\n                paddingLeft = first.width / 2;\n                paddingRight = last.width / 2;\n            }\n            this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n            this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n        } else {\n            let paddingTop = last.height / 2;\n            let paddingBottom = first.height / 2;\n            if (align === 'start') {\n                paddingTop = 0;\n                paddingBottom = first.height;\n            } else if (align === 'end') {\n                paddingTop = last.height;\n                paddingBottom = 0;\n            }\n            this.paddingTop = paddingTop + padding;\n            this.paddingBottom = paddingBottom + padding;\n        }\n    }\n _handleMargins() {\n        if (this._margins) {\n            this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n            this._margins.top = Math.max(this.paddingTop, this._margins.top);\n            this._margins.right = Math.max(this.paddingRight, this._margins.right);\n            this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n        }\n    }\n    afterFit() {\n        callback(this.options.afterFit, [\n            this\n        ]);\n    }\n isHorizontal() {\n        const { axis , position  } = this.options;\n        return position === 'top' || position === 'bottom' || axis === 'x';\n    }\n isFullSize() {\n        return this.options.fullSize;\n    }\n _convertTicksToLabels(ticks) {\n        this.beforeTickToLabelConversion();\n        this.generateTickLabels(ticks);\n        let i, ilen;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            if (isNullOrUndef(ticks[i].label)) {\n                ticks.splice(i, 1);\n                ilen--;\n                i--;\n            }\n        }\n        this.afterTickToLabelConversion();\n    }\n _getLabelSizes() {\n        let labelSizes = this._labelSizes;\n        if (!labelSizes) {\n            const sampleSize = this.options.ticks.sampleSize;\n            let ticks = this.ticks;\n            if (sampleSize < ticks.length) {\n                ticks = sample(ticks, sampleSize);\n            }\n            this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length);\n        }\n        return labelSizes;\n    }\n _computeLabelSizes(ticks, length) {\n        const { ctx , _longestTextCache: caches  } = this;\n        const widths = [];\n        const heights = [];\n        let widestLabelSize = 0;\n        let highestLabelSize = 0;\n        let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n        for(i = 0; i < length; ++i){\n            label = ticks[i].label;\n            tickFont = this._resolveTickFontOptions(i);\n            ctx.font = fontString = tickFont.string;\n            cache = caches[fontString] = caches[fontString] || {\n                data: {},\n                gc: []\n            };\n            lineHeight = tickFont.lineHeight;\n            width = height = 0;\n            if (!isNullOrUndef(label) && !isArray(label)) {\n                width = _measureText(ctx, cache.data, cache.gc, width, label);\n                height = lineHeight;\n            } else if (isArray(label)) {\n                for(j = 0, jlen = label.length; j < jlen; ++j){\n                    nestedLabel = label[j];\n                    if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n                        width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n                        height += lineHeight;\n                    }\n                }\n            }\n            widths.push(width);\n            heights.push(height);\n            widestLabelSize = Math.max(width, widestLabelSize);\n            highestLabelSize = Math.max(height, highestLabelSize);\n        }\n        garbageCollect(caches, length);\n        const widest = widths.indexOf(widestLabelSize);\n        const highest = heights.indexOf(highestLabelSize);\n        const valueAt = (idx)=>({\n                width: widths[idx] || 0,\n                height: heights[idx] || 0\n            });\n        return {\n            first: valueAt(0),\n            last: valueAt(length - 1),\n            widest: valueAt(widest),\n            highest: valueAt(highest),\n            widths,\n            heights\n        };\n    }\n getLabelForValue(value) {\n        return value;\n    }\n getPixelForValue(value, index) {\n        return NaN;\n    }\n getValueForPixel(pixel) {}\n getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n getPixelForDecimal(decimal) {\n        if (this._reversePixels) {\n            decimal = 1 - decimal;\n        }\n        const pixel = this._startPixel + decimal * this._length;\n        return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n    }\n getDecimalForPixel(pixel) {\n        const decimal = (pixel - this._startPixel) / this._length;\n        return this._reversePixels ? 1 - decimal : decimal;\n    }\n getBasePixel() {\n        return this.getPixelForValue(this.getBaseValue());\n    }\n getBaseValue() {\n        const { min , max  } = this;\n        return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    }\n getContext(index) {\n        const ticks = this.ticks || [];\n        if (index >= 0 && index < ticks.length) {\n            const tick = ticks[index];\n            return tick.$context || (tick.$context = createTickContext(this.getContext(), index, tick));\n        }\n        return this.$context || (this.$context = createScaleContext(this.chart.getContext(), this));\n    }\n _tickSize() {\n        const optionTicks = this.options.ticks;\n        const rot = toRadians(this.labelRotation);\n        const cos = Math.abs(Math.cos(rot));\n        const sin = Math.abs(Math.sin(rot));\n        const labelSizes = this._getLabelSizes();\n        const padding = optionTicks.autoSkipPadding || 0;\n        const w = labelSizes ? labelSizes.widest.width + padding : 0;\n        const h = labelSizes ? labelSizes.highest.height + padding : 0;\n        return this.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    }\n _isVisible() {\n        const display = this.options.display;\n        if (display !== 'auto') {\n            return !!display;\n        }\n        return this.getMatchingVisibleMetas().length > 0;\n    }\n _computeGridLineItems(chartArea) {\n        const axis = this.axis;\n        const chart = this.chart;\n        const options = this.options;\n        const { grid , position , border  } = options;\n        const offset = grid.offset;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const ticksLength = ticks.length + (offset ? 1 : 0);\n        const tl = getTickMarkLength(grid);\n        const items = [];\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = borderOpts.display ? borderOpts.width : 0;\n        const axisHalfWidth = axisWidth / 2;\n        const alignBorderValue = function(pixel) {\n            return _alignPixel(chart, pixel, axisWidth);\n        };\n        let borderValue, i, lineValue, alignedLineValue;\n        let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n        if (position === 'top') {\n            borderValue = alignBorderValue(this.bottom);\n            ty1 = this.bottom - tl;\n            ty2 = borderValue - axisHalfWidth;\n            y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n            y2 = chartArea.bottom;\n        } else if (position === 'bottom') {\n            borderValue = alignBorderValue(this.top);\n            y1 = chartArea.top;\n            y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = this.top + tl;\n        } else if (position === 'left') {\n            borderValue = alignBorderValue(this.right);\n            tx1 = this.right - tl;\n            tx2 = borderValue - axisHalfWidth;\n            x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n            x2 = chartArea.right;\n        } else if (position === 'right') {\n            borderValue = alignBorderValue(this.left);\n            x1 = chartArea.left;\n            x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n            tx1 = borderValue + axisHalfWidth;\n            tx2 = this.left + tl;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            y1 = chartArea.top;\n            y2 = chartArea.bottom;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = ty1 + tl;\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n            } else if (isObject(position)) {\n                const positionAxisID1 = Object.keys(position)[0];\n                const value1 = position[positionAxisID1];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID1].getPixelForValue(value1));\n            }\n            tx1 = borderValue - axisHalfWidth;\n            tx2 = tx1 - tl;\n            x1 = chartArea.left;\n            x2 = chartArea.right;\n        }\n        const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n        const step = Math.max(1, Math.ceil(ticksLength / limit));\n        for(i = 0; i < ticksLength; i += step){\n            const context = this.getContext(i);\n            const optsAtIndex = grid.setContext(context);\n            const optsAtIndexBorder = border.setContext(context);\n            const lineWidth = optsAtIndex.lineWidth;\n            const lineColor = optsAtIndex.color;\n            const borderDash = optsAtIndexBorder.dash || [];\n            const borderDashOffset = optsAtIndexBorder.dashOffset;\n            const tickWidth = optsAtIndex.tickWidth;\n            const tickColor = optsAtIndex.tickColor;\n            const tickBorderDash = optsAtIndex.tickBorderDash || [];\n            const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n            lineValue = getPixelForGridLine(this, i, offset);\n            if (lineValue === undefined) {\n                continue;\n            }\n            alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n            if (isHorizontal) {\n                tx1 = tx2 = x1 = x2 = alignedLineValue;\n            } else {\n                ty1 = ty2 = y1 = y2 = alignedLineValue;\n            }\n            items.push({\n                tx1,\n                ty1,\n                tx2,\n                ty2,\n                x1,\n                y1,\n                x2,\n                y2,\n                width: lineWidth,\n                color: lineColor,\n                borderDash,\n                borderDashOffset,\n                tickWidth,\n                tickColor,\n                tickBorderDash,\n                tickBorderDashOffset\n            });\n        }\n        this._ticksLength = ticksLength;\n        this._borderValue = borderValue;\n        return items;\n    }\n _computeLabelItems(chartArea) {\n        const axis = this.axis;\n        const options = this.options;\n        const { position , ticks: optionTicks  } = options;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const { align , crossAlign , padding , mirror  } = optionTicks;\n        const tl = getTickMarkLength(options.grid);\n        const tickAndPadding = tl + padding;\n        const hTickAndPadding = mirror ? -padding : tickAndPadding;\n        const rotation = -toRadians(this.labelRotation);\n        const items = [];\n        let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n        let textBaseline = 'middle';\n        if (position === 'top') {\n            y = this.bottom - hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'bottom') {\n            y = this.top + hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'left') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (position === 'right') {\n            const ret1 = this._getYAxisLabelAlignment(tl);\n            textAlign = ret1.textAlign;\n            x = ret1.x;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n            }\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID1 = Object.keys(position)[0];\n                const value1 = position[positionAxisID1];\n                x = this.chart.scales[positionAxisID1].getPixelForValue(value1);\n            }\n            textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n        }\n        if (axis === 'y') {\n            if (align === 'start') {\n                textBaseline = 'top';\n            } else if (align === 'end') {\n                textBaseline = 'bottom';\n            }\n        }\n        const labelSizes = this._getLabelSizes();\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            label = tick.label;\n            const optsAtIndex = optionTicks.setContext(this.getContext(i));\n            pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n            font = this._resolveTickFontOptions(i);\n            lineHeight = font.lineHeight;\n            lineCount = isArray(label) ? label.length : 1;\n            const halfCount = lineCount / 2;\n            const color = optsAtIndex.color;\n            const strokeColor = optsAtIndex.textStrokeColor;\n            const strokeWidth = optsAtIndex.textStrokeWidth;\n            let tickTextAlign = textAlign;\n            if (isHorizontal) {\n                x = pixel;\n                if (textAlign === 'inner') {\n                    if (i === ilen - 1) {\n                        tickTextAlign = !this.options.reverse ? 'right' : 'left';\n                    } else if (i === 0) {\n                        tickTextAlign = !this.options.reverse ? 'left' : 'right';\n                    } else {\n                        tickTextAlign = 'center';\n                    }\n                }\n                if (position === 'top') {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = -lineCount * lineHeight + lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n                    } else {\n                        textOffset = -labelSizes.highest.height + lineHeight / 2;\n                    }\n                } else {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n                    } else {\n                        textOffset = labelSizes.highest.height - lineCount * lineHeight;\n                    }\n                }\n                if (mirror) {\n                    textOffset *= -1;\n                }\n                if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n                    x += lineHeight / 2 * Math.sin(rotation);\n                }\n            } else {\n                y = pixel;\n                textOffset = (1 - lineCount) * lineHeight / 2;\n            }\n            let backdrop;\n            if (optsAtIndex.showLabelBackdrop) {\n                const labelPadding = toPadding(optsAtIndex.backdropPadding);\n                const height = labelSizes.heights[i];\n                const width = labelSizes.widths[i];\n                let top = textOffset - labelPadding.top;\n                let left = 0 - labelPadding.left;\n                switch(textBaseline){\n                    case 'middle':\n                        top -= height / 2;\n                        break;\n                    case 'bottom':\n                        top -= height;\n                        break;\n                }\n                switch(textAlign){\n                    case 'center':\n                        left -= width / 2;\n                        break;\n                    case 'right':\n                        left -= width;\n                        break;\n                }\n                backdrop = {\n                    left,\n                    top,\n                    width: width + labelPadding.width,\n                    height: height + labelPadding.height,\n                    color: optsAtIndex.backdropColor\n                };\n            }\n            items.push({\n                rotation,\n                label,\n                font,\n                color,\n                strokeColor,\n                strokeWidth,\n                textOffset,\n                textAlign: tickTextAlign,\n                textBaseline,\n                translation: [\n                    x,\n                    y\n                ],\n                backdrop\n            });\n        }\n        return items;\n    }\n    _getXAxisLabelAlignment() {\n        const { position , ticks  } = this.options;\n        const rotation = -toRadians(this.labelRotation);\n        if (rotation) {\n            return position === 'top' ? 'left' : 'right';\n        }\n        let align = 'center';\n        if (ticks.align === 'start') {\n            align = 'left';\n        } else if (ticks.align === 'end') {\n            align = 'right';\n        } else if (ticks.align === 'inner') {\n            align = 'inner';\n        }\n        return align;\n    }\n    _getYAxisLabelAlignment(tl) {\n        const { position , ticks: { crossAlign , mirror , padding  }  } = this.options;\n        const labelSizes = this._getLabelSizes();\n        const tickAndPadding = tl + padding;\n        const widest = labelSizes.widest.width;\n        let textAlign;\n        let x;\n        if (position === 'left') {\n            if (mirror) {\n                x = this.right + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x += widest;\n                }\n            } else {\n                x = this.right - tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x = this.left;\n                }\n            }\n        } else if (position === 'right') {\n            if (mirror) {\n                x = this.left + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x -= widest;\n                }\n            } else {\n                x = this.left + tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x = this.right;\n                }\n            }\n        } else {\n            textAlign = 'right';\n        }\n        return {\n            textAlign,\n            x\n        };\n    }\n _computeLabelArea() {\n        if (this.options.ticks.mirror) {\n            return;\n        }\n        const chart = this.chart;\n        const position = this.options.position;\n        if (position === 'left' || position === 'right') {\n            return {\n                top: 0,\n                left: this.left,\n                bottom: chart.height,\n                right: this.right\n            };\n        }\n        if (position === 'top' || position === 'bottom') {\n            return {\n                top: this.top,\n                left: 0,\n                bottom: this.bottom,\n                right: chart.width\n            };\n        }\n    }\n drawBackground() {\n        const { ctx , options: { backgroundColor  } , left , top , width , height  } = this;\n        if (backgroundColor) {\n            ctx.save();\n            ctx.fillStyle = backgroundColor;\n            ctx.fillRect(left, top, width, height);\n            ctx.restore();\n        }\n    }\n    getLineWidthForValue(value) {\n        const grid = this.options.grid;\n        if (!this._isVisible() || !grid.display) {\n            return 0;\n        }\n        const ticks = this.ticks;\n        const index = ticks.findIndex((t)=>t.value === value);\n        if (index >= 0) {\n            const opts = grid.setContext(this.getContext(index));\n            return opts.lineWidth;\n        }\n        return 0;\n    }\n drawGrid(chartArea) {\n        const grid = this.options.grid;\n        const ctx = this.ctx;\n        const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n        let i, ilen;\n        const drawLine = (p1, p2, style)=>{\n            if (!style.width || !style.color) {\n                return;\n            }\n            ctx.save();\n            ctx.lineWidth = style.width;\n            ctx.strokeStyle = style.color;\n            ctx.setLineDash(style.borderDash || []);\n            ctx.lineDashOffset = style.borderDashOffset;\n            ctx.beginPath();\n            ctx.moveTo(p1.x, p1.y);\n            ctx.lineTo(p2.x, p2.y);\n            ctx.stroke();\n            ctx.restore();\n        };\n        if (grid.display) {\n            for(i = 0, ilen = items.length; i < ilen; ++i){\n                const item = items[i];\n                if (grid.drawOnChartArea) {\n                    drawLine({\n                        x: item.x1,\n                        y: item.y1\n                    }, {\n                        x: item.x2,\n                        y: item.y2\n                    }, item);\n                }\n                if (grid.drawTicks) {\n                    drawLine({\n                        x: item.tx1,\n                        y: item.ty1\n                    }, {\n                        x: item.tx2,\n                        y: item.ty2\n                    }, {\n                        color: item.tickColor,\n                        width: item.tickWidth,\n                        borderDash: item.tickBorderDash,\n                        borderDashOffset: item.tickBorderDashOffset\n                    });\n                }\n            }\n        }\n    }\n drawBorder() {\n        const { chart , ctx , options: { border , grid  }  } = this;\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = border.display ? borderOpts.width : 0;\n        if (!axisWidth) {\n            return;\n        }\n        const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n        const borderValue = this._borderValue;\n        let x1, x2, y1, y2;\n        if (this.isHorizontal()) {\n            x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n            x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n            y1 = y2 = borderValue;\n        } else {\n            y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n            y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n            x1 = x2 = borderValue;\n        }\n        ctx.save();\n        ctx.lineWidth = borderOpts.width;\n        ctx.strokeStyle = borderOpts.color;\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x2, y2);\n        ctx.stroke();\n        ctx.restore();\n    }\n drawLabels(chartArea) {\n        const optionTicks = this.options.ticks;\n        if (!optionTicks.display) {\n            return;\n        }\n        const ctx = this.ctx;\n        const area = this._computeLabelArea();\n        if (area) {\n            clipArea(ctx, area);\n        }\n        const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n        let i, ilen;\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            const item = items[i];\n            const tickFont = item.font;\n            const label = item.label;\n            let y = item.textOffset;\n            renderText(ctx, label, 0, y, tickFont, item);\n        }\n        if (area) {\n            unclipArea(ctx);\n        }\n    }\n drawTitle() {\n        const { ctx , options: { position , title , reverse  }  } = this;\n        if (!title.display) {\n            return;\n        }\n        const font = toFont(title.font);\n        const padding = toPadding(title.padding);\n        const align = title.align;\n        let offset = font.lineHeight / 2;\n        if (position === 'bottom' || position === 'center' || isObject(position)) {\n            offset += padding.bottom;\n            if (isArray(title.text)) {\n                offset += font.lineHeight * (title.text.length - 1);\n            }\n        } else {\n            offset += padding.top;\n        }\n        const { titleX , titleY , maxWidth , rotation  } = titleArgs(this, offset, position, align);\n        renderText(ctx, title.text, 0, 0, font, {\n            color: title.color,\n            maxWidth,\n            rotation,\n            textAlign: titleAlign(align, position, reverse),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n    draw(chartArea) {\n        if (!this._isVisible()) {\n            return;\n        }\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawBorder();\n        this.drawTitle();\n        this.drawLabels(chartArea);\n    }\n _layers() {\n        const opts = this.options;\n        const tz = opts.ticks && opts.ticks.z || 0;\n        const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n        const bz = valueOrDefault(opts.border && opts.border.z, 0);\n        if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n            return [\n                {\n                    z: tz,\n                    draw: (chartArea)=>{\n                        this.draw(chartArea);\n                    }\n                }\n            ];\n        }\n        return [\n            {\n                z: gz,\n                draw: (chartArea)=>{\n                    this.drawBackground();\n                    this.drawGrid(chartArea);\n                    this.drawTitle();\n                }\n            },\n            {\n                z: bz,\n                draw: ()=>{\n                    this.drawBorder();\n                }\n            },\n            {\n                z: tz,\n                draw: (chartArea)=>{\n                    this.drawLabels(chartArea);\n                }\n            }\n        ];\n    }\n getMatchingVisibleMetas(type) {\n        const metas = this.chart.getSortedVisibleDatasetMetas();\n        const axisID = this.axis + 'AxisID';\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            const meta = metas[i];\n            if (meta[axisID] === this.id && (!type || meta.type === type)) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n _resolveTickFontOptions(index) {\n        const opts = this.options.ticks.setContext(this.getContext(index));\n        return toFont(opts.font);\n    }\n _maxDigits() {\n        const fontSize = this._resolveTickFontOptions(0).lineHeight;\n        return (this.isHorizontal() ? this.width : this.height) / fontSize;\n    }\n}\n\nclass TypedRegistry {\n    constructor(type, scope, override){\n        this.type = type;\n        this.scope = scope;\n        this.override = override;\n        this.items = Object.create(null);\n    }\n    isForType(type) {\n        return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n    }\n register(item) {\n        const proto = Object.getPrototypeOf(item);\n        let parentScope;\n        if (isIChartComponent(proto)) {\n            parentScope = this.register(proto);\n        }\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope + '.' + id;\n        if (!id) {\n            throw new Error('class does not have id: ' + item);\n        }\n        if (id in items) {\n            return scope;\n        }\n        items[id] = item;\n        registerDefaults(item, scope, parentScope);\n        if (this.override) {\n            defaults.override(item.id, item.overrides);\n        }\n        return scope;\n    }\n get(id) {\n        return this.items[id];\n    }\n unregister(item) {\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope;\n        if (id in items) {\n            delete items[id];\n        }\n        if (scope && id in defaults[scope]) {\n            delete defaults[scope][id];\n            if (this.override) {\n                delete overrides[id];\n            }\n        }\n    }\n}function registerDefaults(item, scope, parentScope) {\n    const itemDefaults = merge(Object.create(null), [\n        parentScope ? defaults.get(parentScope) : {},\n        defaults.get(scope),\n        item.defaults\n    ]);\n    defaults.set(scope, itemDefaults);\n    if (item.defaultRoutes) {\n        routeDefaults(scope, item.defaultRoutes);\n    }\n    if (item.descriptors) {\n        defaults.describe(scope, item.descriptors);\n    }\n}\nfunction routeDefaults(scope, routes) {\n    Object.keys(routes).forEach((property)=>{\n        const propertyParts = property.split('.');\n        const sourceName = propertyParts.pop();\n        const sourceScope = [\n            scope\n        ].concat(propertyParts).join('.');\n        const parts = routes[property].split('.');\n        const targetName = parts.pop();\n        const targetScope = parts.join('.');\n        defaults.route(sourceScope, sourceName, targetScope, targetName);\n    });\n}\nfunction isIChartComponent(proto) {\n    return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n    constructor(){\n        this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n        this.elements = new TypedRegistry(Element, 'elements');\n        this.plugins = new TypedRegistry(Object, 'plugins');\n        this.scales = new TypedRegistry(Scale, 'scales');\n        this._typedRegistries = [\n            this.controllers,\n            this.scales,\n            this.elements\n        ];\n    }\n add(...args) {\n        this._each('register', args);\n    }\n    remove(...args) {\n        this._each('unregister', args);\n    }\n addControllers(...args) {\n        this._each('register', args, this.controllers);\n    }\n addElements(...args) {\n        this._each('register', args, this.elements);\n    }\n addPlugins(...args) {\n        this._each('register', args, this.plugins);\n    }\n addScales(...args) {\n        this._each('register', args, this.scales);\n    }\n getController(id) {\n        return this._get(id, this.controllers, 'controller');\n    }\n getElement(id) {\n        return this._get(id, this.elements, 'element');\n    }\n getPlugin(id) {\n        return this._get(id, this.plugins, 'plugin');\n    }\n getScale(id) {\n        return this._get(id, this.scales, 'scale');\n    }\n removeControllers(...args) {\n        this._each('unregister', args, this.controllers);\n    }\n removeElements(...args) {\n        this._each('unregister', args, this.elements);\n    }\n removePlugins(...args) {\n        this._each('unregister', args, this.plugins);\n    }\n removeScales(...args) {\n        this._each('unregister', args, this.scales);\n    }\n _each(method, args, typedRegistry) {\n        [\n            ...args\n        ].forEach((arg)=>{\n            const reg = typedRegistry || this._getRegistryForType(arg);\n            if (typedRegistry || reg.isForType(arg) || reg === this.plugins && arg.id) {\n                this._exec(method, reg, arg);\n            } else {\n                each(arg, (item)=>{\n                    const itemReg = typedRegistry || this._getRegistryForType(item);\n                    this._exec(method, itemReg, item);\n                });\n            }\n        });\n    }\n _exec(method, registry, component) {\n        const camelMethod = _capitalize(method);\n        callback(component['before' + camelMethod], [], component);\n        registry[method](component);\n        callback(component['after' + camelMethod], [], component);\n    }\n _getRegistryForType(type) {\n        for(let i = 0; i < this._typedRegistries.length; i++){\n            const reg = this._typedRegistries[i];\n            if (reg.isForType(type)) {\n                return reg;\n            }\n        }\n        return this.plugins;\n    }\n _get(id, typedRegistry, type) {\n        const item = typedRegistry.get(id);\n        if (item === undefined) {\n            throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n        }\n        return item;\n    }\n}\nvar registry = /* #__PURE__ */ new Registry();\n\nclass PluginService {\n    constructor(){\n        this._init = [];\n    }\n notify(chart, hook, args, filter) {\n        if (hook === 'beforeInit') {\n            this._init = this._createDescriptors(chart, true);\n            this._notify(this._init, chart, 'install');\n        }\n        const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n        const result = this._notify(descriptors, chart, hook, args);\n        if (hook === 'afterDestroy') {\n            this._notify(descriptors, chart, 'stop');\n            this._notify(this._init, chart, 'uninstall');\n        }\n        return result;\n    }\n _notify(descriptors, chart, hook, args) {\n        args = args || {};\n        for (const descriptor of descriptors){\n            const plugin = descriptor.plugin;\n            const method = plugin[hook];\n            const params = [\n                chart,\n                args,\n                descriptor.options\n            ];\n            if (callback(method, params, plugin) === false && args.cancelable) {\n                return false;\n            }\n        }\n        return true;\n    }\n    invalidate() {\n        if (!isNullOrUndef(this._cache)) {\n            this._oldCache = this._cache;\n            this._cache = undefined;\n        }\n    }\n _descriptors(chart) {\n        if (this._cache) {\n            return this._cache;\n        }\n        const descriptors = this._cache = this._createDescriptors(chart);\n        this._notifyStateChanges(chart);\n        return descriptors;\n    }\n    _createDescriptors(chart, all) {\n        const config = chart && chart.config;\n        const options = valueOrDefault(config.options && config.options.plugins, {});\n        const plugins = allPlugins(config);\n        return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n    }\n _notifyStateChanges(chart) {\n        const previousDescriptors = this._oldCache || [];\n        const descriptors = this._cache;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.plugin.id === y.plugin.id));\n        this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n        this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n    }\n} function allPlugins(config) {\n    const localIds = {};\n    const plugins = [];\n    const keys = Object.keys(registry.plugins.items);\n    for(let i = 0; i < keys.length; i++){\n        plugins.push(registry.getPlugin(keys[i]));\n    }\n    const local = config.plugins || [];\n    for(let i1 = 0; i1 < local.length; i1++){\n        const plugin = local[i1];\n        if (plugins.indexOf(plugin) === -1) {\n            plugins.push(plugin);\n            localIds[plugin.id] = true;\n        }\n    }\n    return {\n        plugins,\n        localIds\n    };\n}\nfunction getOpts(options, all) {\n    if (!all && options === false) {\n        return null;\n    }\n    if (options === true) {\n        return {};\n    }\n    return options;\n}\nfunction createDescriptors(chart, { plugins , localIds  }, options, all) {\n    const result = [];\n    const context = chart.getContext();\n    for (const plugin of plugins){\n        const id = plugin.id;\n        const opts = getOpts(options[id], all);\n        if (opts === null) {\n            continue;\n        }\n        result.push({\n            plugin,\n            options: pluginOpts(chart.config, {\n                plugin,\n                local: localIds[id]\n            }, opts, context)\n        });\n    }\n    return result;\n}\nfunction pluginOpts(config, { plugin , local  }, opts, context) {\n    const keys = config.pluginScopeKeys(plugin);\n    const scopes = config.getOptionScopes(opts, keys);\n    if (local && plugin.defaults) {\n        scopes.push(plugin.defaults);\n    }\n    return config.createResolver(scopes, context, [\n        ''\n    ], {\n        scriptable: false,\n        indexable: false,\n        allKeys: true\n    });\n}\n\nfunction getIndexAxis(type, options) {\n    const datasetDefaults = defaults.datasets[type] || {};\n    const datasetOptions = (options.datasets || {})[type] || {};\n    return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n    let axis = id;\n    if (id === '_index_') {\n        axis = indexAxis;\n    } else if (id === '_value_') {\n        axis = indexAxis === 'x' ? 'y' : 'x';\n    }\n    return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n    return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction axisFromPosition(position) {\n    if (position === 'top' || position === 'bottom') {\n        return 'x';\n    }\n    if (position === 'left' || position === 'right') {\n        return 'y';\n    }\n}\nfunction determineAxis(id, scaleOptions) {\n    if (id === 'x' || id === 'y' || id === 'r') {\n        return id;\n    }\n    id = scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.length > 1 && determineAxis(id[0].toLowerCase(), scaleOptions);\n    if (id) {\n        return id;\n    }\n    throw new Error(`Cannot determine type of '${name}' axis. Please provide 'axis' or 'position' option.`);\n}\nfunction mergeScaleConfig(config, options) {\n    const chartDefaults = overrides[config.type] || {\n        scales: {}\n    };\n    const configScales = options.scales || {};\n    const chartIndexAxis = getIndexAxis(config.type, options);\n    const scales = Object.create(null);\n    Object.keys(configScales).forEach((id)=>{\n        const scaleConf = configScales[id];\n        if (!isObject(scaleConf)) {\n            return console.error(`Invalid scale configuration for scale: ${id}`);\n        }\n        if (scaleConf._proxy) {\n            return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n        }\n        const axis = determineAxis(id, scaleConf);\n        const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n        const defaultScaleOptions = chartDefaults.scales || {};\n        scales[id] = mergeIf(Object.create(null), [\n            {\n                axis\n            },\n            scaleConf,\n            defaultScaleOptions[axis],\n            defaultScaleOptions[defaultId]\n        ]);\n    });\n    config.data.datasets.forEach((dataset)=>{\n        const type = dataset.type || config.type;\n        const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n        const datasetDefaults = overrides[type] || {};\n        const defaultScaleOptions = datasetDefaults.scales || {};\n        Object.keys(defaultScaleOptions).forEach((defaultID)=>{\n            const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n            const id = dataset[axis + 'AxisID'] || axis;\n            scales[id] = scales[id] || Object.create(null);\n            mergeIf(scales[id], [\n                {\n                    axis\n                },\n                configScales[id],\n                defaultScaleOptions[defaultID]\n            ]);\n        });\n    });\n    Object.keys(scales).forEach((key)=>{\n        const scale = scales[key];\n        mergeIf(scale, [\n            defaults.scales[scale.type],\n            defaults.scale\n        ]);\n    });\n    return scales;\n}\nfunction initOptions(config) {\n    const options = config.options || (config.options = {});\n    options.plugins = valueOrDefault(options.plugins, {});\n    options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n    data = data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    return data;\n}\nfunction initConfig(config) {\n    config = config || {};\n    config.data = initData(config.data);\n    initOptions(config);\n    return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n    let keys = keyCache.get(cacheKey);\n    if (!keys) {\n        keys = generate();\n        keyCache.set(cacheKey, keys);\n        keysCached.add(keys);\n    }\n    return keys;\n}\nconst addIfFound = (set, obj, key)=>{\n    const opts = resolveObjectKey(obj, key);\n    if (opts !== undefined) {\n        set.add(opts);\n    }\n};\nclass Config {\n    constructor(config){\n        this._config = initConfig(config);\n        this._scopeCache = new Map();\n        this._resolverCache = new Map();\n    }\n    get platform() {\n        return this._config.platform;\n    }\n    get type() {\n        return this._config.type;\n    }\n    set type(type) {\n        this._config.type = type;\n    }\n    get data() {\n        return this._config.data;\n    }\n    set data(data) {\n        this._config.data = initData(data);\n    }\n    get options() {\n        return this._config.options;\n    }\n    set options(options) {\n        this._config.options = options;\n    }\n    get plugins() {\n        return this._config.plugins;\n    }\n    update() {\n        const config = this._config;\n        this.clearCache();\n        initOptions(config);\n    }\n    clearCache() {\n        this._scopeCache.clear();\n        this._resolverCache.clear();\n    }\n datasetScopeKeys(datasetType) {\n        return cachedKeys(datasetType, ()=>[\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetAnimationScopeKeys(datasetType, transition) {\n        return cachedKeys(`${datasetType}.transition.${transition}`, ()=>[\n                [\n                    `datasets.${datasetType}.transitions.${transition}`,\n                    `transitions.${transition}`,\n                ],\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetElementScopeKeys(datasetType, elementType) {\n        return cachedKeys(`${datasetType}-${elementType}`, ()=>[\n                [\n                    `datasets.${datasetType}.elements.${elementType}`,\n                    `datasets.${datasetType}`,\n                    `elements.${elementType}`,\n                    ''\n                ]\n            ]);\n    }\n pluginScopeKeys(plugin) {\n        const id = plugin.id;\n        const type = this.type;\n        return cachedKeys(`${type}-plugin-${id}`, ()=>[\n                [\n                    `plugins.${id}`,\n                    ...plugin.additionalOptionScopes || [],\n                ]\n            ]);\n    }\n _cachedScopes(mainScope, resetCache) {\n        const _scopeCache = this._scopeCache;\n        let cache = _scopeCache.get(mainScope);\n        if (!cache || resetCache) {\n            cache = new Map();\n            _scopeCache.set(mainScope, cache);\n        }\n        return cache;\n    }\n getOptionScopes(mainScope, keyLists, resetCache) {\n        const { options , type  } = this;\n        const cache = this._cachedScopes(mainScope, resetCache);\n        const cached = cache.get(keyLists);\n        if (cached) {\n            return cached;\n        }\n        const scopes = new Set();\n        keyLists.forEach((keys)=>{\n            if (mainScope) {\n                scopes.add(mainScope);\n                keys.forEach((key)=>addIfFound(scopes, mainScope, key));\n            }\n            keys.forEach((key)=>addIfFound(scopes, options, key));\n            keys.forEach((key)=>addIfFound(scopes, overrides[type] || {}, key));\n            keys.forEach((key)=>addIfFound(scopes, defaults, key));\n            keys.forEach((key)=>addIfFound(scopes, descriptors, key));\n        });\n        const array = Array.from(scopes);\n        if (array.length === 0) {\n            array.push(Object.create(null));\n        }\n        if (keysCached.has(keyLists)) {\n            cache.set(keyLists, array);\n        }\n        return array;\n    }\n chartOptionScopes() {\n        const { options , type  } = this;\n        return [\n            options,\n            overrides[type] || {},\n            defaults.datasets[type] || {},\n            {\n                type\n            },\n            defaults,\n            descriptors\n        ];\n    }\n resolveNamedOptions(scopes, names, context, prefixes = [\n        ''\n    ]) {\n        const result = {\n            $shared: true\n        };\n        const { resolver , subPrefixes  } = getResolver(this._resolverCache, scopes, prefixes);\n        let options = resolver;\n        if (needContext(resolver, names)) {\n            result.$shared = false;\n            context = isFunction(context) ? context() : context;\n            const subResolver = this.createResolver(scopes, context, subPrefixes);\n            options = _attachContext(resolver, context, subResolver);\n        }\n        for (const prop of names){\n            result[prop] = options[prop];\n        }\n        return result;\n    }\n createResolver(scopes, context, prefixes = [\n        ''\n    ], descriptorDefaults) {\n        const { resolver  } = getResolver(this._resolverCache, scopes, prefixes);\n        return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n    }\n}function getResolver(resolverCache, scopes, prefixes) {\n    let cache = resolverCache.get(scopes);\n    if (!cache) {\n        cache = new Map();\n        resolverCache.set(scopes, cache);\n    }\n    const cacheKey = prefixes.join();\n    let cached = cache.get(cacheKey);\n    if (!cached) {\n        const resolver = _createResolver(scopes, prefixes);\n        cached = {\n            resolver,\n            subPrefixes: prefixes.filter((p)=>!p.toLowerCase().includes('hover'))\n        };\n        cache.set(cacheKey, cached);\n    }\n    return cached;\n}\nconst hasFunction = (value)=>isObject(value) && Object.getOwnPropertyNames(value).reduce((acc, key)=>acc || isFunction(value[key]), false);\nfunction needContext(proxy, names) {\n    const { isScriptable , isIndexable  } = _descriptors(proxy);\n    for (const prop of names){\n        const scriptable = isScriptable(prop);\n        const indexable = isIndexable(prop);\n        const value = (indexable || scriptable) && proxy[prop];\n        if (scriptable && (isFunction(value) || hasFunction(value)) || indexable && isArray(value)) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar version = \"4.0.1\";\n\nconst KNOWN_POSITIONS = [\n    'top',\n    'bottom',\n    'left',\n    'right',\n    'chartArea'\n];\nfunction positionIsHorizontal(position, axis) {\n    return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\nfunction compare2Level(l1, l2) {\n    return function(a, b) {\n        return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n    };\n}\nfunction onAnimationsComplete(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    chart.notifyPlugins('afterRender');\n    callback(animationOptions && animationOptions.onComplete, [\n        context\n    ], chart);\n}\nfunction onAnimationProgress(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    callback(animationOptions && animationOptions.onProgress, [\n        context\n    ], chart);\n}\n function getCanvas(item) {\n    if (_isDomSupported() && typeof item === 'string') {\n        item = document.getElementById(item);\n    } else if (item && item.length) {\n        item = item[0];\n    }\n    if (item && item.canvas) {\n        item = item.canvas;\n    }\n    return item;\n}\nconst instances = {};\nconst getChart = (key)=>{\n    const canvas = getCanvas(key);\n    return Object.values(instances).filter((c)=>c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n    const keys = Object.keys(obj);\n    for (const key of keys){\n        const intKey = +key;\n        if (intKey >= start) {\n            const value = obj[key];\n            delete obj[key];\n            if (move > 0 || intKey > start) {\n                obj[intKey + move] = value;\n            }\n        }\n    }\n}\n function determineLastEvent(e, lastEvent, inChartArea, isClick) {\n    if (!inChartArea || e.type === 'mouseout') {\n        return null;\n    }\n    if (isClick) {\n        return lastEvent;\n    }\n    return e;\n}\nfunction getDatasetArea(meta) {\n    const { xScale , yScale  } = meta;\n    if (xScale && yScale) {\n        return {\n            left: xScale.left,\n            right: xScale.right,\n            top: yScale.top,\n            bottom: yScale.bottom\n        };\n    }\n}\nclass Chart {\n    static defaults = defaults;\n    static instances = instances;\n    static overrides = overrides;\n    static registry = registry;\n    static version = version;\n    static getChart = getChart;\n    static register(...items) {\n        registry.add(...items);\n        invalidatePlugins();\n    }\n    static unregister(...items) {\n        registry.remove(...items);\n        invalidatePlugins();\n    }\n    constructor(item, userConfig){\n        const config = this.config = new Config(userConfig);\n        const initialCanvas = getCanvas(item);\n        const existingChart = getChart(initialCanvas);\n        if (existingChart) {\n            throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.');\n        }\n        const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n        this.platform.updateConfig(config);\n        const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n        const canvas = context && context.canvas;\n        const height = canvas && canvas.height;\n        const width = canvas && canvas.width;\n        this.id = uid();\n        this.ctx = context;\n        this.canvas = canvas;\n        this.width = width;\n        this.height = height;\n        this._options = options;\n        this._aspectRatio = this.aspectRatio;\n        this._layers = [];\n        this._metasets = [];\n        this._stacks = undefined;\n        this.boxes = [];\n        this.currentDevicePixelRatio = undefined;\n        this.chartArea = undefined;\n        this._active = [];\n        this._lastEvent = undefined;\n        this._listeners = {};\n         this._responsiveListeners = undefined;\n        this._sortedMetasets = [];\n        this.scales = {};\n        this._plugins = new PluginService();\n        this.$proxies = {};\n        this._hiddenIndices = {};\n        this.attached = false;\n        this._animationsDisabled = undefined;\n        this.$context = undefined;\n        this._doResize = debounce((mode)=>this.update(mode), options.resizeDelay || 0);\n        this._dataChanges = [];\n        instances[this.id] = this;\n        if (!context || !canvas) {\n            console.error(\"Failed to create chart: can't acquire context from the given item\");\n            return;\n        }\n        animator.listen(this, 'complete', onAnimationsComplete);\n        animator.listen(this, 'progress', onAnimationProgress);\n        this._initialize();\n        if (this.attached) {\n            this.update();\n        }\n    }\n    get aspectRatio() {\n        const { options: { aspectRatio , maintainAspectRatio  } , width , height , _aspectRatio  } = this;\n        if (!isNullOrUndef(aspectRatio)) {\n            return aspectRatio;\n        }\n        if (maintainAspectRatio && _aspectRatio) {\n            return _aspectRatio;\n        }\n        return height ? width / height : null;\n    }\n    get data() {\n        return this.config.data;\n    }\n    set data(data) {\n        this.config.data = data;\n    }\n    get options() {\n        return this._options;\n    }\n    set options(options) {\n        this.config.options = options;\n    }\n    get registry() {\n        return registry;\n    }\n _initialize() {\n        this.notifyPlugins('beforeInit');\n        if (this.options.responsive) {\n            this.resize();\n        } else {\n            retinaScale(this, this.options.devicePixelRatio);\n        }\n        this.bindEvents();\n        this.notifyPlugins('afterInit');\n        return this;\n    }\n    clear() {\n        clearCanvas(this.canvas, this.ctx);\n        return this;\n    }\n    stop() {\n        animator.stop(this);\n        return this;\n    }\n resize(width, height) {\n        if (!animator.running(this)) {\n            this._resize(width, height);\n        } else {\n            this._resizeBeforeDraw = {\n                width,\n                height\n            };\n        }\n    }\n    _resize(width, height) {\n        const options = this.options;\n        const canvas = this.canvas;\n        const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n        const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n        const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n        const mode = this.width ? 'resize' : 'attach';\n        this.width = newSize.width;\n        this.height = newSize.height;\n        this._aspectRatio = this.aspectRatio;\n        if (!retinaScale(this, newRatio, true)) {\n            return;\n        }\n        this.notifyPlugins('resize', {\n            size: newSize\n        });\n        callback(options.onResize, [\n            this,\n            newSize\n        ], this);\n        if (this.attached) {\n            if (this._doResize(mode)) {\n                this.render();\n            }\n        }\n    }\n    ensureScalesHaveIDs() {\n        const options = this.options;\n        const scalesOptions = options.scales || {};\n        each(scalesOptions, (axisOptions, axisID)=>{\n            axisOptions.id = axisID;\n        });\n    }\n buildOrUpdateScales() {\n        const options = this.options;\n        const scaleOpts = options.scales;\n        const scales = this.scales;\n        const updated = Object.keys(scales).reduce((obj, id)=>{\n            obj[id] = false;\n            return obj;\n        }, {});\n        let items = [];\n        if (scaleOpts) {\n            items = items.concat(Object.keys(scaleOpts).map((id)=>{\n                const scaleOptions = scaleOpts[id];\n                const axis = determineAxis(id, scaleOptions);\n                const isRadial = axis === 'r';\n                const isHorizontal = axis === 'x';\n                return {\n                    options: scaleOptions,\n                    dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n                    dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n                };\n            }));\n        }\n        each(items, (item)=>{\n            const scaleOptions = item.options;\n            const id = scaleOptions.id;\n            const axis = determineAxis(id, scaleOptions);\n            const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n            if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n                scaleOptions.position = item.dposition;\n            }\n            updated[id] = true;\n            let scale = null;\n            if (id in scales && scales[id].type === scaleType) {\n                scale = scales[id];\n            } else {\n                const scaleClass = registry.getScale(scaleType);\n                scale = new scaleClass({\n                    id,\n                    type: scaleType,\n                    ctx: this.ctx,\n                    chart: this\n                });\n                scales[scale.id] = scale;\n            }\n            scale.init(scaleOptions, options);\n        });\n        each(updated, (hasUpdated, id)=>{\n            if (!hasUpdated) {\n                delete scales[id];\n            }\n        });\n        each(scales, (scale)=>{\n            layouts.configure(this, scale, scale.options);\n            layouts.addBox(this, scale);\n        });\n    }\n _updateMetasets() {\n        const metasets = this._metasets;\n        const numData = this.data.datasets.length;\n        const numMeta = metasets.length;\n        metasets.sort((a, b)=>a.index - b.index);\n        if (numMeta > numData) {\n            for(let i = numData; i < numMeta; ++i){\n                this._destroyDatasetMeta(i);\n            }\n            metasets.splice(numData, numMeta - numData);\n        }\n        this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n    }\n _removeUnreferencedMetasets() {\n        const { _metasets: metasets , data: { datasets  }  } = this;\n        if (metasets.length > datasets.length) {\n            delete this._stacks;\n        }\n        metasets.forEach((meta, index)=>{\n            if (datasets.filter((x)=>x === meta._dataset).length === 0) {\n                this._destroyDatasetMeta(index);\n            }\n        });\n    }\n    buildOrUpdateControllers() {\n        const newControllers = [];\n        const datasets = this.data.datasets;\n        let i, ilen;\n        this._removeUnreferencedMetasets();\n        for(i = 0, ilen = datasets.length; i < ilen; i++){\n            const dataset = datasets[i];\n            let meta = this.getDatasetMeta(i);\n            const type = dataset.type || this.config.type;\n            if (meta.type && meta.type !== type) {\n                this._destroyDatasetMeta(i);\n                meta = this.getDatasetMeta(i);\n            }\n            meta.type = type;\n            meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n            meta.order = dataset.order || 0;\n            meta.index = i;\n            meta.label = '' + dataset.label;\n            meta.visible = this.isDatasetVisible(i);\n            if (meta.controller) {\n                meta.controller.updateIndex(i);\n                meta.controller.linkScales();\n            } else {\n                const ControllerClass = registry.getController(type);\n                const { datasetElementType , dataElementType  } = defaults.datasets[type];\n                Object.assign(ControllerClass, {\n                    dataElementType: registry.getElement(dataElementType),\n                    datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n                });\n                meta.controller = new ControllerClass(this, i);\n                newControllers.push(meta.controller);\n            }\n        }\n        this._updateMetasets();\n        return newControllers;\n    }\n _resetElements() {\n        each(this.data.datasets, (dataset, datasetIndex)=>{\n            this.getDatasetMeta(datasetIndex).controller.reset();\n        }, this);\n    }\n reset() {\n        this._resetElements();\n        this.notifyPlugins('reset');\n    }\n    update(mode) {\n        const config = this.config;\n        config.update();\n        const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        const animsDisabled = this._animationsDisabled = !options.animation;\n        this._updateScales();\n        this._checkEventBindings();\n        this._updateHiddenIndices();\n        this._plugins.invalidate();\n        if (this.notifyPlugins('beforeUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const newControllers = this.buildOrUpdateControllers();\n        this.notifyPlugins('beforeElementsUpdate');\n        let minPadding = 0;\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; i++){\n            const { controller  } = this.getDatasetMeta(i);\n            const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n            controller.buildOrUpdateElements(reset);\n            minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n        }\n        minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n        this._updateLayout(minPadding);\n        if (!animsDisabled) {\n            each(newControllers, (controller)=>{\n                controller.reset();\n            });\n        }\n        this._updateDatasets(mode);\n        this.notifyPlugins('afterUpdate', {\n            mode\n        });\n        this._layers.sort(compare2Level('z', '_idx'));\n        const { _active , _lastEvent  } = this;\n        if (_lastEvent) {\n            this._eventHandler(_lastEvent, true);\n        } else if (_active.length) {\n            this._updateHoverStyles(_active, _active, true);\n        }\n        this.render();\n    }\n _updateScales() {\n        each(this.scales, (scale)=>{\n            layouts.removeBox(this, scale);\n        });\n        this.ensureScalesHaveIDs();\n        this.buildOrUpdateScales();\n    }\n _checkEventBindings() {\n        const options = this.options;\n        const existingEvents = new Set(Object.keys(this._listeners));\n        const newEvents = new Set(options.events);\n        if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n            this.unbindEvents();\n            this.bindEvents();\n        }\n    }\n _updateHiddenIndices() {\n        const { _hiddenIndices  } = this;\n        const changes = this._getUniformDataChanges() || [];\n        for (const { method , start , count  } of changes){\n            const move = method === '_removeElements' ? -count : count;\n            moveNumericKeys(_hiddenIndices, start, move);\n        }\n    }\n _getUniformDataChanges() {\n        const _dataChanges = this._dataChanges;\n        if (!_dataChanges || !_dataChanges.length) {\n            return;\n        }\n        this._dataChanges = [];\n        const datasetCount = this.data.datasets.length;\n        const makeSet = (idx)=>new Set(_dataChanges.filter((c)=>c[0] === idx).map((c, i)=>i + ',' + c.splice(1).join(',')));\n        const changeSet = makeSet(0);\n        for(let i = 1; i < datasetCount; i++){\n            if (!setsEqual(changeSet, makeSet(i))) {\n                return;\n            }\n        }\n        return Array.from(changeSet).map((c)=>c.split(',')).map((a)=>({\n                method: a[1],\n                start: +a[2],\n                count: +a[3]\n            }));\n    }\n _updateLayout(minPadding) {\n        if (this.notifyPlugins('beforeLayout', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        layouts.update(this, this.width, this.height, minPadding);\n        const area = this.chartArea;\n        const noArea = area.width <= 0 || area.height <= 0;\n        this._layers = [];\n        each(this.boxes, (box)=>{\n            if (noArea && box.position === 'chartArea') {\n                return;\n            }\n            if (box.configure) {\n                box.configure();\n            }\n            this._layers.push(...box._layers());\n        }, this);\n        this._layers.forEach((item, index)=>{\n            item._idx = index;\n        });\n        this.notifyPlugins('afterLayout');\n    }\n _updateDatasets(mode) {\n        if (this.notifyPlugins('beforeDatasetsUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this.getDatasetMeta(i).controller.configure();\n        }\n        for(let i1 = 0, ilen1 = this.data.datasets.length; i1 < ilen1; ++i1){\n            this._updateDataset(i1, isFunction(mode) ? mode({\n                datasetIndex: i1\n            }) : mode);\n        }\n        this.notifyPlugins('afterDatasetsUpdate', {\n            mode\n        });\n    }\n _updateDataset(index, mode) {\n        const meta = this.getDatasetMeta(index);\n        const args = {\n            meta,\n            index,\n            mode,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n            return;\n        }\n        meta.controller._update(mode);\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetUpdate', args);\n    }\n    render() {\n        if (this.notifyPlugins('beforeRender', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        if (animator.has(this)) {\n            if (this.attached && !animator.running(this)) {\n                animator.start(this);\n            }\n        } else {\n            this.draw();\n            onAnimationsComplete({\n                chart: this\n            });\n        }\n    }\n    draw() {\n        let i;\n        if (this._resizeBeforeDraw) {\n            const { width , height  } = this._resizeBeforeDraw;\n            this._resize(width, height);\n            this._resizeBeforeDraw = null;\n        }\n        this.clear();\n        if (this.width <= 0 || this.height <= 0) {\n            return;\n        }\n        if (this.notifyPlugins('beforeDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const layers = this._layers;\n        for(i = 0; i < layers.length && layers[i].z <= 0; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this._drawDatasets();\n        for(; i < layers.length; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this.notifyPlugins('afterDraw');\n    }\n _getSortedDatasetMetas(filterVisible) {\n        const metasets = this._sortedMetasets;\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metasets.length; i < ilen; ++i){\n            const meta = metasets[i];\n            if (!filterVisible || meta.visible) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n getSortedVisibleDatasetMetas() {\n        return this._getSortedDatasetMetas(true);\n    }\n _drawDatasets() {\n        if (this.notifyPlugins('beforeDatasetsDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const metasets = this.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            this._drawDataset(metasets[i]);\n        }\n        this.notifyPlugins('afterDatasetsDraw');\n    }\n _drawDataset(meta) {\n        const ctx = this.ctx;\n        const clip = meta._clip;\n        const useClip = !clip.disabled;\n        const area = getDatasetArea(meta) || this.chartArea;\n        const args = {\n            meta,\n            index: meta.index,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n            return;\n        }\n        if (useClip) {\n            clipArea(ctx, {\n                left: clip.left === false ? 0 : area.left - clip.left,\n                right: clip.right === false ? this.width : area.right + clip.right,\n                top: clip.top === false ? 0 : area.top - clip.top,\n                bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n            });\n        }\n        meta.controller.draw();\n        if (useClip) {\n            unclipArea(ctx);\n        }\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetDraw', args);\n    }\n isPointInArea(point) {\n        return _isPointInArea(point, this.chartArea, this._minPadding);\n    }\n    getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n        const method = Interaction.modes[mode];\n        if (typeof method === 'function') {\n            return method(this, e, options, useFinalPosition);\n        }\n        return [];\n    }\n    getDatasetMeta(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        const metasets = this._metasets;\n        let meta = metasets.filter((x)=>x && x._dataset === dataset).pop();\n        if (!meta) {\n            meta = {\n                type: null,\n                data: [],\n                dataset: null,\n                controller: null,\n                hidden: null,\n                xAxisID: null,\n                yAxisID: null,\n                order: dataset && dataset.order || 0,\n                index: datasetIndex,\n                _dataset: dataset,\n                _parsed: [],\n                _sorted: false\n            };\n            metasets.push(meta);\n        }\n        return meta;\n    }\n    getContext() {\n        return this.$context || (this.$context = createContext(null, {\n            chart: this,\n            type: 'chart'\n        }));\n    }\n    getVisibleDatasetCount() {\n        return this.getSortedVisibleDatasetMetas().length;\n    }\n    isDatasetVisible(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        if (!dataset) {\n            return false;\n        }\n        const meta = this.getDatasetMeta(datasetIndex);\n        return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n    }\n    setDatasetVisibility(datasetIndex, visible) {\n        const meta = this.getDatasetMeta(datasetIndex);\n        meta.hidden = !visible;\n    }\n    toggleDataVisibility(index) {\n        this._hiddenIndices[index] = !this._hiddenIndices[index];\n    }\n    getDataVisibility(index) {\n        return !this._hiddenIndices[index];\n    }\n _updateVisibility(datasetIndex, dataIndex, visible) {\n        const mode = visible ? 'show' : 'hide';\n        const meta = this.getDatasetMeta(datasetIndex);\n        const anims = meta.controller._resolveAnimations(undefined, mode);\n        if (defined(dataIndex)) {\n            meta.data[dataIndex].hidden = !visible;\n            this.update();\n        } else {\n            this.setDatasetVisibility(datasetIndex, visible);\n            anims.update(meta, {\n                visible\n            });\n            this.update((ctx)=>ctx.datasetIndex === datasetIndex ? mode : undefined);\n        }\n    }\n    hide(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, false);\n    }\n    show(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, true);\n    }\n _destroyDatasetMeta(datasetIndex) {\n        const meta = this._metasets[datasetIndex];\n        if (meta && meta.controller) {\n            meta.controller._destroy();\n        }\n        delete this._metasets[datasetIndex];\n    }\n    _stop() {\n        let i, ilen;\n        this.stop();\n        animator.remove(this);\n        for(i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._destroyDatasetMeta(i);\n        }\n    }\n    destroy() {\n        this.notifyPlugins('beforeDestroy');\n        const { canvas , ctx  } = this;\n        this._stop();\n        this.config.clearCache();\n        if (canvas) {\n            this.unbindEvents();\n            clearCanvas(canvas, ctx);\n            this.platform.releaseContext(ctx);\n            this.canvas = null;\n            this.ctx = null;\n        }\n        delete instances[this.id];\n        this.notifyPlugins('afterDestroy');\n    }\n    toBase64Image(...args) {\n        return this.canvas.toDataURL(...args);\n    }\n bindEvents() {\n        this.bindUserEvents();\n        if (this.options.responsive) {\n            this.bindResponsiveEvents();\n        } else {\n            this.attached = true;\n        }\n    }\n bindUserEvents() {\n        const listeners = this._listeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const listener = (e, x, y)=>{\n            e.offsetX = x;\n            e.offsetY = y;\n            this._eventHandler(e);\n        };\n        each(this.options.events, (type)=>_add(type, listener));\n    }\n bindResponsiveEvents() {\n        if (!this._responsiveListeners) {\n            this._responsiveListeners = {};\n        }\n        const listeners = this._responsiveListeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const _remove = (type, listener)=>{\n            if (listeners[type]) {\n                platform.removeEventListener(this, type, listener);\n                delete listeners[type];\n            }\n        };\n        const listener = (width, height)=>{\n            if (this.canvas) {\n                this.resize(width, height);\n            }\n        };\n        let detached;\n        const attached = ()=>{\n            _remove('attach', attached);\n            this.attached = true;\n            this.resize();\n            _add('resize', listener);\n            _add('detach', detached);\n        };\n        detached = ()=>{\n            this.attached = false;\n            _remove('resize', listener);\n            this._stop();\n            this._resize(0, 0);\n            _add('attach', attached);\n        };\n        if (platform.isAttached(this.canvas)) {\n            attached();\n        } else {\n            detached();\n        }\n    }\n unbindEvents() {\n        each(this._listeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._listeners = {};\n        each(this._responsiveListeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._responsiveListeners = undefined;\n    }\n    updateHoverStyle(items, mode, enabled) {\n        const prefix = enabled ? 'set' : 'remove';\n        let meta, item, i, ilen;\n        if (mode === 'dataset') {\n            meta = this.getDatasetMeta(items[0].datasetIndex);\n            meta.controller['_' + prefix + 'DatasetHoverStyle']();\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            item = items[i];\n            const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n            if (controller) {\n                controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n            }\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements) {\n        const lastActive = this._active || [];\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('No dataset found at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed) {\n            this._active = active;\n            this._lastEvent = null;\n            this._updateHoverStyles(active, lastActive);\n        }\n    }\n notifyPlugins(hook, args, filter) {\n        return this._plugins.notify(this, hook, args, filter);\n    }\n isPluginEnabled(pluginId) {\n        return this._plugins._cache.filter((p)=>p.plugin.id === pluginId).length === 1;\n    }\n _updateHoverStyles(active, lastActive, replay) {\n        const hoverOptions = this.options.hover;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.datasetIndex === y.datasetIndex && x.index === y.index));\n        const deactivated = diff(lastActive, active);\n        const activated = replay ? active : diff(active, lastActive);\n        if (deactivated.length) {\n            this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n        }\n        if (activated.length && hoverOptions.mode) {\n            this.updateHoverStyle(activated, hoverOptions.mode, true);\n        }\n    }\n _eventHandler(e, replay) {\n        const args = {\n            event: e,\n            replay,\n            cancelable: true,\n            inChartArea: this.isPointInArea(e)\n        };\n        const eventFilter = (plugin)=>(plugin.options.events || this.options.events).includes(e.native.type);\n        if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n            return;\n        }\n        const changed = this._handleEvent(e, replay, args.inChartArea);\n        args.cancelable = false;\n        this.notifyPlugins('afterEvent', args, eventFilter);\n        if (changed || args.changed) {\n            this.render();\n        }\n        return this;\n    }\n _handleEvent(e, replay, inChartArea) {\n        const { _active: lastActive = [] , options  } = this;\n        const useFinalPosition = replay;\n        const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n        const isClick = _isClickEvent(e);\n        const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n        if (inChartArea) {\n            this._lastEvent = null;\n            callback(options.onHover, [\n                e,\n                active,\n                this\n            ], this);\n            if (isClick) {\n                callback(options.onClick, [\n                    e,\n                    active,\n                    this\n                ], this);\n            }\n        }\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed || replay) {\n            this._active = active;\n            this._updateHoverStyles(active, lastActive, replay);\n        }\n        this._lastEvent = lastEvent;\n        return changed;\n    }\n _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive;\n        }\n        const hoverOptions = this.options.hover;\n        return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n    }\n}\nfunction invalidatePlugins() {\n    return each(Chart.instances, (chart)=>chart._plugins.invalidate());\n}\nvar Chart$1 = Chart;\n\nfunction clipArc(ctx, element, endAngle) {\n    const { startAngle , pixelMargin , x , y , outerRadius , innerRadius  } = element;\n    let angleMargin = pixelMargin / outerRadius;\n    // Draw an inner border by clipping the arc and drawing a double-width border\n    // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n    ctx.beginPath();\n    ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n    if (innerRadius > pixelMargin) {\n        angleMargin = pixelMargin / innerRadius;\n        ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n    } else {\n        ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n    }\n    ctx.closePath();\n    ctx.clip();\n}\nfunction toRadiusCorners(value) {\n    return _readValueToProps(value, [\n        'outerStart',\n        'outerEnd',\n        'innerStart',\n        'innerEnd'\n    ]);\n}\n/**\n * Parse border radius from the provided options\n */ function parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n    const o = toRadiusCorners(arc.options.borderRadius);\n    const halfThickness = (outerRadius - innerRadius) / 2;\n    const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n    // Outer limits are complicated. We want to compute the available angular distance at\n    // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n    // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n    //\n    // If the borderRadius is large, that value can become negative.\n    // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n    // we know that the thickness term will dominate and compute the limits at that point\n    const computeOuterLimit = (val)=>{\n        const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n        return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n    };\n    return {\n        outerStart: computeOuterLimit(o.outerStart),\n        outerEnd: computeOuterLimit(o.outerEnd),\n        innerStart: _limitValue(o.innerStart, 0, innerLimit),\n        innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n    };\n}\n/**\n * Convert (r, 𝜃) to (x, y)\n */ function rThetaToXY(r, theta, x, y) {\n    return {\n        x: x + r * Math.cos(theta),\n        y: y + r * Math.sin(theta)\n    };\n}\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */ function pathArc(ctx, element, offset, spacing, end, circular) {\n    const { x , y , startAngle: start , pixelMargin , innerRadius: innerR  } = element;\n    const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n    const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n    let spacingOffset = 0;\n    const alpha = end - start;\n    if (spacing) {\n        // When spacing is present, it is the same for all items\n        // So we adjust the start and end angle of the arc such that\n        // the distance is the same as it would be without the spacing\n        const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n        const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n        const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n        const adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n        spacingOffset = (alpha - adjustedAngle) / 2;\n    }\n    const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n    const angleOffset = (alpha - beta) / 2;\n    const startAngle = start + angleOffset + spacingOffset;\n    const endAngle = end - angleOffset - spacingOffset;\n    const { outerStart , outerEnd , innerStart , innerEnd  } = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n    const outerStartAdjustedRadius = outerRadius - outerStart;\n    const outerEndAdjustedRadius = outerRadius - outerEnd;\n    const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n    const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n    const innerStartAdjustedRadius = innerRadius + innerStart;\n    const innerEndAdjustedRadius = innerRadius + innerEnd;\n    const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n    const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n    ctx.beginPath();\n    if (circular) {\n        // The first arc segments from point 1 to point a to point 2\n        const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n        ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n        ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n        // The corner segment from point 2 to point 3\n        if (outerEnd > 0) {\n            const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n        }\n        // The line from point 3 to point 4\n        const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n        ctx.lineTo(p4.x, p4.y);\n        // The corner segment from point 4 to point 5\n        if (innerEnd > 0) {\n            const pCenter1 = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter1.x, pCenter1.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n        }\n        // The inner arc from point 5 to point b to point 6\n        const innerMidAdjustedAngle = (endAngle - innerEnd / innerRadius + (startAngle + innerStart / innerRadius)) / 2;\n        ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, innerMidAdjustedAngle, true);\n        ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + innerStart / innerRadius, true);\n        // The corner segment from point 6 to point 7\n        if (innerStart > 0) {\n            const pCenter2 = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter2.x, pCenter2.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n        }\n        // The line from point 7 to point 8\n        const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n        ctx.lineTo(p8.x, p8.y);\n        // The corner segment from point 8 to point 1\n        if (outerStart > 0) {\n            const pCenter3 = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter3.x, pCenter3.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n        }\n    } else {\n        ctx.moveTo(x, y);\n        const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n        const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerStartX, outerStartY);\n        const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n        const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerEndX, outerEndY);\n    }\n    ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference  } = element;\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.fill();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.fill();\n    return endAngle;\n}\nfunction drawBorder(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference , options  } = element;\n    const { borderWidth , borderJoinStyle  } = options;\n    const inner = options.borderAlign === 'inner';\n    if (!borderWidth) {\n        return;\n    }\n    if (inner) {\n        ctx.lineWidth = borderWidth * 2;\n        ctx.lineJoin = borderJoinStyle || 'round';\n    } else {\n        ctx.lineWidth = borderWidth;\n        ctx.lineJoin = borderJoinStyle || 'bevel';\n    }\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.stroke();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    if (inner) {\n        clipArc(ctx, element, endAngle);\n    }\n    if (!fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        ctx.stroke();\n    }\n}\nclass ArcElement extends Element {\n    static id = 'arc';\n    static defaults = {\n        borderAlign: 'center',\n        borderColor: '#fff',\n        borderJoinStyle: undefined,\n        borderRadius: 0,\n        borderWidth: 2,\n        offset: 0,\n        spacing: 0,\n        angle: undefined,\n        circular: true\n    };\n    static defaultRoutes = {\n        backgroundColor: 'backgroundColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.circumference = undefined;\n        this.startAngle = undefined;\n        this.endAngle = undefined;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.pixelMargin = 0;\n        this.fullCircles = 0;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(chartX, chartY, useFinalPosition) {\n        const point = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        const { angle , distance  } = getAngleFromPoint(point, {\n            x: chartX,\n            y: chartY\n        });\n        const { startAngle , endAngle , innerRadius , outerRadius , circumference  } = this.getProps([\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius',\n            'circumference'\n        ], useFinalPosition);\n        const rAdjust = this.options.spacing / 2;\n        const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n        const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n        const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n        return betweenAngles && withinRadius;\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , startAngle , endAngle , innerRadius , outerRadius  } = this.getProps([\n            'x',\n            'y',\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius',\n            'circumference', \n        ], useFinalPosition);\n        const { offset , spacing  } = this.options;\n        const halfAngle = (startAngle + endAngle) / 2;\n        const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n        return {\n            x: x + Math.cos(halfAngle) * halfRadius,\n            y: y + Math.sin(halfAngle) * halfRadius\n        };\n    }\n    tooltipPosition(useFinalPosition) {\n        return this.getCenterPoint(useFinalPosition);\n    }\n    draw(ctx) {\n        const { options , circumference  } = this;\n        const offset = (options.offset || 0) / 4;\n        const spacing = (options.spacing || 0) / 2;\n        const circular = options.circular;\n        this.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n        this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n        if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n            return;\n        }\n        ctx.save();\n        const halfAngle = (this.startAngle + this.endAngle) / 2;\n        ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n        const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n        const radiusOffset = offset * fix;\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        drawArc(ctx, this, radiusOffset, spacing, circular);\n        drawBorder(ctx, this, radiusOffset, spacing, circular);\n        ctx.restore();\n    }\n}\n\nfunction setStyle(ctx, options, style = options) {\n    ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n    ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n    ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n    ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n    ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n    ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n    ctx.lineTo(target.x, target.y);\n}\nfunction getLineMethod(options) {\n    if (options.stepped) {\n        return _steppedLineTo;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierCurveTo;\n    }\n    return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n    const count = points.length;\n    const { start: paramsStart = 0 , end: paramsEnd = count - 1  } = params;\n    const { start: segmentStart , end: segmentEnd  } = segment;\n    const start = Math.max(paramsStart, segmentStart);\n    const end = Math.min(paramsEnd, segmentEnd);\n    const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n    return {\n        count,\n        start,\n        loop: segment.loop,\n        ilen: end < start && !outside ? count + end - start : end - start\n    };\n}\n function pathSegment(ctx, line, segment, params) {\n    const { points , options  } = line;\n    const { count , start , loop , ilen  } = pathVars(points, segment, params);\n    const lineMethod = getLineMethod(options);\n    let { move =true , reverse  } = params || {};\n    let i, point, prev;\n    for(i = 0; i <= ilen; ++i){\n        point = points[(start + (reverse ? ilen - i : i)) % count];\n        if (point.skip) {\n            continue;\n        } else if (move) {\n            ctx.moveTo(point.x, point.y);\n            move = false;\n        } else {\n            lineMethod(ctx, prev, point, reverse, options.stepped);\n        }\n        prev = point;\n    }\n    if (loop) {\n        point = points[(start + (reverse ? ilen : 0)) % count];\n        lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    return !!loop;\n}\n function fastPathSegment(ctx, line, segment, params) {\n    const points = line.points;\n    const { count , start , ilen  } = pathVars(points, segment, params);\n    const { move =true , reverse  } = params || {};\n    let avgX = 0;\n    let countX = 0;\n    let i, point, prevX, minY, maxY, lastY;\n    const pointIndex = (index)=>(start + (reverse ? ilen - index : index)) % count;\n    const drawX = ()=>{\n        if (minY !== maxY) {\n            ctx.lineTo(avgX, maxY);\n            ctx.lineTo(avgX, minY);\n            ctx.lineTo(avgX, lastY);\n        }\n    };\n    if (move) {\n        point = points[pointIndex(0)];\n        ctx.moveTo(point.x, point.y);\n    }\n    for(i = 0; i <= ilen; ++i){\n        point = points[pointIndex(i)];\n        if (point.skip) {\n            continue;\n        }\n        const x = point.x;\n        const y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n            } else if (y > maxY) {\n                maxY = y;\n            }\n            avgX = (countX * avgX + x) / ++countX;\n        } else {\n            drawX();\n            ctx.lineTo(x, y);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n        }\n        lastY = y;\n    }\n    drawX();\n}\n function _getSegmentMethod(line) {\n    const opts = line.options;\n    const borderDash = opts.borderDash && opts.borderDash.length;\n    const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n    return useFastPath ? fastPathSegment : pathSegment;\n}\n function _getInterpolationMethod(options) {\n    if (options.stepped) {\n        return _steppedInterpolation;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierInterpolation;\n    }\n    return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n    let path = line._path;\n    if (!path) {\n        path = line._path = new Path2D();\n        if (line.path(path, start, count)) {\n            path.closePath();\n        }\n    }\n    setStyle(ctx, line.options);\n    ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n    const { segments , options  } = line;\n    const segmentMethod = _getSegmentMethod(line);\n    for (const segment of segments){\n        setStyle(ctx, options, segment.style);\n        ctx.beginPath();\n        if (segmentMethod(ctx, line, segment, {\n            start,\n            end: start + count - 1\n        })) {\n            ctx.closePath();\n        }\n        ctx.stroke();\n    }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n    if (usePath2D && !line.options.segment) {\n        strokePathWithCache(ctx, line, start, count);\n    } else {\n        strokePathDirect(ctx, line, start, count);\n    }\n}\nclass LineElement extends Element {\n    static id = 'line';\n static defaults = {\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: 'miter',\n        borderWidth: 3,\n        capBezierPoints: true,\n        cubicInterpolationMode: 'default',\n        fill: false,\n        spanGaps: false,\n        stepped: false,\n        tension: 0\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash' && name !== 'fill'\n    };\n    constructor(cfg){\n        super();\n        this.animated = true;\n        this.options = undefined;\n        this._chart = undefined;\n        this._loop = undefined;\n        this._fullLoop = undefined;\n        this._path = undefined;\n        this._points = undefined;\n        this._segments = undefined;\n        this._decimated = false;\n        this._pointsUpdated = false;\n        this._datasetIndex = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    updateControlPoints(chartArea, indexAxis) {\n        const options = this.options;\n        if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n            const loop = options.spanGaps ? this._loop : this._fullLoop;\n            _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n            this._pointsUpdated = true;\n        }\n    }\n    set points(points) {\n        this._points = points;\n        delete this._segments;\n        delete this._path;\n        this._pointsUpdated = false;\n    }\n    get points() {\n        return this._points;\n    }\n    get segments() {\n        return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n    }\n first() {\n        const segments = this.segments;\n        const points = this.points;\n        return segments.length && points[segments[0].start];\n    }\n last() {\n        const segments = this.segments;\n        const points = this.points;\n        const count = segments.length;\n        return count && points[segments[count - 1].end];\n    }\n interpolate(point, property) {\n        const options = this.options;\n        const value = point[property];\n        const points = this.points;\n        const segments = _boundSegments(this, {\n            property,\n            start: value,\n            end: value\n        });\n        if (!segments.length) {\n            return;\n        }\n        const result = [];\n        const _interpolate = _getInterpolationMethod(options);\n        let i, ilen;\n        for(i = 0, ilen = segments.length; i < ilen; ++i){\n            const { start , end  } = segments[i];\n            const p1 = points[start];\n            const p2 = points[end];\n            if (p1 === p2) {\n                result.push(p1);\n                continue;\n            }\n            const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n            const interpolated = _interpolate(p1, p2, t, options.stepped);\n            interpolated[property] = point[property];\n            result.push(interpolated);\n        }\n        return result.length === 1 ? result[0] : result;\n    }\n pathSegment(ctx, segment, params) {\n        const segmentMethod = _getSegmentMethod(this);\n        return segmentMethod(ctx, this, segment, params);\n    }\n path(ctx, start, count) {\n        const segments = this.segments;\n        const segmentMethod = _getSegmentMethod(this);\n        let loop = this._loop;\n        start = start || 0;\n        count = count || this.points.length - start;\n        for (const segment of segments){\n            loop &= segmentMethod(ctx, this, segment, {\n                start,\n                end: start + count - 1\n            });\n        }\n        return !!loop;\n    }\n draw(ctx, chartArea, start, count) {\n        const options = this.options || {};\n        const points = this.points || [];\n        if (points.length && options.borderWidth) {\n            ctx.save();\n            draw(ctx, this, start, count);\n            ctx.restore();\n        }\n        if (this.animated) {\n            this._pointsUpdated = false;\n            this._path = undefined;\n        }\n    }\n}\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n    const options = el.options;\n    const { [axis]: value  } = el.getProps([\n        axis\n    ], useFinalPosition);\n    return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\nclass PointElement extends Element {\n    static id = 'point';\n    /**\n   * @type {any}\n   */ static defaults = {\n        borderWidth: 1,\n        hitRadius: 1,\n        hoverBorderWidth: 1,\n        hoverRadius: 4,\n        pointStyle: 'circle',\n        radius: 3,\n        rotation: 0\n    };\n    /**\n   * @type {any}\n   */ static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.parsed = undefined;\n        this.skip = undefined;\n        this.stop = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        const options = this.options;\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange$1(this, mouseX, 'x', useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange$1(this, mouseY, 'y', useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    size(options) {\n        options = options || this.options || {};\n        let radius = options.radius || 0;\n        radius = Math.max(radius, radius && options.hoverRadius || 0);\n        const borderWidth = radius && options.borderWidth || 0;\n        return (radius + borderWidth) * 2;\n    }\n    draw(ctx, area) {\n        const options = this.options;\n        if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n            return;\n        }\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.fillStyle = options.backgroundColor;\n        drawPoint(ctx, options, this.x, this.y);\n    }\n    getRange() {\n        const options = this.options || {};\n        // @ts-expect-error Fallbacks should never be hit in practice\n        return options.radius + options.hitRadius;\n    }\n}\n\nfunction getBarBounds(bar, useFinalPosition) {\n    const { x , y , base , width , height  } =  bar.getProps([\n        'x',\n        'y',\n        'base',\n        'width',\n        'height'\n    ], useFinalPosition);\n    let left, right, top, bottom, half;\n    if (bar.horizontal) {\n        half = height / 2;\n        left = Math.min(x, base);\n        right = Math.max(x, base);\n        top = y - half;\n        bottom = y + half;\n    } else {\n        half = width / 2;\n        left = x - half;\n        right = x + half;\n        top = Math.min(y, base);\n        bottom = Math.max(y, base);\n    }\n    return {\n        left,\n        top,\n        right,\n        bottom\n    };\n}\nfunction skipOrLimit(skip, value, min, max) {\n    return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n    const value = bar.options.borderWidth;\n    const skip = bar.borderSkipped;\n    const o = toTRBL(value);\n    return {\n        t: skipOrLimit(skip.top, o.top, 0, maxH),\n        r: skipOrLimit(skip.right, o.right, 0, maxW),\n        b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n        l: skipOrLimit(skip.left, o.left, 0, maxW)\n    };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n    const { enableBorderRadius  } = bar.getProps([\n        'enableBorderRadius'\n    ]);\n    const value = bar.options.borderRadius;\n    const o = toTRBLCorners(value);\n    const maxR = Math.min(maxW, maxH);\n    const skip = bar.borderSkipped;\n    const enableBorder = enableBorderRadius || isObject(value);\n    return {\n        topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n        topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n        bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n        bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n    };\n}\nfunction boundingRects(bar) {\n    const bounds = getBarBounds(bar);\n    const width = bounds.right - bounds.left;\n    const height = bounds.bottom - bounds.top;\n    const border = parseBorderWidth(bar, width / 2, height / 2);\n    const radius = parseBorderRadius(bar, width / 2, height / 2);\n    return {\n        outer: {\n            x: bounds.left,\n            y: bounds.top,\n            w: width,\n            h: height,\n            radius\n        },\n        inner: {\n            x: bounds.left + border.l,\n            y: bounds.top + border.t,\n            w: width - border.l - border.r,\n            h: height - border.t - border.b,\n            radius: {\n                topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n                topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n                bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n                bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n            }\n        }\n    };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n    const skipX = x === null;\n    const skipY = y === null;\n    const skipBoth = skipX && skipY;\n    const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n    return bounds && (skipX || _isBetween(x, bounds.left, bounds.right)) && (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n    return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n function addNormalRectPath(ctx, rect) {\n    ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n    const x = rect.x !== refRect.x ? -amount : 0;\n    const y = rect.y !== refRect.y ? -amount : 0;\n    const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n    const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n    return {\n        x: rect.x + x,\n        y: rect.y + y,\n        w: rect.w + w,\n        h: rect.h + h,\n        radius: rect.radius\n    };\n}\nclass BarElement extends Element {\n    static id = 'bar';\n static defaults = {\n        borderSkipped: 'start',\n        borderWidth: 0,\n        borderRadius: 0,\n        inflateAmount: 'auto',\n        pointStyle: undefined\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.horizontal = undefined;\n        this.base = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.inflateAmount = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    draw(ctx) {\n        const { inflateAmount , options: { borderColor , backgroundColor  }  } = this;\n        const { inner , outer  } = boundingRects(this);\n        const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n        ctx.save();\n        if (outer.w !== inner.w || outer.h !== inner.h) {\n            ctx.beginPath();\n            addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n            ctx.clip();\n            addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n            ctx.fillStyle = borderColor;\n            ctx.fill('evenodd');\n        }\n        ctx.beginPath();\n        addRectPath(ctx, inflateRect(inner, inflateAmount));\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n        ctx.restore();\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        return inRange(this, mouseX, mouseY, useFinalPosition);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange(this, mouseX, null, useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange(this, null, mouseY, useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , base , horizontal  } =  this.getProps([\n            'x',\n            'y',\n            'base',\n            'horizontal'\n        ], useFinalPosition);\n        return {\n            x: horizontal ? (x + base) / 2 : x,\n            y: horizontal ? y : (y + base) / 2\n        };\n    }\n    getRange(axis) {\n        return axis === 'x' ? this.width / 2 : this.height / 2;\n    }\n}\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nLineElement: LineElement,\nPointElement: PointElement,\nBarElement: BarElement\n});\n\nconst BORDER_COLORS = [\n    'rgb(54, 162, 235)',\n    'rgb(255, 99, 132)',\n    'rgb(255, 159, 64)',\n    'rgb(255, 205, 86)',\n    'rgb(75, 192, 192)',\n    'rgb(153, 102, 255)',\n    'rgb(201, 203, 207)' // grey\n];\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map((color)=>color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\nfunction getBorderColor(i) {\n    return BORDER_COLORS[i % BORDER_COLORS.length];\n}\nfunction getBackgroundColor(i) {\n    return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\nfunction createDefaultDatasetColorizer() {\n    return (dataset, i)=>{\n        dataset.borderColor = getBorderColor(i);\n        dataset.backgroundColor = getBackgroundColor(i);\n    };\n}\nfunction createDoughnutDatasetColorizer() {\n    let i = 0;\n    return (dataset)=>{\n        dataset.backgroundColor = dataset.data.map(()=>getBorderColor(i++));\n    };\n}\nfunction createPolarAreaDatasetColorizer() {\n    let i = 0;\n    return (dataset)=>{\n        dataset.backgroundColor = dataset.data.map(()=>getBackgroundColor(i++));\n    };\n}\nfunction getColorizer(type) {\n    if (type === 'doughnut' || type === 'pie') {\n        return createDoughnutDatasetColorizer();\n    } else if (type === 'polarArea') {\n        return createPolarAreaDatasetColorizer();\n    }\n    return createDefaultDatasetColorizer();\n}\nfunction containsColorsDefinitions(descriptors) {\n    let k;\n    for(k in descriptors){\n        if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n            return true;\n        }\n    }\n    return false;\n}\nvar plugin_colors = {\n    id: 'colors',\n    defaults: {\n        enabled: true\n    },\n    beforeLayout (chart, _args, options) {\n        if (!options.enabled) {\n            return;\n        }\n        const { type , options: { elements  } , data: { datasets  }  } = chart.config;\n        if (containsColorsDefinitions(datasets) || elements && containsColorsDefinitions(elements)) {\n            return;\n        }\n        const colorizer = getColorizer(type);\n        datasets.forEach(colorizer);\n    }\n};\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n const samples = options.samples || availableWidth;\n    if (samples >= count) {\n        return data.slice(start, start + count);\n    }\n    const decimated = [];\n    const bucketWidth = (count - 2) / (samples - 2);\n    let sampledIndex = 0;\n    const endIndex = start + count - 1;\n    let a = start;\n    let i, maxAreaPoint, maxArea, area, nextA;\n    decimated[sampledIndex++] = data[a];\n    for(i = 0; i < samples - 2; i++){\n        let avgX = 0;\n        let avgY = 0;\n        let j;\n        const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n        const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n        const avgRangeLength = avgRangeEnd - avgRangeStart;\n        for(j = avgRangeStart; j < avgRangeEnd; j++){\n            avgX += data[j].x;\n            avgY += data[j].y;\n        }\n        avgX /= avgRangeLength;\n        avgY /= avgRangeLength;\n        const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n        const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n        const { x: pointAx , y: pointAy  } = data[a];\n        maxArea = area = -1;\n        for(j = rangeOffs; j < rangeTo; j++){\n            area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n            if (area > maxArea) {\n                maxArea = area;\n                maxAreaPoint = data[j];\n                nextA = j;\n            }\n        }\n        decimated[sampledIndex++] = maxAreaPoint;\n        a = nextA;\n    }\n    decimated[sampledIndex++] = data[endIndex];\n    return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n    let avgX = 0;\n    let countX = 0;\n    let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n    const decimated = [];\n    const endIndex = start + count - 1;\n    const xMin = data[start].x;\n    const xMax = data[endIndex].x;\n    const dx = xMax - xMin;\n    for(i = start; i < start + count; ++i){\n        point = data[i];\n        x = (point.x - xMin) / dx * availableWidth;\n        y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n                minIndex = i;\n            } else if (y > maxY) {\n                maxY = y;\n                maxIndex = i;\n            }\n            avgX = (countX * avgX + point.x) / ++countX;\n        } else {\n            const lastIndex = i - 1;\n            if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n                const intermediateIndex1 = Math.min(minIndex, maxIndex);\n                const intermediateIndex2 = Math.max(minIndex, maxIndex);\n                if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex1],\n                        x: avgX\n                    });\n                }\n                if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex2],\n                        x: avgX\n                    });\n                }\n            }\n            if (i > 0 && lastIndex !== startIndex) {\n                decimated.push(data[lastIndex]);\n            }\n            decimated.push(point);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n            minIndex = maxIndex = startIndex = i;\n        }\n    }\n    return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n    if (dataset._decimated) {\n        const data = dataset._data;\n        delete dataset._decimated;\n        delete dataset._data;\n        Object.defineProperty(dataset, 'data', {\n            value: data\n        });\n    }\n}\nfunction cleanDecimatedData(chart) {\n    chart.data.datasets.forEach((dataset)=>{\n        cleanDecimatedDataset(dataset);\n    });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n    const pointCount = points.length;\n    let start = 0;\n    let count;\n    const { iScale  } = meta;\n    const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n    if (minDefined) {\n        start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n    }\n    if (maxDefined) {\n        count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n    } else {\n        count = pointCount - start;\n    }\n    return {\n        start,\n        count\n    };\n}\nvar plugin_decimation = {\n    id: 'decimation',\n    defaults: {\n        algorithm: 'min-max',\n        enabled: false\n    },\n    beforeElementsUpdate: (chart, args, options)=>{\n        if (!options.enabled) {\n            cleanDecimatedData(chart);\n            return;\n        }\n        const availableWidth = chart.width;\n        chart.data.datasets.forEach((dataset, datasetIndex)=>{\n            const { _data , indexAxis  } = dataset;\n            const meta = chart.getDatasetMeta(datasetIndex);\n            const data = _data || dataset.data;\n            if (resolve([\n                indexAxis,\n                chart.options.indexAxis\n            ]) === 'y') {\n                return;\n            }\n            if (!meta.controller.supportsDecimation) {\n                return;\n            }\n            const xAxis = chart.scales[meta.xAxisID];\n            if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n                return;\n            }\n            if (chart.options.parsing) {\n                return;\n            }\n            let { start , count  } = getStartAndCountOfVisiblePointsSimplified(meta, data);\n            const threshold = options.threshold || 4 * availableWidth;\n            if (count <= threshold) {\n                cleanDecimatedDataset(dataset);\n                return;\n            }\n            if (isNullOrUndef(_data)) {\n                dataset._data = data;\n                delete dataset.data;\n                Object.defineProperty(dataset, 'data', {\n                    configurable: true,\n                    enumerable: true,\n                    get: function() {\n                        return this._decimated;\n                    },\n                    set: function(d) {\n                        this._data = d;\n                    }\n                });\n            }\n            let decimated;\n            switch(options.algorithm){\n                case 'lttb':\n                    decimated = lttbDecimation(data, start, count, availableWidth, options);\n                    break;\n                case 'min-max':\n                    decimated = minMaxDecimation(data, start, count, availableWidth);\n                    break;\n                default:\n                    throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n            }\n            dataset._decimated = decimated;\n        });\n    },\n    destroy (chart) {\n        cleanDecimatedData(chart);\n    }\n};\n\nfunction _segments(line, target, property) {\n    const segments = line.segments;\n    const points = line.points;\n    const tpoints = target.points;\n    const parts = [];\n    for (const segment of segments){\n        let { start , end  } = segment;\n        end = _findSegmentEnd(start, end, points);\n        const bounds = _getBounds(property, points[start], points[end], segment.loop);\n        if (!target.segments) {\n            parts.push({\n                source: segment,\n                target: bounds,\n                start: points[start],\n                end: points[end]\n            });\n            continue;\n        }\n        const targetSegments = _boundSegments(target, bounds);\n        for (const tgt of targetSegments){\n            const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n            const fillSources = _boundSegment(segment, points, subBounds);\n            for (const fillSource of fillSources){\n                parts.push({\n                    source: fillSource,\n                    target: tgt,\n                    start: {\n                        [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n                    },\n                    end: {\n                        [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n                    }\n                });\n            }\n        }\n    }\n    return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n    if (loop) {\n        return;\n    }\n    let start = first[property];\n    let end = last[property];\n    if (property === 'angle') {\n        start = _normalizeAngle(start);\n        end = _normalizeAngle(end);\n    }\n    return {\n        property,\n        start,\n        end\n    };\n}\nfunction _pointsFromSegments(boundary, line) {\n    const { x =null , y =null  } = boundary || {};\n    const linePoints = line.points;\n    const points = [];\n    line.segments.forEach(({ start , end  })=>{\n        end = _findSegmentEnd(start, end, linePoints);\n        const first = linePoints[start];\n        const last = linePoints[end];\n        if (y !== null) {\n            points.push({\n                x: first.x,\n                y\n            });\n            points.push({\n                x: last.x,\n                y\n            });\n        } else if (x !== null) {\n            points.push({\n                x,\n                y: first.y\n            });\n            points.push({\n                x,\n                y: last.y\n            });\n        }\n    });\n    return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n    for(; end > start; end--){\n        const point = points[end];\n        if (!isNaN(point.x) && !isNaN(point.y)) {\n            break;\n        }\n    }\n    return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n    if (a && b) {\n        return fn(a[prop], b[prop]);\n    }\n    return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n    let points = [];\n    let _loop = false;\n    if (isArray(boundary)) {\n        _loop = true;\n        points = boundary;\n    } else {\n        points = _pointsFromSegments(boundary, line);\n    }\n    return points.length ? new LineElement({\n        points,\n        options: {\n            tension: 0\n        },\n        _loop,\n        _fullLoop: _loop\n    }) : null;\n}\nfunction _shouldApplyFill(source) {\n    return source && source.fill !== false;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n    const source = sources[index];\n    let fill = source.fill;\n    const visited = [\n        index\n    ];\n    let target;\n    if (!propagate) {\n        return fill;\n    }\n    while(fill !== false && visited.indexOf(fill) === -1){\n        if (!isNumberFinite(fill)) {\n            return fill;\n        }\n        target = sources[fill];\n        if (!target) {\n            return false;\n        }\n        if (target.visible) {\n            return fill;\n        }\n        visited.push(fill);\n        fill = target.fill;\n    }\n    return false;\n}\n function _decodeFill(line, index, count) {\n     const fill = parseFillOption(line);\n    if (isObject(fill)) {\n        return isNaN(fill.value) ? false : fill;\n    }\n    let target = parseFloat(fill);\n    if (isNumberFinite(target) && Math.floor(target) === target) {\n        return decodeTargetIndex(fill[0], index, target, count);\n    }\n    return [\n        'origin',\n        'start',\n        'end',\n        'stack',\n        'shape'\n    ].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n    if (firstCh === '-' || firstCh === '+') {\n        target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n        return false;\n    }\n    return target;\n}\n function _getTargetPixel(fill, scale) {\n    let pixel = null;\n    if (fill === 'start') {\n        pixel = scale.bottom;\n    } else if (fill === 'end') {\n        pixel = scale.top;\n    } else if (isObject(fill)) {\n        pixel = scale.getPixelForValue(fill.value);\n    } else if (scale.getBasePixel) {\n        pixel = scale.getBasePixel();\n    }\n    return pixel;\n}\n function _getTargetValue(fill, scale, startValue) {\n    let value;\n    if (fill === 'start') {\n        value = startValue;\n    } else if (fill === 'end') {\n        value = scale.options.reverse ? scale.min : scale.max;\n    } else if (isObject(fill)) {\n        value = fill.value;\n    } else {\n        value = scale.getBaseValue();\n    }\n    return value;\n}\n function parseFillOption(line) {\n    const options = line.options;\n    const fillOption = options.fill;\n    let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n    if (fill === undefined) {\n        fill = !!options.backgroundColor;\n    }\n    if (fill === false || fill === null) {\n        return false;\n    }\n    if (fill === true) {\n        return 'origin';\n    }\n    return fill;\n}\n\nfunction _buildStackLine(source) {\n    const { scale , index , line  } = source;\n    const points = [];\n    const segments = line.segments;\n    const sourcePoints = line.points;\n    const linesBelow = getLinesBelow(scale, index);\n    linesBelow.push(_createBoundaryLine({\n        x: null,\n        y: scale.bottom\n    }, line));\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        for(let j = segment.start; j <= segment.end; j++){\n            addPointsBelow(points, sourcePoints[j], linesBelow);\n        }\n    }\n    return new LineElement({\n        points,\n        options: {}\n    });\n}\n function getLinesBelow(scale, index) {\n    const below = [];\n    const metas = scale.getMatchingVisibleMetas('line');\n    for(let i = 0; i < metas.length; i++){\n        const meta = metas[i];\n        if (meta.index === index) {\n            break;\n        }\n        if (!meta.hidden) {\n            below.unshift(meta.dataset);\n        }\n    }\n    return below;\n}\n function addPointsBelow(points, sourcePoint, linesBelow) {\n    const postponed = [];\n    for(let j = 0; j < linesBelow.length; j++){\n        const line = linesBelow[j];\n        const { first , last , point  } = findPoint(line, sourcePoint, 'x');\n        if (!point || first && last) {\n            continue;\n        }\n        if (first) {\n            postponed.unshift(point);\n        } else {\n            points.push(point);\n            if (!last) {\n                break;\n            }\n        }\n    }\n    points.push(...postponed);\n}\n function findPoint(line, sourcePoint, property) {\n    const point = line.interpolate(sourcePoint, property);\n    if (!point) {\n        return {};\n    }\n    const pointValue = point[property];\n    const segments = line.segments;\n    const linePoints = line.points;\n    let first = false;\n    let last = false;\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        const firstValue = linePoints[segment.start][property];\n        const lastValue = linePoints[segment.end][property];\n        if (_isBetween(pointValue, firstValue, lastValue)) {\n            first = pointValue === firstValue;\n            last = pointValue === lastValue;\n            break;\n        }\n    }\n    return {\n        first,\n        last,\n        point\n    };\n}\n\nclass simpleArc {\n    constructor(opts){\n        this.x = opts.x;\n        this.y = opts.y;\n        this.radius = opts.radius;\n    }\n    pathSegment(ctx, bounds, opts) {\n        const { x , y , radius  } = this;\n        bounds = bounds || {\n            start: 0,\n            end: TAU\n        };\n        ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n        return !opts.bounds;\n    }\n    interpolate(point) {\n        const { x , y , radius  } = this;\n        const angle = point.angle;\n        return {\n            x: x + Math.cos(angle) * radius,\n            y: y + Math.sin(angle) * radius,\n            angle\n        };\n    }\n}\n\nfunction _getTarget(source) {\n    const { chart , fill , line  } = source;\n    if (isNumberFinite(fill)) {\n        return getLineByIndex(chart, fill);\n    }\n    if (fill === 'stack') {\n        return _buildStackLine(source);\n    }\n    if (fill === 'shape') {\n        return true;\n    }\n    const boundary = computeBoundary(source);\n    if (boundary instanceof simpleArc) {\n        return boundary;\n    }\n    return _createBoundaryLine(boundary, line);\n}\n function getLineByIndex(chart, index) {\n    const meta = chart.getDatasetMeta(index);\n    const visible = meta && chart.isDatasetVisible(index);\n    return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n    const scale = source.scale || {};\n    if (scale.getPointPositionForValue) {\n        return computeCircularBoundary(source);\n    }\n    return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n    const { scale ={} , fill  } = source;\n    const pixel = _getTargetPixel(fill, scale);\n    if (isNumberFinite(pixel)) {\n        const horizontal = scale.isHorizontal();\n        return {\n            x: horizontal ? pixel : null,\n            y: horizontal ? null : pixel\n        };\n    }\n    return null;\n}\nfunction computeCircularBoundary(source) {\n    const { scale , fill  } = source;\n    const options = scale.options;\n    const length = scale.getLabels().length;\n    const start = options.reverse ? scale.max : scale.min;\n    const value = _getTargetValue(fill, scale, start);\n    const target = [];\n    if (options.grid.circular) {\n        const center = scale.getPointPositionForValue(0, start);\n        return new simpleArc({\n            x: center.x,\n            y: center.y,\n            radius: scale.getDistanceFromCenterForValue(value)\n        });\n    }\n    for(let i = 0; i < length; ++i){\n        target.push(scale.getPointPositionForValue(i, value));\n    }\n    return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n    const target = _getTarget(source);\n    const { line , scale , axis  } = source;\n    const lineOpts = line.options;\n    const fillOption = lineOpts.fill;\n    const color = lineOpts.backgroundColor;\n    const { above =color , below =color  } = fillOption || {};\n    if (target && line.points.length) {\n        clipArea(ctx, area);\n        doFill(ctx, {\n            line,\n            target,\n            above,\n            below,\n            area,\n            scale,\n            axis\n        });\n        unclipArea(ctx);\n    }\n}\nfunction doFill(ctx, cfg) {\n    const { line , target , above , below , area , scale  } = cfg;\n    const property = line._loop ? 'angle' : cfg.axis;\n    ctx.save();\n    if (property === 'x' && below !== above) {\n        clipVertical(ctx, target, area.top);\n        fill(ctx, {\n            line,\n            target,\n            color: above,\n            scale,\n            property\n        });\n        ctx.restore();\n        ctx.save();\n        clipVertical(ctx, target, area.bottom);\n    }\n    fill(ctx, {\n        line,\n        target,\n        color: below,\n        scale,\n        property\n    });\n    ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n    const { segments , points  } = target;\n    let first = true;\n    let lineLoop = false;\n    ctx.beginPath();\n    for (const segment of segments){\n        const { start , end  } = segment;\n        const firstPoint = points[start];\n        const lastPoint = points[_findSegmentEnd(start, end, points)];\n        if (first) {\n            ctx.moveTo(firstPoint.x, firstPoint.y);\n            first = false;\n        } else {\n            ctx.lineTo(firstPoint.x, clipY);\n            ctx.lineTo(firstPoint.x, firstPoint.y);\n        }\n        lineLoop = !!target.pathSegment(ctx, segment, {\n            move: lineLoop\n        });\n        if (lineLoop) {\n            ctx.closePath();\n        } else {\n            ctx.lineTo(lastPoint.x, clipY);\n        }\n    }\n    ctx.lineTo(target.first().x, clipY);\n    ctx.closePath();\n    ctx.clip();\n}\nfunction fill(ctx, cfg) {\n    const { line , target , property , color , scale  } = cfg;\n    const segments = _segments(line, target, property);\n    for (const { source: src , target: tgt , start , end  } of segments){\n        const { style: { backgroundColor =color  } = {}  } = src;\n        const notShape = target !== true;\n        ctx.save();\n        ctx.fillStyle = backgroundColor;\n        clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n        ctx.beginPath();\n        const lineLoop = !!line.pathSegment(ctx, src);\n        let loop;\n        if (notShape) {\n            if (lineLoop) {\n                ctx.closePath();\n            } else {\n                interpolatedLineTo(ctx, target, end, property);\n            }\n            const targetLoop = !!target.pathSegment(ctx, tgt, {\n                move: lineLoop,\n                reverse: true\n            });\n            loop = lineLoop && targetLoop;\n            if (!loop) {\n                interpolatedLineTo(ctx, target, start, property);\n            }\n        }\n        ctx.closePath();\n        ctx.fill(loop ? 'evenodd' : 'nonzero');\n        ctx.restore();\n    }\n}\nfunction clipBounds(ctx, scale, bounds) {\n    const { top , bottom  } = scale.chart.chartArea;\n    const { property , start , end  } = bounds || {};\n    if (property === 'x') {\n        ctx.beginPath();\n        ctx.rect(start, top, end - start, bottom - top);\n        ctx.clip();\n    }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n    const interpolatedPoint = target.interpolate(point, property);\n    if (interpolatedPoint) {\n        ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n    }\n}\n\nvar index = {\n    id: 'filler',\n    afterDatasetsUpdate (chart, _args, options) {\n        const count = (chart.data.datasets || []).length;\n        const sources = [];\n        let meta, i, line, source;\n        for(i = 0; i < count; ++i){\n            meta = chart.getDatasetMeta(i);\n            line = meta.dataset;\n            source = null;\n            if (line && line.options && line instanceof LineElement) {\n                source = {\n                    visible: chart.isDatasetVisible(i),\n                    index: i,\n                    fill: _decodeFill(line, i, count),\n                    chart,\n                    axis: meta.controller.options.indexAxis,\n                    scale: meta.vScale,\n                    line\n                };\n            }\n            meta.$filler = source;\n            sources.push(source);\n        }\n        for(i = 0; i < count; ++i){\n            source = sources[i];\n            if (!source || source.fill === false) {\n                continue;\n            }\n            source.fill = _resolveTarget(sources, i, options.propagate);\n        }\n    },\n    beforeDraw (chart, _args, options) {\n        const draw = options.drawTime === 'beforeDraw';\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        const area = chart.chartArea;\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (!source) {\n                continue;\n            }\n            source.line.updateControlPoints(area, source.axis);\n            if (draw && source.fill) {\n                _drawfill(chart.ctx, source, area);\n            }\n        }\n    },\n    beforeDatasetsDraw (chart, _args, options) {\n        if (options.drawTime !== 'beforeDatasetsDraw') {\n            return;\n        }\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (_shouldApplyFill(source)) {\n                _drawfill(chart.ctx, source, chart.chartArea);\n            }\n        }\n    },\n    beforeDatasetDraw (chart, args, options) {\n        const source = args.meta.$filler;\n        if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n            return;\n        }\n        _drawfill(chart.ctx, source, chart.chartArea);\n    },\n    defaults: {\n        propagate: true,\n        drawTime: 'beforeDatasetDraw'\n    }\n};\n\nconst getBoxSize = (labelOpts, fontSize)=>{\n    let { boxHeight =fontSize , boxWidth =fontSize  } = labelOpts;\n    if (labelOpts.usePointStyle) {\n        boxHeight = Math.min(boxHeight, fontSize);\n        boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n    }\n    return {\n        boxWidth,\n        boxHeight,\n        itemHeight: Math.max(fontSize, boxHeight)\n    };\n};\nconst itemsEqual = (a, b)=>a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n constructor(config){\n        super();\n        this._added = false;\n        this.legendHitBoxes = [];\n this._hoveredItem = null;\n        this.doughnutMode = false;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this.legendItems = undefined;\n        this.columnSizes = undefined;\n        this.lineWidths = undefined;\n        this.maxHeight = undefined;\n        this.maxWidth = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this._margins = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight, margins) {\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins;\n        this.setDimensions();\n        this.buildLabels();\n        this.fit();\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = this._margins.left;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = this._margins.top;\n            this.bottom = this.height;\n        }\n    }\n    buildLabels() {\n        const labelOpts = this.options.labels || {};\n        let legendItems = callback(labelOpts.generateLabels, [\n            this.chart\n        ], this) || [];\n        if (labelOpts.filter) {\n            legendItems = legendItems.filter((item)=>labelOpts.filter(item, this.chart.data));\n        }\n        if (labelOpts.sort) {\n            legendItems = legendItems.sort((a, b)=>labelOpts.sort(a, b, this.chart.data));\n        }\n        if (this.options.reverse) {\n            legendItems.reverse();\n        }\n        this.legendItems = legendItems;\n    }\n    fit() {\n        const { options , ctx  } = this;\n        if (!options.display) {\n            this.width = this.height = 0;\n            return;\n        }\n        const labelOpts = options.labels;\n        const labelFont = toFont(labelOpts.font);\n        const fontSize = labelFont.size;\n        const titleHeight = this._computeTitleHeight();\n        const { boxWidth , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        let width, height;\n        ctx.font = labelFont.string;\n        if (this.isHorizontal()) {\n            width = this.maxWidth;\n            height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n        } else {\n            height = this.maxHeight;\n            width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n        }\n        this.width = Math.min(width, options.maxWidth || this.maxWidth);\n        this.height = Math.min(height, options.maxHeight || this.maxHeight);\n    }\n _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n        const { ctx , maxWidth , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const lineWidths = this.lineWidths = [\n            0\n        ];\n        const lineHeight = itemHeight + padding;\n        let totalHeight = titleHeight;\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        let row = -1;\n        let top = -lineHeight;\n        this.legendItems.forEach((legendItem, i)=>{\n            const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n            if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n                totalHeight += lineHeight;\n                lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n                top += lineHeight;\n                row++;\n            }\n            hitboxes[i] = {\n                left: 0,\n                top,\n                row,\n                width: itemWidth,\n                height: itemHeight\n            };\n            lineWidths[lineWidths.length - 1] += itemWidth + padding;\n        });\n        return totalHeight;\n    }\n    _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n        const { ctx , maxHeight , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const columnSizes = this.columnSizes = [];\n        const heightLimit = maxHeight - titleHeight;\n        let totalWidth = padding;\n        let currentColWidth = 0;\n        let currentColHeight = 0;\n        let left = 0;\n        let col = 0;\n        this.legendItems.forEach((legendItem, i)=>{\n            const { itemWidth , itemHeight  } = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n            if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n                totalWidth += currentColWidth + padding;\n                columnSizes.push({\n                    width: currentColWidth,\n                    height: currentColHeight\n                });\n                left += currentColWidth + padding;\n                col++;\n                currentColWidth = currentColHeight = 0;\n            }\n            hitboxes[i] = {\n                left,\n                top: currentColHeight,\n                col,\n                width: itemWidth,\n                height: itemHeight\n            };\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight + padding;\n        });\n        totalWidth += currentColWidth;\n        columnSizes.push({\n            width: currentColWidth,\n            height: currentColHeight\n        });\n        return totalWidth;\n    }\n    adjustHitBoxes() {\n        if (!this.options.display) {\n            return;\n        }\n        const titleHeight = this._computeTitleHeight();\n        const { legendHitBoxes: hitboxes , options: { align , labels: { padding  } , rtl  }  } = this;\n        const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n        if (this.isHorizontal()) {\n            let row = 0;\n            let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n            for (const hitbox of hitboxes){\n                if (row !== hitbox.row) {\n                    row = hitbox.row;\n                    left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n                }\n                hitbox.top += this.top + titleHeight + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n                left += hitbox.width + padding;\n            }\n        } else {\n            let col = 0;\n            let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n            for (const hitbox1 of hitboxes){\n                if (hitbox1.col !== col) {\n                    col = hitbox1.col;\n                    top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n                }\n                hitbox1.top = top;\n                hitbox1.left += this.left + padding;\n                hitbox1.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox1.left), hitbox1.width);\n                top += hitbox1.height + padding;\n            }\n        }\n    }\n    isHorizontal() {\n        return this.options.position === 'top' || this.options.position === 'bottom';\n    }\n    draw() {\n        if (this.options.display) {\n            const ctx = this.ctx;\n            clipArea(ctx, this);\n            this._draw();\n            unclipArea(ctx);\n        }\n    }\n _draw() {\n        const { options: opts , columnSizes , lineWidths , ctx  } = this;\n        const { align , labels: labelOpts  } = opts;\n        const defaultColor = defaults.color;\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const labelFont = toFont(labelOpts.font);\n        const { padding  } = labelOpts;\n        const fontSize = labelFont.size;\n        const halfFontSize = fontSize / 2;\n        let cursor;\n        this.drawTitle();\n        ctx.textAlign = rtlHelper.textAlign('left');\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.font = labelFont.string;\n        const { boxWidth , boxHeight , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        const drawLegendBox = function(x, y, legendItem) {\n            if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n                return;\n            }\n            ctx.save();\n            const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n            ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n            ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n            ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n            ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n            ctx.lineWidth = lineWidth;\n            ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n            ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n            if (labelOpts.usePointStyle) {\n                const drawOptions = {\n                    radius: boxHeight * Math.SQRT2 / 2,\n                    pointStyle: legendItem.pointStyle,\n                    rotation: legendItem.rotation,\n                    borderWidth: lineWidth\n                };\n                const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n                const centerY = y + halfFontSize;\n                drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n            } else {\n                const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n                const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n                const borderRadius = toTRBLCorners(legendItem.borderRadius);\n                ctx.beginPath();\n                if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                    addRoundedRectPath(ctx, {\n                        x: xBoxLeft,\n                        y: yBoxTop,\n                        w: boxWidth,\n                        h: boxHeight,\n                        radius: borderRadius\n                    });\n                } else {\n                    ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n                }\n                ctx.fill();\n                if (lineWidth !== 0) {\n                    ctx.stroke();\n                }\n            }\n            ctx.restore();\n        };\n        const fillText = function(x, y, legendItem) {\n            renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n                strikethrough: legendItem.hidden,\n                textAlign: rtlHelper.textAlign(legendItem.textAlign)\n            });\n        };\n        const isHorizontal = this.isHorizontal();\n        const titleHeight = this._computeTitleHeight();\n        if (isHorizontal) {\n            cursor = {\n                x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n                y: this.top + padding + titleHeight,\n                line: 0\n            };\n        } else {\n            cursor = {\n                x: this.left + padding,\n                y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n                line: 0\n            };\n        }\n        overrideTextDirection(this.ctx, opts.textDirection);\n        const lineHeight = itemHeight + padding;\n        this.legendItems.forEach((legendItem, i)=>{\n            ctx.strokeStyle = legendItem.fontColor;\n            ctx.fillStyle = legendItem.fontColor;\n            const textWidth = ctx.measureText(legendItem.text).width;\n            const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n            const width = boxWidth + halfFontSize + textWidth;\n            let x = cursor.x;\n            let y = cursor.y;\n            rtlHelper.setWidth(this.width);\n            if (isHorizontal) {\n                if (i > 0 && x + width + padding > this.right) {\n                    y = cursor.y += lineHeight;\n                    cursor.line++;\n                    x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n                }\n            } else if (i > 0 && y + lineHeight > this.bottom) {\n                x = cursor.x = x + columnSizes[cursor.line].width + padding;\n                cursor.line++;\n                y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n            }\n            const realX = rtlHelper.x(x);\n            drawLegendBox(realX, y, legendItem);\n            x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n            fillText(rtlHelper.x(x), y, legendItem);\n            if (isHorizontal) {\n                cursor.x += width + padding;\n            } else if (typeof legendItem.text !== 'string') {\n                const fontLineHeight = labelFont.lineHeight;\n                cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight);\n            } else {\n                cursor.y += lineHeight;\n            }\n        });\n        restoreTextDirection(this.ctx, opts.textDirection);\n    }\n drawTitle() {\n        const opts = this.options;\n        const titleOpts = opts.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        if (!titleOpts.display) {\n            return;\n        }\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const ctx = this.ctx;\n        const position = titleOpts.position;\n        const halfFontSize = titleFont.size / 2;\n        const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n        let y;\n        let left = this.left;\n        let maxWidth = this.width;\n        if (this.isHorizontal()) {\n            maxWidth = Math.max(...this.lineWidths);\n            y = this.top + topPaddingPlusHalfFontSize;\n            left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n        } else {\n            const maxHeight = this.columnSizes.reduce((acc, size)=>Math.max(acc, size.height), 0);\n            y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n        }\n        const x = _alignStartEnd(position, left, left + maxWidth);\n        ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n        ctx.textBaseline = 'middle';\n        ctx.strokeStyle = titleOpts.color;\n        ctx.fillStyle = titleOpts.color;\n        ctx.font = titleFont.string;\n        renderText(ctx, titleOpts.text, x, y, titleFont);\n    }\n _computeTitleHeight() {\n        const titleOpts = this.options.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n    }\n _getLegendItemAt(x, y) {\n        let i, hitBox, lh;\n        if (_isBetween(x, this.left, this.right) && _isBetween(y, this.top, this.bottom)) {\n            lh = this.legendHitBoxes;\n            for(i = 0; i < lh.length; ++i){\n                hitBox = lh[i];\n                if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width) && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n                    return this.legendItems[i];\n                }\n            }\n        }\n        return null;\n    }\n handleEvent(e) {\n        const opts = this.options;\n        if (!isListened(e.type, opts)) {\n            return;\n        }\n        const hoveredItem = this._getLegendItemAt(e.x, e.y);\n        if (e.type === 'mousemove' || e.type === 'mouseout') {\n            const previous = this._hoveredItem;\n            const sameItem = itemsEqual(previous, hoveredItem);\n            if (previous && !sameItem) {\n                callback(opts.onLeave, [\n                    e,\n                    previous,\n                    this\n                ], this);\n            }\n            this._hoveredItem = hoveredItem;\n            if (hoveredItem && !sameItem) {\n                callback(opts.onHover, [\n                    e,\n                    hoveredItem,\n                    this\n                ], this);\n            }\n        } else if (hoveredItem) {\n            callback(opts.onClick, [\n                e,\n                hoveredItem,\n                this\n            ], this);\n        }\n    }\n}\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n    const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n    const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n    return {\n        itemWidth,\n        itemHeight\n    };\n}\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n    let legendItemText = legendItem.text;\n    if (legendItemText && typeof legendItemText !== 'string') {\n        legendItemText = legendItemText.reduce((a, b)=>a.length > b.length ? a : b);\n    }\n    return boxWidth + labelFont.size / 2 + ctx.measureText(legendItemText).width;\n}\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n    let itemHeight = _itemHeight;\n    if (typeof legendItem.text !== 'string') {\n        itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n    }\n    return itemHeight;\n}\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n    const labelHeight = legendItem.text ? legendItem.text.length + 0.5 : 0;\n    return fontLineHeight * labelHeight;\n}\nfunction isListened(type, opts) {\n    if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n        return true;\n    }\n    if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n        return true;\n    }\n    return false;\n}\nvar plugin_legend = {\n    id: 'legend',\n _element: Legend,\n    start (chart, _args, options) {\n        const legend = chart.legend = new Legend({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, legend, options);\n        layouts.addBox(chart, legend);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, chart.legend);\n        delete chart.legend;\n    },\n    beforeUpdate (chart, _args, options) {\n        const legend = chart.legend;\n        layouts.configure(chart, legend, options);\n        legend.options = options;\n    },\n    afterUpdate (chart) {\n        const legend = chart.legend;\n        legend.buildLabels();\n        legend.adjustHitBoxes();\n    },\n    afterEvent (chart, args) {\n        if (!args.replay) {\n            chart.legend.handleEvent(args.event);\n        }\n    },\n    defaults: {\n        display: true,\n        position: 'top',\n        align: 'center',\n        fullSize: true,\n        reverse: false,\n        weight: 1000,\n        onClick (e, legendItem, legend) {\n            const index = legendItem.datasetIndex;\n            const ci = legend.chart;\n            if (ci.isDatasetVisible(index)) {\n                ci.hide(index);\n                legendItem.hidden = true;\n            } else {\n                ci.show(index);\n                legendItem.hidden = false;\n            }\n        },\n        onHover: null,\n        onLeave: null,\n        labels: {\n            color: (ctx)=>ctx.chart.options.color,\n            boxWidth: 40,\n            padding: 10,\n            generateLabels (chart) {\n                const datasets = chart.data.datasets;\n                const { labels: { usePointStyle , pointStyle , textAlign , color , useBorderRadius , borderRadius  }  } = chart.legend.options;\n                return chart._getSortedDatasetMetas().map((meta)=>{\n                    const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n                    const borderWidth = toPadding(style.borderWidth);\n                    return {\n                        text: datasets[meta.index].label,\n                        fillStyle: style.backgroundColor,\n                        fontColor: color,\n                        hidden: !meta.visible,\n                        lineCap: style.borderCapStyle,\n                        lineDash: style.borderDash,\n                        lineDashOffset: style.borderDashOffset,\n                        lineJoin: style.borderJoinStyle,\n                        lineWidth: (borderWidth.width + borderWidth.height) / 4,\n                        strokeStyle: style.borderColor,\n                        pointStyle: pointStyle || style.pointStyle,\n                        rotation: style.rotation,\n                        textAlign: textAlign || style.textAlign,\n                        borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n                        datasetIndex: meta.index\n                    };\n                }, this);\n            }\n        },\n        title: {\n            color: (ctx)=>ctx.chart.options.color,\n            display: false,\n            position: 'center',\n            text: ''\n        }\n    },\n    descriptors: {\n        _scriptable: (name)=>!name.startsWith('on'),\n        labels: {\n            _scriptable: (name)=>![\n                    'generateLabels',\n                    'filter',\n                    'sort'\n                ].includes(name)\n        }\n    }\n};\n\nclass Title extends Element {\n constructor(config){\n        super();\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this._padding = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight) {\n        const opts = this.options;\n        this.left = 0;\n        this.top = 0;\n        if (!opts.display) {\n            this.width = this.height = this.right = this.bottom = 0;\n            return;\n        }\n        this.width = this.right = maxWidth;\n        this.height = this.bottom = maxHeight;\n        const lineCount = isArray(opts.text) ? opts.text.length : 1;\n        this._padding = toPadding(opts.padding);\n        const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n        if (this.isHorizontal()) {\n            this.height = textSize;\n        } else {\n            this.width = textSize;\n        }\n    }\n    isHorizontal() {\n        const pos = this.options.position;\n        return pos === 'top' || pos === 'bottom';\n    }\n    _drawArgs(offset) {\n        const { top , left , bottom , right , options  } = this;\n        const align = options.align;\n        let rotation = 0;\n        let maxWidth, titleX, titleY;\n        if (this.isHorizontal()) {\n            titleX = _alignStartEnd(align, left, right);\n            titleY = top + offset;\n            maxWidth = right - left;\n        } else {\n            if (options.position === 'left') {\n                titleX = left + offset;\n                titleY = _alignStartEnd(align, bottom, top);\n                rotation = PI * -0.5;\n            } else {\n                titleX = right - offset;\n                titleY = _alignStartEnd(align, top, bottom);\n                rotation = PI * 0.5;\n            }\n            maxWidth = bottom - top;\n        }\n        return {\n            titleX,\n            titleY,\n            maxWidth,\n            rotation\n        };\n    }\n    draw() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        if (!opts.display) {\n            return;\n        }\n        const fontOpts = toFont(opts.font);\n        const lineHeight = fontOpts.lineHeight;\n        const offset = lineHeight / 2 + this._padding.top;\n        const { titleX , titleY , maxWidth , rotation  } = this._drawArgs(offset);\n        renderText(ctx, opts.text, 0, 0, fontOpts, {\n            color: opts.color,\n            maxWidth,\n            rotation,\n            textAlign: _toLeftRightCenter(opts.align),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n}\nfunction createTitle(chart, titleOpts) {\n    const title = new Title({\n        ctx: chart.ctx,\n        options: titleOpts,\n        chart\n    });\n    layouts.configure(chart, title, titleOpts);\n    layouts.addBox(chart, title);\n    chart.titleBlock = title;\n}\nvar plugin_title = {\n    id: 'title',\n _element: Title,\n    start (chart, _args, options) {\n        createTitle(chart, options);\n    },\n    stop (chart) {\n        const titleBlock = chart.titleBlock;\n        layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = chart.titleBlock;\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'bold'\n        },\n        fullSize: true,\n        padding: 10,\n        position: 'top',\n        text: '',\n        weight: 2000\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n    id: 'subtitle',\n    start (chart, _args, options) {\n        const title = new Title({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, title, options);\n        layouts.addBox(chart, title);\n        map.set(chart, title);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, map.get(chart));\n        map.delete(chart);\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = map.get(chart);\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'normal'\n        },\n        fullSize: true,\n        padding: 0,\n        position: 'top',\n        text: '',\n        weight: 1500\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst positioners = {\n average (items) {\n        if (!items.length) {\n            return false;\n        }\n        let i, len;\n        let x = 0;\n        let y = 0;\n        let count = 0;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const pos = el.tooltipPosition();\n                x += pos.x;\n                y += pos.y;\n                ++count;\n            }\n        }\n        return {\n            x: x / count,\n            y: y / count\n        };\n    },\n nearest (items, eventPosition) {\n        if (!items.length) {\n            return false;\n        }\n        let x = eventPosition.x;\n        let y = eventPosition.y;\n        let minDistance = Number.POSITIVE_INFINITY;\n        let i, len, nearestElement;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const center = el.getCenterPoint();\n                const d = distanceBetweenPoints(eventPosition, center);\n                if (d < minDistance) {\n                    minDistance = d;\n                    nearestElement = el;\n                }\n            }\n        }\n        if (nearestElement) {\n            const tp = nearestElement.tooltipPosition();\n            x = tp.x;\n            y = tp.y;\n        }\n        return {\n            x,\n            y\n        };\n    }\n};\nfunction pushOrConcat(base, toPush) {\n    if (toPush) {\n        if (isArray(toPush)) {\n            Array.prototype.push.apply(base, toPush);\n        } else {\n            base.push(toPush);\n        }\n    }\n    return base;\n}\n function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n        return str.split('\\n');\n    }\n    return str;\n}\n function createTooltipItem(chart, item) {\n    const { element , datasetIndex , index  } = item;\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n    const { label , value  } = controller.getLabelAndValue(index);\n    return {\n        chart,\n        label,\n        parsed: controller.getParsed(index),\n        raw: chart.data.datasets[datasetIndex].data[index],\n        formattedValue: value,\n        dataset: controller.getDataset(),\n        dataIndex: index,\n        datasetIndex,\n        element\n    };\n}\n function getTooltipSize(tooltip, options) {\n    const ctx = tooltip.chart.ctx;\n    const { body , footer , title  } = tooltip;\n    const { boxWidth , boxHeight  } = options;\n    const bodyFont = toFont(options.bodyFont);\n    const titleFont = toFont(options.titleFont);\n    const footerFont = toFont(options.footerFont);\n    const titleLineCount = title.length;\n    const footerLineCount = footer.length;\n    const bodyLineItemCount = body.length;\n    const padding = toPadding(options.padding);\n    let height = padding.height;\n    let width = 0;\n    let combinedBodyLength = body.reduce((count, bodyItem)=>count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n    combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n    if (titleLineCount) {\n        height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n    }\n    if (combinedBodyLength) {\n        const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n        height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n    }\n    if (footerLineCount) {\n        height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n    }\n    let widthPadding = 0;\n    const maxLineWidth = function(line) {\n        width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n    ctx.save();\n    ctx.font = titleFont.string;\n    each(tooltip.title, maxLineWidth);\n    ctx.font = bodyFont.string;\n    each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n    widthPadding = options.displayColors ? boxWidth + 2 + options.boxPadding : 0;\n    each(body, (bodyItem)=>{\n        each(bodyItem.before, maxLineWidth);\n        each(bodyItem.lines, maxLineWidth);\n        each(bodyItem.after, maxLineWidth);\n    });\n    widthPadding = 0;\n    ctx.font = footerFont.string;\n    each(tooltip.footer, maxLineWidth);\n    ctx.restore();\n    width += padding.width;\n    return {\n        width,\n        height\n    };\n}\nfunction determineYAlign(chart, size) {\n    const { y , height  } = size;\n    if (y < height / 2) {\n        return 'top';\n    } else if (y > chart.height - height / 2) {\n        return 'bottom';\n    }\n    return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n    const { x , width  } = size;\n    const caret = options.caretSize + options.caretPadding;\n    if (xAlign === 'left' && x + width + caret > chart.width) {\n        return true;\n    }\n    if (xAlign === 'right' && x - width - caret < 0) {\n        return true;\n    }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n    const { x , width  } = size;\n    const { width: chartWidth , chartArea: { left , right  }  } = chart;\n    let xAlign = 'center';\n    if (yAlign === 'center') {\n        xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n    } else if (x <= width / 2) {\n        xAlign = 'left';\n    } else if (x >= chartWidth - width / 2) {\n        xAlign = 'right';\n    }\n    if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n        xAlign = 'center';\n    }\n    return xAlign;\n}\n function determineAlignment(chart, options, size) {\n    const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n    return {\n        xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n        yAlign\n    };\n}\nfunction alignX(size, xAlign) {\n    let { x , width  } = size;\n    if (xAlign === 'right') {\n        x -= width;\n    } else if (xAlign === 'center') {\n        x -= width / 2;\n    }\n    return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n    let { y , height  } = size;\n    if (yAlign === 'top') {\n        y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n        y -= height + paddingAndSize;\n    } else {\n        y -= height / 2;\n    }\n    return y;\n}\n function getBackgroundPoint(options, size, alignment, chart) {\n    const { caretSize , caretPadding , cornerRadius  } = options;\n    const { xAlign , yAlign  } = alignment;\n    const paddingAndSize = caretSize + caretPadding;\n    const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n    let x = alignX(size, xAlign);\n    const y = alignY(size, yAlign, paddingAndSize);\n    if (yAlign === 'center') {\n        if (xAlign === 'left') {\n            x += paddingAndSize;\n        } else if (xAlign === 'right') {\n            x -= paddingAndSize;\n        }\n    } else if (xAlign === 'left') {\n        x -= Math.max(topLeft, bottomLeft) + caretSize;\n    } else if (xAlign === 'right') {\n        x += Math.max(topRight, bottomRight) + caretSize;\n    }\n    return {\n        x: _limitValue(x, 0, chart.width - size.width),\n        y: _limitValue(y, 0, chart.height - size.height)\n    };\n}\nfunction getAlignedX(tooltip, align, options) {\n    const padding = toPadding(options.padding);\n    return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\n function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n    return createContext(parent, {\n        tooltip,\n        tooltipItems,\n        type: 'tooltip'\n    });\n}\nfunction overrideCallbacks(callbacks, context) {\n    const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n    return override ? callbacks.override(override) : callbacks;\n}\nconst defaultCallbacks = {\n    beforeTitle: noop,\n    title (tooltipItems) {\n        if (tooltipItems.length > 0) {\n            const item = tooltipItems[0];\n            const labels = item.chart.data.labels;\n            const labelCount = labels ? labels.length : 0;\n            if (this && this.options && this.options.mode === 'dataset') {\n                return item.dataset.label || '';\n            } else if (item.label) {\n                return item.label;\n            } else if (labelCount > 0 && item.dataIndex < labelCount) {\n                return labels[item.dataIndex];\n            }\n        }\n        return '';\n    },\n    afterTitle: noop,\n    beforeBody: noop,\n    beforeLabel: noop,\n    label (tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n            return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n            label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n            label += value;\n        }\n        return label;\n    },\n    labelColor (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            borderColor: options.borderColor,\n            backgroundColor: options.backgroundColor,\n            borderWidth: options.borderWidth,\n            borderDash: options.borderDash,\n            borderDashOffset: options.borderDashOffset,\n            borderRadius: 0\n        };\n    },\n    labelTextColor () {\n        return this.options.bodyColor;\n    },\n    labelPointStyle (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            pointStyle: options.pointStyle,\n            rotation: options.rotation\n        };\n    },\n    afterLabel: noop,\n    afterBody: noop,\n    beforeFooter: noop,\n    footer: noop,\n    afterFooter: noop\n};\n function invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n    const result = callbacks[name].call(ctx, arg);\n    if (typeof result === 'undefined') {\n        return defaultCallbacks[name].call(ctx, arg);\n    }\n    return result;\n}\nclass Tooltip extends Element {\n static positioners = positioners;\n    constructor(config){\n        super();\n        this.opacity = 0;\n        this._active = [];\n        this._eventPosition = undefined;\n        this._size = undefined;\n        this._cachedAnimations = undefined;\n        this._tooltipItems = [];\n        this.$animations = undefined;\n        this.$context = undefined;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.dataPoints = undefined;\n        this.title = undefined;\n        this.beforeBody = undefined;\n        this.body = undefined;\n        this.afterBody = undefined;\n        this.footer = undefined;\n        this.xAlign = undefined;\n        this.yAlign = undefined;\n        this.x = undefined;\n        this.y = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this.caretX = undefined;\n        this.caretY = undefined;\n        this.labelColors = undefined;\n        this.labelPointStyles = undefined;\n        this.labelTextColors = undefined;\n    }\n    initialize(options) {\n        this.options = options;\n        this._cachedAnimations = undefined;\n        this.$context = undefined;\n    }\n _resolveAnimations() {\n        const cached = this._cachedAnimations;\n        if (cached) {\n            return cached;\n        }\n        const chart = this.chart;\n        const options = this.options.setContext(this.getContext());\n        const opts = options.enabled && chart.options.animation && options.animations;\n        const animations = new Animations(this.chart, opts);\n        if (opts._cacheable) {\n            this._cachedAnimations = Object.freeze(animations);\n        }\n        return animations;\n    }\n getContext() {\n        return this.$context || (this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n    }\n    getTitle(context, options) {\n        const { callbacks  } = options;\n        const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n        const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n        const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n        lines = pushOrConcat(lines, splitNewlines(title));\n        lines = pushOrConcat(lines, splitNewlines(afterTitle));\n        return lines;\n    }\n    getBeforeBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems));\n    }\n    getBody(tooltipItems, options) {\n        const { callbacks  } = options;\n        const bodyItems = [];\n        each(tooltipItems, (context)=>{\n            const bodyItem = {\n                before: [],\n                lines: [],\n                after: []\n            };\n            const scoped = overrideCallbacks(callbacks, context);\n            pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n            pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n            pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n            bodyItems.push(bodyItem);\n        });\n        return bodyItems;\n    }\n    getAfterBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems));\n    }\n    getFooter(tooltipItems, options) {\n        const { callbacks  } = options;\n        const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n        const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n        const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n        lines = pushOrConcat(lines, splitNewlines(footer));\n        lines = pushOrConcat(lines, splitNewlines(afterFooter));\n        return lines;\n    }\n _createItems(options) {\n        const active = this._active;\n        const data = this.chart.data;\n        const labelColors = [];\n        const labelPointStyles = [];\n        const labelTextColors = [];\n        let tooltipItems = [];\n        let i, len;\n        for(i = 0, len = active.length; i < len; ++i){\n            tooltipItems.push(createTooltipItem(this.chart, active[i]));\n        }\n        if (options.filter) {\n            tooltipItems = tooltipItems.filter((element, index, array)=>options.filter(element, index, array, data));\n        }\n        if (options.itemSort) {\n            tooltipItems = tooltipItems.sort((a, b)=>options.itemSort(a, b, data));\n        }\n        each(tooltipItems, (context)=>{\n            const scoped = overrideCallbacks(options.callbacks, context);\n            labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n            labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n            labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n        });\n        this.labelColors = labelColors;\n        this.labelPointStyles = labelPointStyles;\n        this.labelTextColors = labelTextColors;\n        this.dataPoints = tooltipItems;\n        return tooltipItems;\n    }\n    update(changed, replay) {\n        const options = this.options.setContext(this.getContext());\n        const active = this._active;\n        let properties;\n        let tooltipItems = [];\n        if (!active.length) {\n            if (this.opacity !== 0) {\n                properties = {\n                    opacity: 0\n                };\n            }\n        } else {\n            const position = positioners[options.position].call(this, active, this._eventPosition);\n            tooltipItems = this._createItems(options);\n            this.title = this.getTitle(tooltipItems, options);\n            this.beforeBody = this.getBeforeBody(tooltipItems, options);\n            this.body = this.getBody(tooltipItems, options);\n            this.afterBody = this.getAfterBody(tooltipItems, options);\n            this.footer = this.getFooter(tooltipItems, options);\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, size);\n            const alignment = determineAlignment(this.chart, options, positionAndSize);\n            const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n            this.xAlign = alignment.xAlign;\n            this.yAlign = alignment.yAlign;\n            properties = {\n                opacity: 1,\n                x: backgroundPoint.x,\n                y: backgroundPoint.y,\n                width: size.width,\n                height: size.height,\n                caretX: position.x,\n                caretY: position.y\n            };\n        }\n        this._tooltipItems = tooltipItems;\n        this.$context = undefined;\n        if (properties) {\n            this._resolveAnimations().update(this, properties);\n        }\n        if (changed && options.external) {\n            options.external.call(this, {\n                chart: this.chart,\n                tooltip: this,\n                replay\n            });\n        }\n    }\n    drawCaret(tooltipPoint, ctx, size, options) {\n        const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n        ctx.lineTo(caretPosition.x1, caretPosition.y1);\n        ctx.lineTo(caretPosition.x2, caretPosition.y2);\n        ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    }\n    getCaretPosition(tooltipPoint, size, options) {\n        const { xAlign , yAlign  } = this;\n        const { caretSize , cornerRadius  } = options;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n        const { x: ptX , y: ptY  } = tooltipPoint;\n        const { width , height  } = size;\n        let x1, x2, x3, y1, y2, y3;\n        if (yAlign === 'center') {\n            y2 = ptY + height / 2;\n            if (xAlign === 'left') {\n                x1 = ptX;\n                x2 = x1 - caretSize;\n                y1 = y2 + caretSize;\n                y3 = y2 - caretSize;\n            } else {\n                x1 = ptX + width;\n                x2 = x1 + caretSize;\n                y1 = y2 - caretSize;\n                y3 = y2 + caretSize;\n            }\n            x3 = x1;\n        } else {\n            if (xAlign === 'left') {\n                x2 = ptX + Math.max(topLeft, bottomLeft) + caretSize;\n            } else if (xAlign === 'right') {\n                x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n            } else {\n                x2 = this.caretX;\n            }\n            if (yAlign === 'top') {\n                y1 = ptY;\n                y2 = y1 - caretSize;\n                x1 = x2 - caretSize;\n                x3 = x2 + caretSize;\n            } else {\n                y1 = ptY + height;\n                y2 = y1 + caretSize;\n                x1 = x2 + caretSize;\n                x3 = x2 - caretSize;\n            }\n            y3 = y1;\n        }\n        return {\n            x1,\n            x2,\n            x3,\n            y1,\n            y2,\n            y3\n        };\n    }\n    drawTitle(pt, ctx, options) {\n        const title = this.title;\n        const length = title.length;\n        let titleFont, titleSpacing, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.titleAlign, options);\n            ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n            ctx.textBaseline = 'middle';\n            titleFont = toFont(options.titleFont);\n            titleSpacing = options.titleSpacing;\n            ctx.fillStyle = options.titleColor;\n            ctx.font = titleFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n                pt.y += titleFont.lineHeight + titleSpacing;\n                if (i + 1 === length) {\n                    pt.y += options.titleMarginBottom - titleSpacing;\n                }\n            }\n        }\n    }\n _drawColorBox(ctx, pt, i, rtlHelper, options) {\n        const labelColors = this.labelColors[i];\n        const labelPointStyle = this.labelPointStyles[i];\n        const { boxHeight , boxWidth , boxPadding  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        const colorX = getAlignedX(this, 'left', options);\n        const rtlColorX = rtlHelper.x(colorX);\n        const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n        const colorY = pt.y + yOffSet;\n        if (options.usePointStyle) {\n            const drawOptions = {\n                radius: Math.min(boxWidth, boxHeight) / 2,\n                pointStyle: labelPointStyle.pointStyle,\n                rotation: labelPointStyle.rotation,\n                borderWidth: 1\n            };\n            const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n            const centerY = colorY + boxHeight / 2;\n            ctx.strokeStyle = options.multiKeyBackground;\n            ctx.fillStyle = options.multiKeyBackground;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n            ctx.strokeStyle = labelColors.borderColor;\n            ctx.fillStyle = labelColors.backgroundColor;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n        } else {\n            ctx.lineWidth = isObject(labelColors.borderWidth) ? Math.max(...Object.values(labelColors.borderWidth)) : labelColors.borderWidth || 1;\n            ctx.strokeStyle = labelColors.borderColor;\n            ctx.setLineDash(labelColors.borderDash || []);\n            ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n            const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth - boxPadding);\n            const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - boxPadding - 2);\n            const borderRadius = toTRBLCorners(labelColors.borderRadius);\n            if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                ctx.beginPath();\n                ctx.fillStyle = options.multiKeyBackground;\n                addRoundedRectPath(ctx, {\n                    x: outerX,\n                    y: colorY,\n                    w: boxWidth,\n                    h: boxHeight,\n                    radius: borderRadius\n                });\n                ctx.fill();\n                ctx.stroke();\n                ctx.fillStyle = labelColors.backgroundColor;\n                ctx.beginPath();\n                addRoundedRectPath(ctx, {\n                    x: innerX,\n                    y: colorY + 1,\n                    w: boxWidth - 2,\n                    h: boxHeight - 2,\n                    radius: borderRadius\n                });\n                ctx.fill();\n            } else {\n                ctx.fillStyle = options.multiKeyBackground;\n                ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.fillStyle = labelColors.backgroundColor;\n                ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n            }\n        }\n        ctx.fillStyle = this.labelTextColors[i];\n    }\n    drawBody(pt, ctx, options) {\n        const { body  } = this;\n        const { bodySpacing , bodyAlign , displayColors , boxHeight , boxWidth , boxPadding  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        let bodyLineHeight = bodyFont.lineHeight;\n        let xLinePadding = 0;\n        const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n        const fillLineOfText = function(line) {\n            ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n            pt.y += bodyLineHeight + bodySpacing;\n        };\n        const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n        let bodyItem, textColor, lines, i, j, ilen, jlen;\n        ctx.textAlign = bodyAlign;\n        ctx.textBaseline = 'middle';\n        ctx.font = bodyFont.string;\n        pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n        ctx.fillStyle = options.bodyColor;\n        each(this.beforeBody, fillLineOfText);\n        xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + boxPadding : boxWidth + 2 + boxPadding : 0;\n        for(i = 0, ilen = body.length; i < ilen; ++i){\n            bodyItem = body[i];\n            textColor = this.labelTextColors[i];\n            ctx.fillStyle = textColor;\n            each(bodyItem.before, fillLineOfText);\n            lines = bodyItem.lines;\n            if (displayColors && lines.length) {\n                this._drawColorBox(ctx, pt, i, rtlHelper, options);\n                bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n            }\n            for(j = 0, jlen = lines.length; j < jlen; ++j){\n                fillLineOfText(lines[j]);\n                bodyLineHeight = bodyFont.lineHeight;\n            }\n            each(bodyItem.after, fillLineOfText);\n        }\n        xLinePadding = 0;\n        bodyLineHeight = bodyFont.lineHeight;\n        each(this.afterBody, fillLineOfText);\n        pt.y -= bodySpacing;\n    }\n    drawFooter(pt, ctx, options) {\n        const footer = this.footer;\n        const length = footer.length;\n        let footerFont, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.footerAlign, options);\n            pt.y += options.footerMarginTop;\n            ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n            ctx.textBaseline = 'middle';\n            footerFont = toFont(options.footerFont);\n            ctx.fillStyle = options.footerColor;\n            ctx.font = footerFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n                pt.y += footerFont.lineHeight + options.footerSpacing;\n            }\n        }\n    }\n    drawBackground(pt, ctx, tooltipSize, options) {\n        const { xAlign , yAlign  } = this;\n        const { x , y  } = pt;\n        const { width , height  } = tooltipSize;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(options.cornerRadius);\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.beginPath();\n        ctx.moveTo(x + topLeft, y);\n        if (yAlign === 'top') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width - topRight, y);\n        ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n        if (yAlign === 'center' && xAlign === 'right') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width, y + height - bottomRight);\n        ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n        if (yAlign === 'bottom') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + bottomLeft, y + height);\n        ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n        if (yAlign === 'center' && xAlign === 'left') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x, y + topLeft);\n        ctx.quadraticCurveTo(x, y, x + topLeft, y);\n        ctx.closePath();\n        ctx.fill();\n        if (options.borderWidth > 0) {\n            ctx.stroke();\n        }\n    }\n _updateAnimationTarget(options) {\n        const chart = this.chart;\n        const anims = this.$animations;\n        const animX = anims && anims.x;\n        const animY = anims && anims.y;\n        if (animX || animY) {\n            const position = positioners[options.position].call(this, this._active, this._eventPosition);\n            if (!position) {\n                return;\n            }\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, this._size);\n            const alignment = determineAlignment(chart, options, positionAndSize);\n            const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n            if (animX._to !== point.x || animY._to !== point.y) {\n                this.xAlign = alignment.xAlign;\n                this.yAlign = alignment.yAlign;\n                this.width = size.width;\n                this.height = size.height;\n                this.caretX = position.x;\n                this.caretY = position.y;\n                this._resolveAnimations().update(this, point);\n            }\n        }\n    }\n _willRender() {\n        return !!this.opacity;\n    }\n    draw(ctx) {\n        const options = this.options.setContext(this.getContext());\n        let opacity = this.opacity;\n        if (!opacity) {\n            return;\n        }\n        this._updateAnimationTarget(options);\n        const tooltipSize = {\n            width: this.width,\n            height: this.height\n        };\n        const pt = {\n            x: this.x,\n            y: this.y\n        };\n        opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n        const padding = toPadding(options.padding);\n        const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n        if (options.enabled && hasTooltipContent) {\n            ctx.save();\n            ctx.globalAlpha = opacity;\n            this.drawBackground(pt, ctx, tooltipSize, options);\n            overrideTextDirection(ctx, options.textDirection);\n            pt.y += padding.top;\n            this.drawTitle(pt, ctx, options);\n            this.drawBody(pt, ctx, options);\n            this.drawFooter(pt, ctx, options);\n            restoreTextDirection(ctx, options.textDirection);\n            ctx.restore();\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements, eventPosition) {\n        const lastActive = this._active;\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.chart.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('Cannot find a dataset at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(lastActive, active);\n        const positionChanged = this._positionChanged(active, eventPosition);\n        if (changed || positionChanged) {\n            this._active = active;\n            this._eventPosition = eventPosition;\n            this._ignoreReplayEvents = true;\n            this.update(true);\n        }\n    }\n handleEvent(e, replay, inChartArea = true) {\n        if (replay && this._ignoreReplayEvents) {\n            return false;\n        }\n        this._ignoreReplayEvents = false;\n        const options = this.options;\n        const lastActive = this._active || [];\n        const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n        const positionChanged = this._positionChanged(active, e);\n        const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n        if (changed) {\n            this._active = active;\n            if (options.enabled || options.external) {\n                this._eventPosition = {\n                    x: e.x,\n                    y: e.y\n                };\n                this.update(true, replay);\n            }\n        }\n        return changed;\n    }\n _getActiveElements(e, lastActive, replay, inChartArea) {\n        const options = this.options;\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive;\n        }\n        const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n        if (options.reverse) {\n            active.reverse();\n        }\n        return active;\n    }\n _positionChanged(active, e) {\n        const { caretX , caretY , options  } = this;\n        const position = positioners[options.position].call(this, active, e);\n        return position !== false && (caretX !== position.x || caretY !== position.y);\n    }\n}\nvar plugin_tooltip = {\n    id: 'tooltip',\n    _element: Tooltip,\n    positioners,\n    afterInit (chart, _args, options) {\n        if (options) {\n            chart.tooltip = new Tooltip({\n                chart,\n                options\n            });\n        }\n    },\n    beforeUpdate (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    reset (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    afterDraw (chart) {\n        const tooltip = chart.tooltip;\n        if (tooltip && tooltip._willRender()) {\n            const args = {\n                tooltip\n            };\n            if (chart.notifyPlugins('beforeTooltipDraw', {\n                ...args,\n                cancelable: true\n            }) === false) {\n                return;\n            }\n            tooltip.draw(chart.ctx);\n            chart.notifyPlugins('afterTooltipDraw', args);\n        }\n    },\n    afterEvent (chart, args) {\n        if (chart.tooltip) {\n            const useFinalPosition = args.replay;\n            if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n                args.changed = true;\n            }\n        }\n    },\n    defaults: {\n        enabled: true,\n        external: null,\n        position: 'average',\n        backgroundColor: 'rgba(0,0,0,0.8)',\n        titleColor: '#fff',\n        titleFont: {\n            weight: 'bold'\n        },\n        titleSpacing: 2,\n        titleMarginBottom: 6,\n        titleAlign: 'left',\n        bodyColor: '#fff',\n        bodySpacing: 2,\n        bodyFont: {},\n        bodyAlign: 'left',\n        footerColor: '#fff',\n        footerSpacing: 2,\n        footerMarginTop: 6,\n        footerFont: {\n            weight: 'bold'\n        },\n        footerAlign: 'left',\n        padding: 6,\n        caretPadding: 2,\n        caretSize: 5,\n        cornerRadius: 6,\n        boxHeight: (ctx, opts)=>opts.bodyFont.size,\n        boxWidth: (ctx, opts)=>opts.bodyFont.size,\n        multiKeyBackground: '#fff',\n        displayColors: true,\n        boxPadding: 0,\n        borderColor: 'rgba(0,0,0,0)',\n        borderWidth: 0,\n        animation: {\n            duration: 400,\n            easing: 'easeOutQuart'\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'width',\n                    'height',\n                    'caretX',\n                    'caretY'\n                ]\n            },\n            opacity: {\n                easing: 'linear',\n                duration: 200\n            }\n        },\n        callbacks: defaultCallbacks\n    },\n    defaultRoutes: {\n        bodyFont: 'font',\n        footerFont: 'font',\n        titleFont: 'font'\n    },\n    descriptors: {\n        _scriptable: (name)=>name !== 'filter' && name !== 'itemSort' && name !== 'external',\n        _indexable: false,\n        callbacks: {\n            _scriptable: false,\n            _indexable: false\n        },\n        animation: {\n            _fallback: false\n        },\n        animations: {\n            _fallback: 'animation'\n        }\n    },\n    additionalOptionScopes: [\n        'interaction'\n    ]\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nColors: plugin_colors,\nDecimation: plugin_decimation,\nFiller: index,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels)=>{\n    if (typeof raw === 'string') {\n        index = labels.push(raw) - 1;\n        addedLabels.unshift({\n            index,\n            label: raw\n        });\n    } else if (isNaN(raw)) {\n        index = null;\n    }\n    return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n    const first = labels.indexOf(raw);\n    if (first === -1) {\n        return addIfString(labels, raw, index, addedLabels);\n    }\n    const last = labels.lastIndexOf(raw);\n    return first !== last ? index : first;\n}\nconst validIndex = (index, max)=>index === null ? null : _limitValue(Math.round(index), 0, max);\nfunction _getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n        return labels[value];\n    }\n    return value;\n}\nclass CategoryScale extends Scale {\n    static id = 'category';\n static defaults = {\n        ticks: {\n            callback: _getLabelForValue\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this._startValue = undefined;\n        this._valueRange = 0;\n        this._addedLabels = [];\n    }\n    init(scaleOptions) {\n        const added = this._addedLabels;\n        if (added.length) {\n            const labels = this.getLabels();\n            for (const { index , label  } of added){\n                if (labels[index] === label) {\n                    labels.splice(index, 1);\n                }\n            }\n            this._addedLabels = [];\n        }\n        super.init(scaleOptions);\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        const labels = this.getLabels();\n        index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n        return validIndex(index, labels.length - 1);\n    }\n    determineDataLimits() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this.getMinMax(true);\n        if (this.options.bounds === 'ticks') {\n            if (!minDefined) {\n                min = 0;\n            }\n            if (!maxDefined) {\n                max = this.getLabels().length - 1;\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const min = this.min;\n        const max = this.max;\n        const offset = this.options.offset;\n        const ticks = [];\n        let labels = this.getLabels();\n        labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n        this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n        this._startValue = this.min - (offset ? 0.5 : 0);\n        for(let value = min; value <= max; value++){\n            ticks.push({\n                value\n            });\n        }\n        return ticks;\n    }\n    getLabelForValue(value) {\n        return _getLabelForValue.call(this, value);\n    }\n configure() {\n        super.configure();\n        if (!this.isHorizontal()) {\n            this._reversePixels = !this._reversePixels;\n        }\n    }\n    getPixelForValue(value) {\n        if (typeof value !== 'number') {\n            value = this.parse(value);\n        }\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n    getValueForPixel(pixel) {\n        return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n    }\n    getBasePixel() {\n        return this.bottom;\n    }\n}\n\nfunction generateTicks$1(generationOptions, dataRange) {\n    const ticks = [];\n    const MIN_SPACING = 1e-14;\n    const { bounds , step , min , max , precision , count , maxTicks , maxDigits , includeBounds  } = generationOptions;\n    const unit = step || 1;\n    const maxSpaces = maxTicks - 1;\n    const { min: rmin , max: rmax  } = dataRange;\n    const minDefined = !isNullOrUndef(min);\n    const maxDefined = !isNullOrUndef(max);\n    const countDefined = !isNullOrUndef(count);\n    const minSpacing = (rmax - rmin) / (maxDigits + 1);\n    let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n    let factor, niceMin, niceMax, numSpaces;\n    if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n        return [\n            {\n                value: rmin\n            },\n            {\n                value: rmax\n            }\n        ];\n    }\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n    if (numSpaces > maxSpaces) {\n        spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n    }\n    if (!isNullOrUndef(precision)) {\n        factor = Math.pow(10, precision);\n        spacing = Math.ceil(spacing * factor) / factor;\n    }\n    if (bounds === 'ticks') {\n        niceMin = Math.floor(rmin / spacing) * spacing;\n        niceMax = Math.ceil(rmax / spacing) * spacing;\n    } else {\n        niceMin = rmin;\n        niceMax = rmax;\n    }\n    if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n        numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n        spacing = (max - min) / numSpaces;\n        niceMin = min;\n        niceMax = max;\n    } else if (countDefined) {\n        niceMin = minDefined ? min : niceMin;\n        niceMax = maxDefined ? max : niceMax;\n        numSpaces = count - 1;\n        spacing = (niceMax - niceMin) / numSpaces;\n    } else {\n        numSpaces = (niceMax - niceMin) / spacing;\n        if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n            numSpaces = Math.round(numSpaces);\n        } else {\n            numSpaces = Math.ceil(numSpaces);\n        }\n    }\n    const decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n    factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    let j = 0;\n    if (minDefined) {\n        if (includeBounds && niceMin !== min) {\n            ticks.push({\n                value: min\n            });\n            if (niceMin < min) {\n                j++;\n            }\n            if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n                j++;\n            }\n        } else if (niceMin < min) {\n            j++;\n        }\n    }\n    for(; j < numSpaces; ++j){\n        ticks.push({\n            value: Math.round((niceMin + j * spacing) * factor) / factor\n        });\n    }\n    if (maxDefined && includeBounds && niceMax !== max) {\n        if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n            ticks[ticks.length - 1].value = max;\n        } else {\n            ticks.push({\n                value: max\n            });\n        }\n    } else if (!maxDefined || niceMax === max) {\n        ticks.push({\n            value: niceMax\n        });\n    }\n    return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, { horizontal , minRotation  }) {\n    const rad = toRadians(minRotation);\n    const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n    const length = 0.75 * minSpacing * ('' + value).length;\n    return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n         this._endValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n            return null;\n        }\n        return +raw;\n    }\n    handleTickRangeOptions() {\n        const { beginAtZero  } = this.options;\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (beginAtZero) {\n            const minSign = sign(min);\n            const maxSign = sign(max);\n            if (minSign < 0 && maxSign < 0) {\n                setMax(0);\n            } else if (minSign > 0 && maxSign > 0) {\n                setMin(0);\n            }\n        }\n        if (min === max) {\n            let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n            setMax(max + offset);\n            if (!beginAtZero) {\n                setMin(min - offset);\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    getTickLimit() {\n        const tickOpts = this.options.ticks;\n        let { maxTicksLimit , stepSize  } = tickOpts;\n        let maxTicks;\n        if (stepSize) {\n            maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n            if (maxTicks > 1000) {\n                console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n                maxTicks = 1000;\n            }\n        } else {\n            maxTicks = this.computeTickLimit();\n            maxTicksLimit = maxTicksLimit || 11;\n        }\n        if (maxTicksLimit) {\n            maxTicks = Math.min(maxTicksLimit, maxTicks);\n        }\n        return maxTicks;\n    }\n computeTickLimit() {\n        return Number.POSITIVE_INFINITY;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        let maxTicks = this.getTickLimit();\n        maxTicks = Math.max(2, maxTicks);\n        const numericGeneratorOptions = {\n            maxTicks,\n            bounds: opts.bounds,\n            min: opts.min,\n            max: opts.max,\n            precision: tickOpts.precision,\n            step: tickOpts.stepSize,\n            count: tickOpts.count,\n            maxDigits: this._maxDigits(),\n            horizontal: this.isHorizontal(),\n            minRotation: tickOpts.minRotation || 0,\n            includeBounds: tickOpts.includeBounds !== false\n        };\n        const dataRange = this._range || this;\n        const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n configure() {\n        const ticks = this.ticks;\n        let start = this.min;\n        let end = this.max;\n        super.configure();\n        if (this.options.offset && ticks.length) {\n            const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n            start -= offset;\n            end += offset;\n        }\n        this._startValue = start;\n        this._endValue = end;\n        this._valueRange = end - start;\n    }\n    getLabelForValue(value) {\n        return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n}\n\nclass LinearScale extends LinearScaleBase {\n    static id = 'linear';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.numeric\n        }\n    };\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? min : 0;\n        this.max = isNumberFinite(max) ? max : 1;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        const horizontal = this.isHorizontal();\n        const length = horizontal ? this.width : this.height;\n        const minRotation = toRadians(this.options.ticks.minRotation);\n        const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n        const tickFont = this._resolveTickFontOptions(0);\n        return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n    }\n    getPixelForValue(value) {\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n    }\n}\n\nconst log10Floor = (v)=>Math.floor(log10(v));\nconst changeExponent = (v, m)=>Math.pow(10, log10Floor(v) + m);\nfunction isMajor(tickVal) {\n    const remain = tickVal / Math.pow(10, log10Floor(tickVal));\n    return remain === 1;\n}\nfunction steps(min, max, rangeExp) {\n    const rangeStep = Math.pow(10, rangeExp);\n    const start = Math.floor(min / rangeStep);\n    const end = Math.ceil(max / rangeStep);\n    return end - start;\n}\nfunction startExp(min, max) {\n    const range = max - min;\n    let rangeExp = log10Floor(range);\n    while(steps(min, max, rangeExp) > 10){\n        rangeExp++;\n    }\n    while(steps(min, max, rangeExp) < 10){\n        rangeExp--;\n    }\n    return Math.min(rangeExp, log10Floor(min));\n}\n function generateTicks(generationOptions, { min , max  }) {\n    min = finiteOrDefault(generationOptions.min, min);\n    const ticks = [];\n    const minExp = log10Floor(min);\n    let exp = startExp(min, max);\n    let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n    const stepSize = Math.pow(10, exp);\n    const base = minExp > exp ? Math.pow(10, minExp) : 0;\n    const start = Math.round((min - base) * precision) / precision;\n    const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n    let significand = Math.floor((start - offset) / Math.pow(10, exp));\n    let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n    while(value < max){\n        ticks.push({\n            value,\n            major: isMajor(value),\n            significand\n        });\n        if (significand >= 10) {\n            significand = significand < 15 ? 15 : 20;\n        } else {\n            significand++;\n        }\n        if (significand >= 20) {\n            exp++;\n            significand = 2;\n            precision = exp >= 0 ? 1 : precision;\n        }\n        value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n    }\n    const lastTick = finiteOrDefault(generationOptions.max, value);\n    ticks.push({\n        value: lastTick,\n        major: isMajor(lastTick),\n        significand\n    });\n    return ticks;\n}\nclass LogarithmicScale extends Scale {\n    static id = 'logarithmic';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.logarithmic,\n            major: {\n                enabled: true\n            }\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        const value = LinearScaleBase.prototype.parse.apply(this, [\n            raw,\n            index\n        ]);\n        if (value === 0) {\n            this._zero = true;\n            return undefined;\n        }\n        return isNumberFinite(value) && value > 0 ? value : null;\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n        this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n        if (this.options.beginAtZero) {\n            this._zero = true;\n        }\n        if (this._zero && this.min !== this._suggestedMin && !isNumberFinite(this._userMin)) {\n            this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n        }\n        this.handleTickRangeOptions();\n    }\n    handleTickRangeOptions() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let min = this.min;\n        let max = this.max;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (min === max) {\n            if (min <= 0) {\n                setMin(1);\n                setMax(10);\n            } else {\n                setMin(changeExponent(min, -1));\n                setMax(changeExponent(max, +1));\n            }\n        }\n        if (min <= 0) {\n            setMin(changeExponent(max, -1));\n        }\n        if (max <= 0) {\n            setMax(changeExponent(min, +1));\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const generationOptions = {\n            min: this._userMin,\n            max: this._userMax\n        };\n        const ticks = generateTicks(generationOptions, this);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n getLabelForValue(value) {\n        return value === undefined ? '0' : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n configure() {\n        const start = this.min;\n        super.configure();\n        this._startValue = log10(start);\n        this._valueRange = log10(this.max) - log10(start);\n    }\n    getPixelForValue(value) {\n        if (value === undefined || value === 0) {\n            value = this.min;\n        }\n        if (value === null || isNaN(value)) {\n            return NaN;\n        }\n        return this.getPixelForDecimal(value === this.min ? 0 : (log10(value) - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        const decimal = this.getDecimalForPixel(pixel);\n        return Math.pow(10, this._startValue + decimal * this._valueRange);\n    }\n}\n\nfunction getTickBackdropHeight(opts) {\n    const tickOpts = opts.ticks;\n    if (tickOpts.display && opts.display) {\n        const padding = toPadding(tickOpts.backdropPadding);\n        return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n    }\n    return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n    label = isArray(label) ? label : [\n        label\n    ];\n    return {\n        w: _longestText(ctx, font.string, label),\n        h: label.length * font.lineHeight\n    };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n        return {\n            start: pos - size / 2,\n            end: pos + size / 2\n        };\n    } else if (angle < min || angle > max) {\n        return {\n            start: pos - size,\n            end: pos\n        };\n    }\n    return {\n        start: pos,\n        end: pos + size\n    };\n}\n function fitWithPointLabels(scale) {\n    const orig = {\n        l: scale.left + scale._padding.left,\n        r: scale.right - scale._padding.right,\n        t: scale.top + scale._padding.top,\n        b: scale.bottom - scale._padding.bottom\n    };\n    const limits = Object.assign({}, orig);\n    const labelSizes = [];\n    const padding = [];\n    const valueCount = scale._pointLabels.length;\n    const pointLabelOpts = scale.options.pointLabels;\n    const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n    for(let i = 0; i < valueCount; i++){\n        const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n        padding[i] = opts.padding;\n        const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n        const plFont = toFont(opts.font);\n        const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n        labelSizes[i] = textSize;\n        const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n        const angle = Math.round(toDegrees(angleRadians));\n        const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n        const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n        updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n    }\n    scale.setCenterPoint(orig.l - limits.l, limits.r - orig.r, orig.t - limits.t, limits.b - orig.b);\n    scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n    const sin = Math.abs(Math.sin(angle));\n    const cos = Math.abs(Math.cos(angle));\n    let x = 0;\n    let y = 0;\n    if (hLimits.start < orig.l) {\n        x = (orig.l - hLimits.start) / sin;\n        limits.l = Math.min(limits.l, orig.l - x);\n    } else if (hLimits.end > orig.r) {\n        x = (hLimits.end - orig.r) / sin;\n        limits.r = Math.max(limits.r, orig.r + x);\n    }\n    if (vLimits.start < orig.t) {\n        y = (orig.t - vLimits.start) / cos;\n        limits.t = Math.min(limits.t, orig.t - y);\n    } else if (vLimits.end > orig.b) {\n        y = (vLimits.end - orig.b) / cos;\n        limits.b = Math.max(limits.b, orig.b + y);\n    }\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n    const items = [];\n    const valueCount = scale._pointLabels.length;\n    const opts = scale.options;\n    const extra = getTickBackdropHeight(opts) / 2;\n    const outerDistance = scale.drawingArea;\n    const additionalAngle = opts.pointLabels.centerPointLabels ? PI / valueCount : 0;\n    for(let i = 0; i < valueCount; i++){\n        const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i], additionalAngle);\n        const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n        const size = labelSizes[i];\n        const y = yForAngle(pointLabelPosition.y, size.h, angle);\n        const textAlign = getTextAlignForAngle(angle);\n        const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n        items.push({\n            x: pointLabelPosition.x,\n            y,\n            textAlign,\n            left,\n            top: y,\n            right: left + size.w,\n            bottom: y + size.h\n        });\n    }\n    return items;\n}\nfunction getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n        return 'center';\n    } else if (angle < 180) {\n        return 'left';\n    }\n    return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n    if (align === 'right') {\n        x -= w;\n    } else if (align === 'center') {\n        x -= w / 2;\n    }\n    return x;\n}\nfunction yForAngle(y, h, angle) {\n    if (angle === 90 || angle === 270) {\n        y -= h / 2;\n    } else if (angle > 270 || angle < 90) {\n        y -= h;\n    }\n    return y;\n}\nfunction drawPointLabels(scale, labelCount) {\n    const { ctx , options: { pointLabels  }  } = scale;\n    for(let i = labelCount - 1; i >= 0; i--){\n        const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n        const plFont = toFont(optsAtIndex.font);\n        const { x , y , textAlign , left , top , right , bottom  } = scale._pointLabelItems[i];\n        const { backdropColor  } = optsAtIndex;\n        if (!isNullOrUndef(backdropColor)) {\n            const borderRadius = toTRBLCorners(optsAtIndex.borderRadius);\n            const padding = toPadding(optsAtIndex.backdropPadding);\n            ctx.fillStyle = backdropColor;\n            const backdropLeft = left - padding.left;\n            const backdropTop = top - padding.top;\n            const backdropWidth = right - left + padding.width;\n            const backdropHeight = bottom - top + padding.height;\n            if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                ctx.beginPath();\n                addRoundedRectPath(ctx, {\n                    x: backdropLeft,\n                    y: backdropTop,\n                    w: backdropWidth,\n                    h: backdropHeight,\n                    radius: borderRadius\n                });\n                ctx.fill();\n            } else {\n                ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n            }\n        }\n        renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n            color: optsAtIndex.color,\n            textAlign: textAlign,\n            textBaseline: 'middle'\n        });\n    }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n    const { ctx  } = scale;\n    if (circular) {\n        ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n    } else {\n        let pointPosition = scale.getPointPosition(0, radius);\n        ctx.moveTo(pointPosition.x, pointPosition.y);\n        for(let i = 1; i < labelCount; i++){\n            pointPosition = scale.getPointPosition(i, radius);\n            ctx.lineTo(pointPosition.x, pointPosition.y);\n        }\n    }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n    const ctx = scale.ctx;\n    const circular = gridLineOpts.circular;\n    const { color , lineWidth  } = gridLineOpts;\n    if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n        return;\n    }\n    ctx.save();\n    ctx.strokeStyle = color;\n    ctx.lineWidth = lineWidth;\n    ctx.setLineDash(borderOpts.dash);\n    ctx.lineDashOffset = borderOpts.dashOffset;\n    ctx.beginPath();\n    pathRadiusLine(scale, radius, circular, labelCount);\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n    return createContext(parent, {\n        label,\n        index,\n        type: 'pointLabel'\n    });\n}\nclass RadialLinearScale extends LinearScaleBase {\n    static id = 'radialLinear';\n static defaults = {\n        display: true,\n        animate: true,\n        position: 'chartArea',\n        angleLines: {\n            display: true,\n            lineWidth: 1,\n            borderDash: [],\n            borderDashOffset: 0.0\n        },\n        grid: {\n            circular: false\n        },\n        startAngle: 0,\n        ticks: {\n            showLabelBackdrop: true,\n            callback: Ticks.formatters.numeric\n        },\n        pointLabels: {\n            backdropColor: undefined,\n            backdropPadding: 2,\n            display: true,\n            font: {\n                size: 10\n            },\n            callback (label) {\n                return label;\n            },\n            padding: 5,\n            centerPointLabels: false\n        }\n    };\n    static defaultRoutes = {\n        'angleLines.color': 'borderColor',\n        'pointLabels.color': 'color',\n        'ticks.color': 'color'\n    };\n    static descriptors = {\n        angleLines: {\n            _fallback: 'grid'\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.xCenter = undefined;\n         this.yCenter = undefined;\n         this.drawingArea = undefined;\n         this._pointLabels = [];\n        this._pointLabelItems = [];\n    }\n    setDimensions() {\n        const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n        const w = this.width = this.maxWidth - padding.width;\n        const h = this.height = this.maxHeight - padding.height;\n        this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n        this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n        this.drawingArea = Math.floor(Math.min(w, h) / 2);\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(false);\n        this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n        this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    }\n    generateTickLabels(ticks) {\n        LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n        this._pointLabels = this.getLabels().map((value, index)=>{\n            const label = callback(this.options.pointLabels.callback, [\n                value,\n                index\n            ], this);\n            return label || label === 0 ? label : '';\n        }).filter((v, i)=>this.chart.getDataVisibility(i));\n    }\n    fit() {\n        const opts = this.options;\n        if (opts.display && opts.pointLabels.display) {\n            fitWithPointLabels(this);\n        } else {\n            this.setCenterPoint(0, 0, 0, 0);\n        }\n    }\n    setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n        this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n        this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n        this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n    }\n    getIndexAngle(index) {\n        const angleMultiplier = TAU / (this._pointLabels.length || 1);\n        const startAngle = this.options.startAngle || 0;\n        return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n    }\n    getDistanceFromCenterForValue(value) {\n        if (isNullOrUndef(value)) {\n            return NaN;\n        }\n        const scalingFactor = this.drawingArea / (this.max - this.min);\n        if (this.options.reverse) {\n            return (this.max - value) * scalingFactor;\n        }\n        return (value - this.min) * scalingFactor;\n    }\n    getValueForDistanceFromCenter(distance) {\n        if (isNullOrUndef(distance)) {\n            return NaN;\n        }\n        const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n        return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n    }\n    getPointLabelContext(index) {\n        const pointLabels = this._pointLabels || [];\n        if (index >= 0 && index < pointLabels.length) {\n            const pointLabel = pointLabels[index];\n            return createPointLabelContext(this.getContext(), index, pointLabel);\n        }\n    }\n    getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n        const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n        return {\n            x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n            y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n            angle\n        };\n    }\n    getPointPositionForValue(index, value) {\n        return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    }\n    getBasePosition(index) {\n        return this.getPointPositionForValue(index || 0, this.getBaseValue());\n    }\n    getPointLabelPosition(index) {\n        const { left , top , right , bottom  } = this._pointLabelItems[index];\n        return {\n            left,\n            top,\n            right,\n            bottom\n        };\n    }\n drawBackground() {\n        const { backgroundColor , grid: { circular  }  } = this.options;\n        if (backgroundColor) {\n            const ctx = this.ctx;\n            ctx.save();\n            ctx.beginPath();\n            pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n            ctx.closePath();\n            ctx.fillStyle = backgroundColor;\n            ctx.fill();\n            ctx.restore();\n        }\n    }\n drawGrid() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const { angleLines , grid , border  } = opts;\n        const labelCount = this._pointLabels.length;\n        let i, offset, position;\n        if (opts.pointLabels.display) {\n            drawPointLabels(this, labelCount);\n        }\n        if (grid.display) {\n            this.ticks.forEach((tick, index)=>{\n                if (index !== 0) {\n                    offset = this.getDistanceFromCenterForValue(tick.value);\n                    const context = this.getContext(index);\n                    const optsAtIndex = grid.setContext(context);\n                    const optsAtIndexBorder = border.setContext(context);\n                    drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n                }\n            });\n        }\n        if (angleLines.display) {\n            ctx.save();\n            for(i = labelCount - 1; i >= 0; i--){\n                const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n                const { color , lineWidth  } = optsAtIndex;\n                if (!lineWidth || !color) {\n                    continue;\n                }\n                ctx.lineWidth = lineWidth;\n                ctx.strokeStyle = color;\n                ctx.setLineDash(optsAtIndex.borderDash);\n                ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n                offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n                position = this.getPointPosition(i, offset);\n                ctx.beginPath();\n                ctx.moveTo(this.xCenter, this.yCenter);\n                ctx.lineTo(position.x, position.y);\n                ctx.stroke();\n            }\n            ctx.restore();\n        }\n    }\n drawBorder() {}\n drawLabels() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        if (!tickOpts.display) {\n            return;\n        }\n        const startAngle = this.getIndexAngle(0);\n        let offset, width;\n        ctx.save();\n        ctx.translate(this.xCenter, this.yCenter);\n        ctx.rotate(startAngle);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        this.ticks.forEach((tick, index)=>{\n            if (index === 0 && !opts.reverse) {\n                return;\n            }\n            const optsAtIndex = tickOpts.setContext(this.getContext(index));\n            const tickFont = toFont(optsAtIndex.font);\n            offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n            if (optsAtIndex.showLabelBackdrop) {\n                ctx.font = tickFont.string;\n                width = ctx.measureText(tick.label).width;\n                ctx.fillStyle = optsAtIndex.backdropColor;\n                const padding = toPadding(optsAtIndex.backdropPadding);\n                ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n            }\n            renderText(ctx, tick.label, 0, -offset, tickFont, {\n                color: optsAtIndex.color\n            });\n        });\n        ctx.restore();\n    }\n drawTitle() {}\n}\n\nconst INTERVALS = {\n    millisecond: {\n        common: true,\n        size: 1,\n        steps: 1000\n    },\n    second: {\n        common: true,\n        size: 1000,\n        steps: 60\n    },\n    minute: {\n        common: true,\n        size: 60000,\n        steps: 60\n    },\n    hour: {\n        common: true,\n        size: 3600000,\n        steps: 24\n    },\n    day: {\n        common: true,\n        size: 86400000,\n        steps: 30\n    },\n    week: {\n        common: false,\n        size: 604800000,\n        steps: 4\n    },\n    month: {\n        common: true,\n        size: 2.628e9,\n        steps: 12\n    },\n    quarter: {\n        common: false,\n        size: 7.884e9,\n        steps: 4\n    },\n    year: {\n        common: true,\n        size: 3.154e10\n    }\n};\n const UNITS =  /* #__PURE__ */ Object.keys(INTERVALS);\n function sorter(a, b) {\n    return a - b;\n}\n function parse(scale, input) {\n    if (isNullOrUndef(input)) {\n        return null;\n    }\n    const adapter = scale._adapter;\n    const { parser , round , isoWeekday  } = scale._parseOpts;\n    let value = input;\n    if (typeof parser === 'function') {\n        value = parser(value);\n    }\n    if (!isNumberFinite(value)) {\n        value = typeof parser === 'string' ? adapter.parse(value,  (parser)) : adapter.parse(value);\n    }\n    if (value === null) {\n        return null;\n    }\n    if (round) {\n        value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n    }\n    return +value;\n}\n function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    const ilen = UNITS.length;\n    for(let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i){\n        const interval = INTERVALS[UNITS[i]];\n        const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n        if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n            return UNITS[i];\n        }\n    }\n    return UNITS[ilen - 1];\n}\n function determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n    for(let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--){\n        const unit = UNITS[i];\n        if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n            return unit;\n        }\n    }\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n function determineMajorUnit(unit) {\n    for(let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i){\n        if (INTERVALS[UNITS[i]].common) {\n            return UNITS[i];\n        }\n    }\n}\n function addTick(ticks, time, timestamps) {\n    if (!timestamps) {\n        ticks[time] = true;\n    } else if (timestamps.length) {\n        const { lo , hi  } = _lookup(timestamps, time);\n        const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n        ticks[timestamp] = true;\n    }\n}\n function setMajorTicks(scale, ticks, map, majorUnit) {\n    const adapter = scale._adapter;\n    const first = +adapter.startOf(ticks[0].value, majorUnit);\n    const last = ticks[ticks.length - 1].value;\n    let major, index;\n    for(major = first; major <= last; major = +adapter.add(major, 1, majorUnit)){\n        index = map[major];\n        if (index >= 0) {\n            ticks[index].major = true;\n        }\n    }\n    return ticks;\n}\n function ticksFromTimestamps(scale, values, majorUnit) {\n    const ticks = [];\n     const map = {};\n    const ilen = values.length;\n    let i, value;\n    for(i = 0; i < ilen; ++i){\n        value = values[i];\n        map[value] = i;\n        ticks.push({\n            value,\n            major: false\n        });\n    }\n    return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n    static id = 'time';\n static defaults = {\n bounds: 'data',\n        adapters: {},\n        time: {\n            parser: false,\n            unit: false,\n            round: false,\n            isoWeekday: false,\n            minUnit: 'millisecond',\n            displayFormats: {}\n        },\n        ticks: {\n source: 'auto',\n            callback: false,\n            major: {\n                enabled: false\n            }\n        }\n    };\n constructor(props){\n        super(props);\n         this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n         this._unit = 'day';\n         this._majorUnit = undefined;\n        this._offsets = {};\n        this._normalized = false;\n        this._parseOpts = undefined;\n    }\n    init(scaleOpts, opts = {}) {\n        const time = scaleOpts.time || (scaleOpts.time = {});\n         const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n        adapter.init(opts);\n        mergeIf(time.displayFormats, adapter.formats());\n        this._parseOpts = {\n            parser: time.parser,\n            round: time.round,\n            isoWeekday: time.isoWeekday\n        };\n        super.init(scaleOpts);\n        this._normalized = opts.normalized;\n    }\n parse(raw, index) {\n        if (raw === undefined) {\n            return null;\n        }\n        return parse(this, raw);\n    }\n    beforeLayout() {\n        super.beforeLayout();\n        this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n    }\n    determineDataLimits() {\n        const options = this.options;\n        const adapter = this._adapter;\n        const unit = options.time.unit || 'day';\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n function _applyBounds(bounds) {\n            if (!minDefined && !isNaN(bounds.min)) {\n                min = Math.min(min, bounds.min);\n            }\n            if (!maxDefined && !isNaN(bounds.max)) {\n                max = Math.max(max, bounds.max);\n            }\n        }\n        if (!minDefined || !maxDefined) {\n            _applyBounds(this._getLabelBounds());\n            if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n                _applyBounds(this.getMinMax(false));\n            }\n        }\n        min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n        max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n        this.min = Math.min(min, max - 1);\n        this.max = Math.max(min + 1, max);\n    }\n _getLabelBounds() {\n        const arr = this.getLabelTimestamps();\n        let min = Number.POSITIVE_INFINITY;\n        let max = Number.NEGATIVE_INFINITY;\n        if (arr.length) {\n            min = arr[0];\n            max = arr[arr.length - 1];\n        }\n        return {\n            min,\n            max\n        };\n    }\n buildTicks() {\n        const options = this.options;\n        const timeOpts = options.time;\n        const tickOpts = options.ticks;\n        const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n        if (options.bounds === 'ticks' && timestamps.length) {\n            this.min = this._userMin || timestamps[0];\n            this.max = this._userMax || timestamps[timestamps.length - 1];\n        }\n        const min = this.min;\n        const max = this.max;\n        const ticks = _filterBetween(timestamps, min, max);\n        this._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min)) : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n        this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined : determineMajorUnit(this._unit);\n        this.initOffsets(timestamps);\n        if (options.reverse) {\n            ticks.reverse();\n        }\n        return ticksFromTimestamps(this, ticks, this._majorUnit);\n    }\n    afterAutoSkip() {\n        if (this.options.offsetAfterAutoskip) {\n            this.initOffsets(this.ticks.map((tick)=>+tick.value));\n        }\n    }\n initOffsets(timestamps = []) {\n        let start = 0;\n        let end = 0;\n        let first, last;\n        if (this.options.offset && timestamps.length) {\n            first = this.getDecimalForValue(timestamps[0]);\n            if (timestamps.length === 1) {\n                start = 1 - first;\n            } else {\n                start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n            }\n            last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n            if (timestamps.length === 1) {\n                end = last;\n            } else {\n                end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n            }\n        }\n        const limit = timestamps.length < 3 ? 0.5 : 0.25;\n        start = _limitValue(start, 0, limit);\n        end = _limitValue(end, 0, limit);\n        this._offsets = {\n            start,\n            end,\n            factor: 1 / (start + 1 + end)\n        };\n    }\n _generate() {\n        const adapter = this._adapter;\n        const min = this.min;\n        const max = this.max;\n        const options = this.options;\n        const timeOpts = options.time;\n        const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n        const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n        const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n        const hasWeekday = isNumber(weekday) || weekday === true;\n        const ticks = {};\n        let first = min;\n        let time, count;\n        if (hasWeekday) {\n            first = +adapter.startOf(first, 'isoWeek', weekday);\n        }\n        first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n        if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n            throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n        }\n        const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n        for(time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++){\n            addTick(ticks, time, timestamps);\n        }\n        if (time === max || options.bounds === 'ticks' || count === 1) {\n            addTick(ticks, time, timestamps);\n        }\n        return Object.keys(ticks).sort((a, b)=>a - b).map((x)=>+x);\n    }\n getLabelForValue(value) {\n        const adapter = this._adapter;\n        const timeOpts = this.options.time;\n        if (timeOpts.tooltipFormat) {\n            return adapter.format(value, timeOpts.tooltipFormat);\n        }\n        return adapter.format(value, timeOpts.displayFormats.datetime);\n    }\n _tickFormatFunction(time, index, ticks, format) {\n        const options = this.options;\n        const formatter = options.ticks.callback;\n        if (formatter) {\n            return callback(formatter, [\n                time,\n                index,\n                ticks\n            ], this);\n        }\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const majorUnit = this._majorUnit;\n        const minorFormat = unit && formats[unit];\n        const majorFormat = majorUnit && formats[majorUnit];\n        const tick = ticks[index];\n        const major = majorUnit && majorFormat && tick && tick.major;\n        return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    }\n generateTickLabels(ticks) {\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            tick.label = this._tickFormatFunction(tick.value, i, ticks);\n        }\n    }\n getDecimalForValue(value) {\n        return value === null ? NaN : (value - this.min) / (this.max - this.min);\n    }\n getPixelForValue(value) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForValue(value);\n        return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return this.min + pos * (this.max - this.min);\n    }\n _getLabelSize(label) {\n        const ticksOpts = this.options.ticks;\n        const tickLabelWidth = this.ctx.measureText(label).width;\n        const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n        const cosRotation = Math.cos(angle);\n        const sinRotation = Math.sin(angle);\n        const tickFontSize = this._resolveTickFontOptions(0).size;\n        return {\n            w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n            h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n        };\n    }\n _getLabelCapacity(exampleTime) {\n        const timeOpts = this.options.time;\n        const displayFormats = timeOpts.displayFormats;\n        const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n        const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [\n            exampleTime\n        ], this._majorUnit), format);\n        const size = this._getLabelSize(exampleLabel);\n        const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n        return capacity > 0 ? capacity : 1;\n    }\n getDataTimestamps() {\n        let timestamps = this._cache.data || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const metas = this.getMatchingVisibleMetas();\n        if (this._normalized && metas.length) {\n            return this._cache.data = metas[0].controller.getAllParsedValues(this);\n        }\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n        }\n        return this._cache.data = this.normalize(timestamps);\n    }\n getLabelTimestamps() {\n        const timestamps = this._cache.labels || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const labels = this.getLabels();\n        for(i = 0, ilen = labels.length; i < ilen; ++i){\n            timestamps.push(parse(this, labels[i]));\n        }\n        return this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps);\n    }\n normalize(values) {\n        return _arrayUnique(values.sort(sorter));\n    }\n}\n\nfunction interpolate(table, val, reverse) {\n    let lo = 0;\n    let hi = table.length - 1;\n    let prevSource, nextSource, prevTarget, nextTarget;\n    if (reverse) {\n        if (val >= table[lo].pos && val <= table[hi].pos) {\n            ({ lo , hi  } = _lookupByKey(table, 'pos', val));\n        }\n        ({ pos: prevSource , time: prevTarget  } = table[lo]);\n        ({ pos: nextSource , time: nextTarget  } = table[hi]);\n    } else {\n        if (val >= table[lo].time && val <= table[hi].time) {\n            ({ lo , hi  } = _lookupByKey(table, 'time', val));\n        }\n        ({ time: prevSource , pos: prevTarget  } = table[lo]);\n        ({ time: nextSource , pos: nextTarget  } = table[hi]);\n    }\n    const span = nextSource - prevSource;\n    return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n    static id = 'timeseries';\n static defaults = TimeScale.defaults;\n constructor(props){\n        super(props);\n         this._table = [];\n         this._minPos = undefined;\n         this._tableRange = undefined;\n    }\n initOffsets() {\n        const timestamps = this._getTimestampsForTable();\n        const table = this._table = this.buildLookupTable(timestamps);\n        this._minPos = interpolate(table, this.min);\n        this._tableRange = interpolate(table, this.max) - this._minPos;\n        super.initOffsets(timestamps);\n    }\n buildLookupTable(timestamps) {\n        const { min , max  } = this;\n        const items = [];\n        const table = [];\n        let i, ilen, prev, curr, next;\n        for(i = 0, ilen = timestamps.length; i < ilen; ++i){\n            curr = timestamps[i];\n            if (curr >= min && curr <= max) {\n                items.push(curr);\n            }\n        }\n        if (items.length < 2) {\n            return [\n                {\n                    time: min,\n                    pos: 0\n                },\n                {\n                    time: max,\n                    pos: 1\n                }\n            ];\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            next = items[i + 1];\n            prev = items[i - 1];\n            curr = items[i];\n            if (Math.round((next + prev) / 2) !== curr) {\n                table.push({\n                    time: curr,\n                    pos: i / (ilen - 1)\n                });\n            }\n        }\n        return table;\n    }\n _getTimestampsForTable() {\n        let timestamps = this._cache.all || [];\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const data = this.getDataTimestamps();\n        const label = this.getLabelTimestamps();\n        if (data.length && label.length) {\n            timestamps = this.normalize(data.concat(label));\n        } else {\n            timestamps = data.length ? data : label;\n        }\n        timestamps = this._cache.all = timestamps;\n        return timestamps;\n    }\n getDecimalForValue(value) {\n        return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n    }\n}\nvar TimeSeriesScale$1 = TimeSeriesScale;\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale$1\n});\n\nconst registerables = [\n    controllers,\n    elements,\n    plugins,\n    scales, \n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart$1 as Chart, plugin_colors as Colors, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, TimeScale, TimeSeriesScale$1 as TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, elements, layouts, plugins, registerables, registry, scales };\n//# sourceMappingURL=chart.js.map\n","import { ExtendedChartData, PluginOptions } from \"./types\";\n\nexport const isObject = (obj: any) => {\n  const type = typeof obj;\n  return type === \"object\" && !!obj;\n};\n\nexport const dataValue = (dataPoint: any, isHorizontal: boolean) => {\n  if (isObject(dataPoint)) {\n    return isHorizontal ? dataPoint.x : dataPoint.y;\n  }\n\n  return dataPoint;\n};\n\nconst cloneArray = <T>(srcAry: T[]): T[] => {\n  return [...srcAry];\n};\n\nexport const setOriginalData = (data: ExtendedChartData) => {\n  data.originalData = data.datasets.map((dataset) => {\n    return cloneArray(dataset.data);\n  });\n};\n\nexport const round = (value: number, precision: number): number => {\n  const multiplicator = Math.pow(10, precision);\n  return Math.round(value * 100 * multiplicator) / multiplicator;\n};\n\nexport const getPrecision = (pluginOptions: PluginOptions): number => {\n  // return the (validated) configured precision from pluginOptions or default 1\n  const defaultPrecision = 1;\n  if (!(\"precision\" in pluginOptions)) return defaultPrecision;\n  if (typeof pluginOptions.precision !== \"number\") return defaultPrecision;\n  const optionsPrecision = Math.floor(pluginOptions.precision);\n  if (optionsPrecision < 0 || optionsPrecision > 16) return defaultPrecision;\n  return optionsPrecision;\n};\n","import { Chart, ChartType, TooltipCallbacks, TooltipItem, ChartData } from \"chart.js\";\n\nimport { dataValue, setOriginalData, round, getPrecision } from \"./utils\";\nimport { ExtendedChartData, ExtendedPlugin } from \"./types\";\n\nexport const defaultStackKey = Symbol();\n\nexport const summarizeValues = (\n  datasets: ChartData[\"datasets\"],\n  visibles: number[],\n  isHorizontal: boolean,\n  individual: boolean,\n) => {\n  const datasetDataLength =\n    datasets?.reduce((longestLength, dataset) => {\n      const length = dataset?.data?.length || 0;\n      return length > longestLength ? length : longestLength;\n    }, 0) || 0;\n\n  const isStack = datasets?.[0]?.stack;\n  const values = [...new Array(datasetDataLength)].map((el, i) => {\n    return datasets.reduce((sum, dataset, j) => {\n      const key = dataset.stack || defaultStackKey;\n      if (!sum[key]) sum[key] = 0;\n      const value = Math.abs(dataValue(dataset.data[i], isHorizontal) || 0) * visibles[j];\n      if (individual && !isStack) {\n        if (sum[key] < value) sum[key] = value;\n      } else {\n        sum[key] += value;\n      }\n\n      return sum;\n    }, {});\n  });\n\n  if (!isStack || !individual) return values;\n  return values.map((rec) => {\n    const maxVal = Math.max(...(Object.values(rec) as number[]));\n    Object.keys(rec).forEach((key) => (rec[key] = maxVal));\n    return rec;\n  });\n};\n\nconst calculateRate = (\n  data: ExtendedChartData,\n  visibles: number[],\n  isHorizontal: boolean,\n  precision: number,\n  individual: boolean,\n) => {\n  const totals = summarizeValues(data?.datasets, visibles, isHorizontal, individual);\n\n  return data.datasets.map((dataset) => {\n    return dataset.data.map((val, j) => {\n      const total = totals[j][dataset.stack || defaultStackKey];\n      const dv = dataValue(val, isHorizontal);\n      return dv && total ? round(dv / total, precision) : 0;\n    });\n  });\n};\n\nconst tooltipLabel = (isHorizontal: boolean): TooltipCallbacks<ChartType>[\"label\"] => {\n  return (tooltipItem: TooltipItem<ChartType>) => {\n    const data = tooltipItem.chart.data as ExtendedChartData;\n    const datasetIndex = tooltipItem.datasetIndex;\n    const index = tooltipItem.dataIndex;\n    const datasetLabel = data.datasets[datasetIndex].label || \"\";\n    const originalValue = data.originalData[datasetIndex][index];\n    const rateValue = data.calculatedData[datasetIndex][index];\n    const value = dataValue(originalValue, isHorizontal);\n\n    return `${datasetLabel}: ${rateValue}% (${value})`;\n  };\n};\n\nconst reflectData = (srcData: any[], datasets: ExtendedChartData[\"datasets\"]) => {\n  if (!srcData) return;\n\n  srcData.forEach((data, i) => {\n    datasets[i].data = data;\n  });\n};\n\nconst isHorizontalChart = (chartInstance: Chart) => {\n  return chartInstance.options.indexAxis === \"y\";\n};\n\nconst getTickOption = (hasNegative: boolean, fixNegativeScale: boolean) => {\n  const baseOption = { max: 100 };\n  if (!hasNegative) return { min: 0, ...baseOption };\n  if (fixNegativeScale) return { min: -100, ...baseOption };\n  return baseOption;\n};\n\nexport const beforeInit: ExtendedPlugin[\"beforeInit\"] = (chartInstance, args, pluginOptions) => {\n  if (!pluginOptions.enable) return;\n  const { replaceTooltipLabel = true, fixNegativeScale = true, individual = false } = pluginOptions;\n\n  const isHorizontal = isHorizontalChart(chartInstance);\n  const targetAxis = isHorizontal ? \"x\" : \"y\";\n  const hasNegative = chartInstance.data.datasets.some((dataset) => {\n    return dataset.data.some((value) => (dataValue(value, isHorizontal) || 0) < 0);\n  });\n  [\"x\", \"y\"].forEach((axis) => {\n    const tickOption = axis === targetAxis ? getTickOption(hasNegative, fixNegativeScale) : {};\n    const scaleOption = {\n      stacked: !individual,\n      ...tickOption,\n      ...chartInstance.options.scales[axis],\n    };\n    chartInstance.options.scales[axis] = scaleOption;\n  });\n\n  // Replace tooltips\n  if (!replaceTooltipLabel) return;\n\n  chartInstance.options.plugins.tooltip.callbacks.label = tooltipLabel(isHorizontal);\n};\n\nexport const beforeUpdate: ExtendedPlugin[\"beforeUpdate\"] = (\n  chartInstance,\n  _args,\n  pluginOptions,\n) => {\n  if (!pluginOptions.enable) return;\n\n  const data = chartInstance.data as ExtendedChartData;\n\n  setOriginalData(data);\n  const visibles = data.datasets.map((dataset, i) =>\n    chartInstance.getDatasetMeta(i)?.hidden ?? dataset.hidden ? 0 : 1,\n  );\n  const precision = getPrecision(pluginOptions);\n  data.calculatedData = calculateRate(\n    data,\n    visibles,\n    isHorizontalChart(chartInstance),\n    precision,\n    pluginOptions.individual,\n  );\n  reflectData(data.calculatedData, data.datasets);\n};\n\nexport const afterUpdate: ExtendedPlugin[\"afterUpdate\"] = (chartInstance, _args, pluginOptions) => {\n  if (!pluginOptions.enable) return;\n\n  const data = chartInstance.data as ExtendedChartData;\n\n  reflectData(data.originalData, data.datasets);\n};\n","import { beforeInit, beforeUpdate, afterUpdate } from \"./plugin\";\nexport * from \"./types\";\n\nconst ChartPluginStacked100 = {\n  id: \"stacked100\",\n  beforeInit,\n  beforeUpdate,\n  afterUpdate,\n};\n\nexport default ChartPluginStacked100;\n","import { Chart, ChartConfiguration, registerables } from \"chart.js\";\nimport ChartPluginStacked100 from \"../../src/index\";\n\nChart.register(...registerables, ChartPluginStacked100);\n\nconst COLORS = {\n  red: \"rgba(244, 143, 177, 0.6)\",\n  yellow: \"rgba(255, 235, 59, 0.6)\",\n  blue: \"rgba(100, 181, 246, 0.6)\",\n  green: \"rgba(51, 255, 74, 0.4)\",\n};\n\n// config: ChartConfiguration<\"bar\" | \"line\", DefaultDataPoint<\"bar\" | \"line\">, unknown>\nconst createChart = (title: string, config: ChartConfiguration): void => {\n  const container = document.createElement(\"div\");\n  container.className = \"my-chart-container\";\n  const header = document.createElement(\"h3\");\n  header.innerText = title;\n  container.appendChild(header);\n\n  const canvas = document.createElement(\"canvas\");\n  container.appendChild(canvas);\n\n  document.body.appendChild(container);\n\n  new Chart(canvas, config);\n};\n\ncreateChart(\"Case.1 basic pattern\", {\n  type: \"bar\",\n  data: {\n    labels: [\"Foo\", \"Bar\"],\n    datasets: [\n      { label: \"bad\", data: [5, 25], backgroundColor: COLORS.red },\n      { label: \"better\", data: [15, 10], backgroundColor: COLORS.yellow },\n      { label: \"good\", data: [10, 8], backgroundColor: COLORS.blue },\n    ],\n  },\n  options: {\n    indexAxis: \"y\",\n    plugins: { stacked100: { enable: true } },\n  },\n});\n\ncreateChart(\"Case.2 stack group pattern\", {\n  type: \"bar\",\n  data: {\n    labels: [\"Foo\", \"Bar\"],\n    datasets: [\n      { label: \"L1\", stack: \"Stack 0\", data: [3, 2], backgroundColor: COLORS.red },\n      { label: \"L2\", stack: \"Stack 0\", data: [1, 1], backgroundColor: COLORS.yellow },\n      { label: \"L1\", stack: \"Stack 1\", data: [0, 3], backgroundColor: COLORS.blue },\n      { label: \"L2\", stack: \"Stack 1\", data: [1, 4], backgroundColor: COLORS.green },\n    ],\n  },\n  options: {\n    indexAxis: \"y\",\n    plugins: { stacked100: { enable: true } },\n  },\n});\n\ncreateChart(\"Case.3 stacked vertical bar\", {\n  type: \"bar\",\n  data: {\n    labels: [\"Hoge\", \"Fuga\"],\n    datasets: [\n      { label: \"L1\", data: [10, 9], backgroundColor: COLORS.red },\n      { label: \"L2\", data: [20, 6], backgroundColor: COLORS.yellow },\n      { label: \"L3\", data: [30, 3], backgroundColor: COLORS.blue },\n    ],\n  },\n  options: {\n    plugins: { stacked100: { enable: true } },\n  },\n});\n\ncreateChart(\"Case.4 stacked area\", {\n  type: \"line\",\n  data: {\n    labels: [\"2017-10-18\", \"2017-10-19\", \"2017-10-20\"],\n    datasets: [\n      { label: \"L1\", fill: true, data: [1, 2, 0], backgroundColor: COLORS.red },\n      { label: \"L2\", fill: true, data: [1, 1, 3], backgroundColor: COLORS.yellow },\n      { label: \"L3\", fill: true, data: [1, 1, 2], backgroundColor: COLORS.blue },\n      { label: \"L4\", fill: true, data: [1, 3, 1], backgroundColor: COLORS.green },\n    ],\n  },\n  options: {\n    scales: {\n      x: { stacked: true },\n      y: { stacked: true },\n    },\n    plugins: { stacked100: { enable: true } },\n  },\n});\n\ncreateChart(\"Case.5 stacked area with objects as data points\", {\n  type: \"line\",\n  data: {\n    labels: [\"2017-10-18\", \"2017-10-19\", \"2017-10-20\"],\n    datasets: [\n      {\n        label: \"L1\",\n        fill: true,\n        data: [\n          { x: \"2017-10-18\", y: 1 },\n          { x: \"2017-10-19\", y: 2 },\n          { x: \"2017-10-20\", y: 0 },\n        ],\n        backgroundColor: COLORS.red,\n      },\n      {\n        label: \"L2\",\n        fill: true,\n        data: [\n          { x: \"2017-10-18\", y: 1 },\n          { x: \"2017-10-19\", y: 1 },\n          { x: \"2017-10-20\", y: 3 },\n        ],\n        backgroundColor: COLORS.yellow,\n      },\n      {\n        label: \"L3\",\n        fill: true,\n        data: [\n          { x: \"2017-10-18\", y: 1 },\n          { x: \"2017-10-19\", y: 1 },\n          { x: \"2017-10-20\", y: 2 },\n        ],\n        backgroundColor: COLORS.blue,\n      },\n      {\n        label: \"L4\",\n        fill: true,\n        data: [\n          { x: \"2017-10-18\", y: 1 },\n          { x: \"2017-10-19\", y: 3 },\n          { x: \"2017-10-20\", y: 1 },\n        ],\n        backgroundColor: COLORS.green,\n      },\n    ] as any,\n  },\n  options: {\n    scales: {\n      x: { stacked: true },\n      y: { stacked: true },\n    },\n    plugins: { stacked100: { enable: true } },\n  },\n});\n\ncreateChart(\"Case.6 horizontal bar chart with objects as data points\", {\n  type: \"bar\",\n  data: {\n    labels: [\"Foo\", \"Bar\"],\n    datasets: [\n      {\n        label: \"bad\",\n        data: [\n          { x: 5, y: \"Foo\" },\n          { x: 25, y: \"Bar\" },\n        ],\n        backgroundColor: COLORS.red,\n      },\n      {\n        label: \"better\",\n        data: [\n          { x: 15, y: \"Foo\" },\n          { x: 10, y: \"Bar\" },\n        ],\n        backgroundColor: COLORS.yellow,\n      },\n      {\n        label: \"good\",\n        data: [\n          { x: 10, y: \"Foo\" },\n          { x: 8, y: \"Bar\" },\n        ],\n        backgroundColor: COLORS.blue,\n      },\n    ] as any,\n  },\n  options: {\n    indexAxis: \"y\",\n    plugins: { stacked100: { enable: true } },\n  },\n});\n\ncreateChart(\"Case.7 Negative values\", {\n  type: \"bar\",\n  data: {\n    labels: [\"Foo\", \"Bar\"],\n    datasets: [\n      { label: \"bad\", data: [-5, 25], backgroundColor: COLORS.red },\n      { label: \"better\", data: [15, -10], backgroundColor: COLORS.yellow },\n      { label: \"good\", data: [10, 8], backgroundColor: COLORS.blue },\n    ],\n  },\n  options: {\n    indexAxis: \"y\",\n    plugins: {\n      stacked100: { enable: true, fixNegativeScale: true },\n    },\n  },\n});\n\ncreateChart(\"Case.8 Different data length\", {\n  type: \"bar\",\n  data: {\n    labels: [\"Foo\", \"Bar\", \"Baz\", \"Quuz\"],\n    datasets: [\n      { label: \"bad\", data: [-5, 25], backgroundColor: COLORS.red },\n      { label: \"better\", data: [15, -10, 6, 4], backgroundColor: COLORS.yellow },\n      { label: \"good\", data: [10, 8, 11], backgroundColor: COLORS.blue },\n    ],\n  },\n  options: {\n    indexAxis: \"y\",\n    plugins: {\n      stacked100: { enable: true, fixNegativeScale: true },\n    },\n  },\n});\n\ncreateChart(\"Case.9 Objects as data points with undefined value\", {\n  type: \"bar\",\n  data: {\n    labels: [\"Foo\", \"Bar\", \"Baz\", \"Quuz\"],\n    datasets: [\n      {\n        label: \"bad\",\n        data: [\n          { x: 0, y: -5 },\n          { x: 1, y: 25 },\n          { x: 2, y: undefined },\n          { x: 3, y: undefined },\n        ],\n        backgroundColor: COLORS.red,\n      },\n      {\n        label: \"better\",\n        data: [\n          { x: 0, y: 15 },\n          { x: 1, y: -10 },\n          { x: 2, y: 6 },\n          { x: 3, y: 4 },\n        ],\n        backgroundColor: COLORS.yellow,\n      },\n      {\n        label: \"good\",\n        data: [\n          { x: 0, y: 10 },\n          { x: 1, y: 8 },\n          { x: 2, y: 11 },\n          { x: 3, y: undefined },\n        ],\n        backgroundColor: COLORS.blue,\n      },\n    ],\n  },\n  options: {\n    indexAxis: \"x\",\n    plugins: { stacked100: { enable: true } },\n  },\n});\n\ncreateChart(\"Case.10 Relative percentage to maxium value\", {\n  type: \"bar\",\n  data: {\n    labels: [\"Foo\", \"Bar\"],\n    datasets: [\n      { label: \"bad\", data: [5, 25], backgroundColor: COLORS.red },\n      { label: \"better\", data: [15, 10], backgroundColor: COLORS.yellow },\n      { label: \"good\", data: [10, 8], backgroundColor: COLORS.blue },\n    ],\n  },\n  options: {\n    indexAxis: \"y\",\n    plugins: {\n      stacked100: { enable: true, individual: true },\n    },\n  },\n});\n\ncreateChart(\"Case.11 Relative percentage with stack\", {\n  type: \"bar\",\n  data: {\n    labels: [\"Foo\", \"Bar\"],\n    datasets: [\n      { label: \"L1\", stack: \"Stack 0\", data: [3, 2], backgroundColor: COLORS.red },\n      { label: \"L2\", stack: \"Stack 0\", data: [1, 1], backgroundColor: COLORS.yellow },\n      { label: \"L1\", stack: \"Stack 1\", data: [0, 3], backgroundColor: COLORS.blue },\n      { label: \"L2\", stack: \"Stack 1\", data: [1, 4], backgroundColor: COLORS.green },\n    ],\n  },\n  options: {\n    indexAxis: \"y\",\n    plugins: { stacked100: { enable: true, individual: true } },\n    scales: {\n      x: { stacked: true },\n      y: { stacked: true },\n    },\n  },\n});\n"],"names":["noop","uid","id","isNullOrUndef","value","isArray","Array","type","Object","prototype","toString","call","slice","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toDimension","dimension","endsWith","parseFloat","callback","fn","args","thisArg","apply","each","loopable","reverse","i","len","keys","length","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","index","clone$1","source","map","target","create","klen","k","isValidKey","key","indexOf","_merger","options","tval","sval","merge","sources","merger","current","mergeIf","_mergerIf","hasOwnProperty","keyResolvers","v","x","o","y","resolveObjectKey","obj","resolver","parts","split","tmp","part","push","_splitKey","_getKeyResolver","_capitalize","str","charAt","toUpperCase","defined","isFunction","setsEqual","a","b","size","item","has","PI","Math","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","almostEquals","epsilon","abs","niceNum","range","roundedRange","round","niceRange","pow","floor","fraction","isNumber","n","isNaN","_setMinAndMaxByKey","array","property","min","max","toRadians","degrees","toDegrees","radians","_decimalPlaces","e","p","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","sqrt","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","s","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_isBetween","_lookup","table","cmp","mid","hi","lo","_lookupByKey","last","ti","_rlookupByKey","arrayEvents","unlistenArrayEvents","listener","stub","_chartjs","listeners","splice","forEach","_arrayUnique","items","set","Set","add","from","requestAnimFrame","window","requestAnimationFrame","throttled","ticking","_toLeftRightCenter","align","_alignStartEnd","_getStartAndCountOfVisiblePoints","meta","points","animationsDisabled","pointCount","count","_sorted","iScale","_parsed","axis","minDefined","maxDefined","getUserBounds","getPixelForValue","_scaleRangesChanged","xScale","yScale","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","assign","atEdge","t","elasticIn","sin","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","m","d","easeInOutBounce","effects$1","lim","l","h","p2b","n2b","b2n","n2p","map$1","A","B","C","D","E","F","c","f","hex","h1","h2","eq","HUE_RE","hsl2rgbn","hsv2rgbn","hwb2rgbn","w","rgb","rgb2hsl","r","g","hueValue","calln","hsl2rgb","hue","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","names","RGB_RE","to","modHSL","ratio","clone","proto","fromObject","input","functionParse","exec","rgbParse","p1","p2","hwb2rgb","hsv2rgb","hueParse","Color","constructor","ret","unpacked","tkeys","j","ok","nk","replace","parseInt","unpack","transparent","toLowerCase","nameParse","this","_rgb","_valid","valid","rgbString","undefined","hexString","isShort","alpha","hslString","mix","color","weight","c1","c2","w2","w1","interpolate","rgb1","rgb2","clearer","greyscale","val","opaquer","negate","lighten","darken","saturate","desaturate","rotate","deg","index_esm","isPatternOrGradient","getHoverColor","numbers","colors","intlCache","Map","formatNumber","num","locale","cacheKey","JSON","stringify","formatter","get","Intl","NumberFormat","getNumberFormat","format","formatters","values","numeric","tickValue","ticks","chart","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","remain","significand","includes","Ticks","overrides","descriptors","getScope$1","node","root","scope","Defaults","_descriptors","_appliers","animation","backgroundColor","borderColor","datasets","devicePixelRatio","context","platform","getDevicePixelRatio","elements","events","font","family","style","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","includeInvisible","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scale","scales","showLine","drawActiveElementsOnTop","describe","override","route","name","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","enumerable","local","appliers","defaults","_scriptable","startsWith","_indexable","_fallback","delay","duration","easing","loop","properties","active","resize","show","animations","visible","hide","autoPadding","padding","top","right","bottom","left","display","offset","beginAtZero","bounds","grace","grid","lineWidth","drawOnChartArea","drawTicks","tickLength","tickWidth","_ctx","tickColor","border","dash","dashOffset","width","title","text","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","minor","major","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","_measureText","data","gc","longest","string","textWidth","measureText","_longestText","arrayOfThings","cache","garbageCollect","save","jlen","thing","nestedThing","restore","gcLen","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","clearCanvas","canvas","getContext","resetTransform","clearRect","height","drawPoint","drawPointLegend","xOffset","yOffset","cornerRadius","xOffsetW","yOffsetW","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","ellipse","arc","closePath","moveTo","lineTo","SQRT1_2","rect","fill","borderWidth","stroke","_isPointInArea","point","area","margin","clipArea","clip","unclipArea","_steppedLineTo","previous","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","renderText","opts","lines","strokeWidth","strokeColor","line","translation","fillStyle","textAlign","textBaseline","setRenderOpts","backdrop","drawBackdrop","strokeStyle","strokeText","maxWidth","fillText","decorateText","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","decorationWidth","oldColor","fillRect","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","LINE_HEIGHT","FONT_STYLE","toLineHeight","matches","match","_readValueToProps","props","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","console","warn","toFontString","resolve","inputs","info","cacheable","createContext","parentContext","_createResolver","scopes","prefixes","rootScopes","getTarget","_resolve","Symbol","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","Proxy","deleteProperty","_keys","_cached","proxy","prefix","readKey","needsSubResolver","createSubResolver","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getPrototypeOf","getKeysFromAllScopes","ownKeys","storage","_storage","_attachContext","subProxy","descriptorDefaults","_proxy","_context","_subProxy","_stack","setContext","receiver","isScriptable","Error","join","delete","_resolveScriptable","isIndexable","arr","filter","_resolveArray","_resolveWithContext","allKeys","configurable","scriptable","indexable","_allKeys","resolveFallback","getScope","parent","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","_parseObjectDataRadialScale","_parsing","parsed","parse","EPSILON","getPoint","skip","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","next","d01","d12","s01","s12","fa","fb","capControlPoint","pt","_updateBezierControlPoints","controlPoints","spanGaps","cubicInterpolationMode","valueAxis","pointsLen","deltaK","mK","pointBefore","pointCurrent","pointAfter","slopeDelta","alphaK","betaK","tauK","squaredMagnitude","monotoneAdjust","iPixel","vPixel","monotoneCompute","splineCurveMonotone","prev","tension","capBezierPoints","inArea","inAreaPrev","inAreaNext","_isDomSupported","document","_getParentNode","domNode","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","ownerDocument","defaultView","positions","getPositionedStyle","styles","suffix","result","pos","getRelativePosition","event","borderBox","boxSizing","paddings","borders","box","touches","offsetX","offsetY","shadowRoot","useOffsetPos","getBoundingClientRect","clientX","clientY","getCanvasPosition","round1","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","addEventListener","removeEventListener","readUsedSize","el","getPropertyValue","getStyle","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","getRtlAdapter","rtl","rectX","setWidth","xPlus","leftForLtr","itemWidth","getRightToLeftAdapter","_itemWidth","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","propertyFn","between","compare","normalize","normalizeSegment","_boundSegment","segment","startBound","endBound","getSegment","prevValue","inside","subStart","_boundSegments","segments","sub","readStyle","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","styleChanged","prevStyle","Animator","_request","_charts","_running","_lastDate","_notify","anims","date","callbacks","numSteps","initial","currentStep","_refresh","_update","Date","now","remaining","running","draw","_active","_total","tick","pop","_getAnims","charts","complete","progress","listen","cb","reduce","acc","cur","_duration","stop","cancel","remove","animator","interpolators","boolean","factor","c0","number","Animation","cfg","currentValue","_fn","_easing","_start","_loop","_target","_prop","_from","_to","_promises","update","elapsed","wait","promises","Promise","res","rej","resolved","method","Animations","config","_chart","_properties","configure","animationOptions","animatedProps","getOwnPropertyNames","option","_animateOptions","newOptions","$shared","$animations","resolveTargetOptions","_createAnimations","anim","all","awaitAll","then","scaleClip","allowedOverflow","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","applyStack","stack","dsIndex","singleMode","otherValue","isStacked","stacked","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","_cachedMeta","_stacks","iAxis","vAxis","indexScale","valueScale","getStackKey","_top","_bottom","getFirstScaleId","shift","clearStacks","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","static","_cachedDataOpts","getMeta","_type","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","dataElementType","initialize","linkScales","_stacked","addElements","isPluginEnabled","updateIndex","dataset","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","_dataCheck","adata","convertObjectDataToArray","isExtensible","defineProperty","base","object","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","sorted","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","parsedValue","NaN","getMinMax","canStack","otherScale","hidden","createStack","NEGATIVE_INFINITY","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","disabled","toClip","defaultClip","chartArea","resolveDatasetElementOptions","resolveDataElementOptions","dataIndex","raw","createDataContext","createDatasetContext","_resolveElementOptions","elementType","sharing","datasetElementScopeKeys","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_sync","_dataChanges","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","computeMinSampleSize","_cache","$bar","visibleMetas","concat","sort","getAllScaleValues","curr","_length","updateMinAndPrev","getPixelForTick","parseValue","entry","startValue","endValue","barStart","barEnd","_custom","parseFloatBar","parseArrayOrPrimitive","isFloatBar","custom","setBorderSkipped","edge","borderSkipped","horizontal","borderProps","enableBorderRadius","parseEdge","orig","v2","startEnd","setInflateAmount","inflateAmount","DoughnutController","animateRotate","animateScale","cutout","circumference","spacing","aspectRatio","legend","generateLabels","fontColor","getDataVisibility","legendItem","toggleDataVisibility","super","innerRadius","outerRadius","getter","_getRotation","_getCircumference","_getRotationExtents","isDatasetVisible","arcs","getMaxBorderWidth","getMaxOffset","maxSize","chartWeight","_getRingWeight","ratioX","ratioY","startAngle","endAngle","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","getRatioAndOffset","maxHeight","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","calculateCircumference","animationOpts","centerX","centerY","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","controllers","__proto__","BarController","categoryPercentage","barPercentage","grouped","_index_","_value_","iAxisKey","vAxisKey","bars","getBasePixel","isHorizontal","ruler","_getRuler","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","_getStacks","skipNull","_getStackCount","_getStackIndex","pixels","barThickness","_startPixel","_endPixel","stackCount","baseValue","minBarLength","actualBase","floating","barSign","startPixel","getPixelForDecimal","endPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","rects","BubbleController","LineController","_dataset","_datasetIndex","_decimated","animated","maxGapLength","directUpdate","pointsCount","prevParsed","nullData","lastPoint","updateControlPoints","PolarAreaController","angleLines","circular","pointLabels","bind","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","PieController","RadarController","_fullLoop","pointPosition","getPointPositionForValue","ScatterController","registry","getElement","DateAdapterBase","members","init","formats","diff","startOf","endOf","adapters","binarySearch","metaset","lookupMethod","_reversePixels","getRange","evaluateInteractionItems","position","handler","getSortedVisibleDatasetMetas","getIntersectItems","useFinalPosition","isPointInArea","inRange","getNearestItems","distanceMetric","useX","useY","deltaX","deltaY","getDistanceMetricForAxis","minDistance","getCenterPoint","getNearestCartesianItems","getProps","getNearestRadialItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","params","layout","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","getMargins","marginForPositions","fitBoxes","boxes","refitBoxes","refit","fullSize","setBoxDims","placeBoxes","userPadding","placed","stackWeight","height1","width1","layouts","addBox","_layers","z","removeBox","layoutItem","minPadding","availableWidth","availableHeight","layoutBoxes","wrapBoxes","wrap","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","buildLayoutBoxes","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","vBoxMaxWidth","hBoxMaxHeight","buildStacks","setLayoutDims","updatePos","change","handleMaxPadding","BasePlatform","acquireContext","releaseContext","getMaximumSize","isAttached","updateConfig","BasicPlatform","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","removeListener","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","createResizeObserver","container","clientWidth","ResizeObserver","contentRect","listenDevicePixelRatioChanges","releaseObserver","disconnect","unlistenDevicePixelRatioChanges","createProxyAndListen","native","fromNativeEvent","addListener","DomPlatform","renderHeight","getAttribute","renderWidth","displayWidth","displayHeight","initCanvas","removeAttribute","setAttribute","proxies","$proxies","attach","detach","bbWidth","bbHeight","margins","containerSize","containerStyle","containerBorder","containerPadding","clientHeight","getContainerSize","isConnected","Element","tooltipPosition","hasValue","final","newTicks","majorStart","majorEnd","ceil","offsetFromEdge","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","lineValue","getTickMarkLength","getTitleHeight","titleAlign","reverseAlign","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_maxLength","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","beforeUpdate","tickOpts","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","minmax","keepZero","_addGrace","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","determinedMaxTicks","_tickSize","maxScale","maxChart","determineMaxTicks","ticksLimit","maxTicksLimit","majorIndices","enabled","getMajorIndices","numMajorIndices","first","skipMajors","evenMajorSpacing","getEvenSpacing","factors","_factorize","calculateSpacing","avgMajorSpacing","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","caches","widths","heights","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","valueAt","idx","getValueForPixel","decimal","getDecimalForPixel","getBaseValue","createTickContext","optionTicks","rot","_computeGridLineItems","ticksLength","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","positionAxisID","positionAxisID1","value1","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","tickBorderDash","tickBorderDashOffset","_computeLabelItems","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","ret1","halfCount","tickTextAlign","labelPadding","_computeLabelArea","drawBackground","findIndex","drawGrid","drawLine","setLineDash","lineDashOffset","drawBorder","lastLineWidth","drawLabels","drawTitle","titleX","titleY","titleArgs","tz","gz","bz","axisID","_maxDigits","fontSize","TypedRegistry","isForType","isPrototypeOf","register","parentScope","isIChartComponent","itemDefaults","defaultRoutes","routes","propertyParts","sourceName","sourceScope","routeDefaults","registerDefaults","unregister","Registry","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","localIds","i1","allPlugins","getOpts","pluginOpts","createDescriptors","previousDescriptors","some","pluginScopeKeys","getIndexAxis","datasetDefaults","determineAxis","scaleOptions","initOptions","chartDefaults","configScales","chartIndexAxis","scaleConf","error","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","defaultID","getAxisFromDefaultScaleID","mergeScaleConfig","initData","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","initConfig","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","subPrefixes","getResolver","hasFunction","needContext","resolverCache","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","Chart","invalidatePlugins","userConfig","initialCanvas","existingChart","OffscreenCanvas","_detectPlatform","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","timeout","clearTimeout","setTimeout","debounce","resizeDelay","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","ilen1","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getDatasetArea","getElementsAtEventForMode","setDatasetVisibility","_updateVisibility","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","getActiveElements","setActiveElements","activeElements","lastActive","pluginId","replay","hoverOptions","deactivated","activated","inChartArea","eventFilter","_handleEvent","_getActiveElements","isClick","_isClickEvent","lastEvent","determineLastEvent","Chart$1","rThetaToXY","theta","pathArc","pixelMargin","innerR","spacingOffset","avNogSpacingRadius","angleOffset","outerStart","outerEnd","innerStart","innerEnd","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","parseBorderRadius$1","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","pCenter1","innerMidAdjustedAngle","pCenter2","p8","pCenter3","outerStartX","outerStartY","outerEndX","outerEndY","setStyle","lineCap","lineJoin","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","stepped","getLineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","usePath2D","Path2D","LineElement","_path","_points","_segments","_pointsUpdated","segmentOptions","findStartAndEnd","chartContext","baseStyle","addStyle","st","dir","p0","p0DataIndex","p1DataIndex","doSplitByStyles","splitByStyles","solidSegments","_computeSegments","_interpolate","_getInterpolationMethod","interpolated","segmentMethod","path","strokePathWithCache","strokePathDirect","inRange$1","hitRadius","getBarBounds","bar","half","skipOrLimit","skipX","skipY","addNormalRectPath","inflateRect","amount","refRect","ArcElement","fullCircles","chartX","chartY","rAdjust","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","drawArc","inner","angleMargin","clipArc","PointElement","hoverRadius","mouseX","mouseY","inXRange","inYRange","BarElement","outer","maxW","maxH","parseBorderWidth","maxR","enableBorder","parseBorderRadius","boundingRects","addRectPath","BORDER_COLORS","BACKGROUND_COLORS","getBorderColor","getBackgroundColor","containsColorsDefinitions","plugin_colors","_args","colorizer","createDoughnutDatasetColorizer","createPolarAreaDatasetColorizer","getColorizer","cleanDecimatedDataset","cleanDecimatedData","plugin_decimation","algorithm","beforeElementsUpdate","xAxis","decimated","getStartAndCountOfVisiblePointsSimplified","threshold","samples","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","lttbDecimation","minIndex","maxIndex","startIndex","xMin","dx","lastIndex","intermediateIndex1","intermediateIndex2","minMaxDecimation","_getBounds","_findSegmentEnd","_getEdge","_createBoundaryLine","boundary","linePoints","_pointsFromSegments","_shouldApplyFill","_resolveTarget","propagate","visited","_decodeFill","fillOption","parseFillOption","firstCh","decodeTargetIndex","addPointsBelow","sourcePoint","linesBelow","postponed","findPoint","unshift","pointValue","firstValue","lastValue","simpleArc","_drawfill","getLineByIndex","sourcePoints","below","getLinesBelow","_buildStackLine","_getTargetValue","computeCircularBoundary","_getTargetPixel","computeLinearBoundary","computeBoundary","lineOpts","above","clipVertical","doFill","clipY","lineLoop","tpoints","targetSegments","tgt","subBounds","fillSources","fillSource","src","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","afterDatasetsUpdate","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","legendItemText","calculateItemWidth","fontLineHeight","calculateLegendItemHeight","calculateItemHeight","calculateItemSize","adjustHitBoxes","rtlHelper","hitbox","hitbox1","_draw","defaultColor","halfFontSize","cursor","textDirection","lineDash","drawOptions","SQRT2","yBoxTop","xBoxLeft","drawLegendBox","_textX","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","onLeave","isListened","hoveredItem","sameItem","plugin_legend","_element","afterEvent","ci","useBorderRadius","Title","_padding","textSize","_drawArgs","fontOpts","plugin_title","titleBlock","createTitle","WeakMap","plugin_subtitle","positioners","average","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineXAlign","yAlign","chartWidth","xAlign","caret","caretSize","caretPadding","doesNotFitWithAlign","determineAlignment","determineYAlign","getBackgroundPoint","alignment","paddingAndSize","alignX","alignY","getAlignedX","getBeforeAfterBodyLines","overrideCallbacks","defaultCallbacks","beforeTitle","tooltipItems","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","afterInit","afterDraw","Colors","Decimation","Filler","SubTitle","_getLabelForValue","relativeLabelSize","minSpacing","LinearScaleBase","_startValue","_endValue","_valueRange","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","maxTicks","stepSize","computeTickLimit","generationOptions","dataRange","precision","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","niceMin","niceMax","numSpaces","rounded","almostWhole","decimalPlaces","generateTicks$1","LinearScale","log10Floor","changeExponent","isMajor","tickVal","steps","rangeExp","rangeStep","LogarithmicScale","_zero","minExp","exp","startExp","lastTick","generateTicks","getTickBackdropHeight","determineLimits","updateLimits","limits","hLimits","vLimits","getTextAlignForAngle","yForAngle","pathRadiusLine","getPointPosition","RadialLinearScale","animate","centerPointLabels","drawingArea","_pointLabels","_pointLabelItems","valueCount","pointLabelOpts","additionalAngle","getPointLabelContext","plFont","setCenterPoint","extra","outerDistance","pointLabelPosition","buildPointLabelItems","fitWithPointLabels","leftMovement","rightMovement","topMovement","bottomMovement","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","createPointLabelContext","distanceFromCenter","getBasePosition","getPointLabelPosition","backdropLeft","backdropTop","backdropWidth","backdropHeight","drawPointLabels","gridLineOpts","drawRadiusLine","INTERVALS","millisecond","common","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","addTick","time","timestamps","ticksFromTimestamps","majorUnit","setMajorTicks","TimeScale","displayFormats","_unit","_majorUnit","_offsets","_normalized","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_filterBetween","_getLabelCapacity","determineUnitForFormatting","determineMajorUnit","initOffsets","offsetAfterAutoskip","getDecimalForValue","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","_tickFormatFunction","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","prevSource","nextSource","prevTarget","nextTarget","span","CategoryScale","_addedLabels","added","addedLabels","addIfString","lastIndexOf","findOrAddLabel","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","registerables","dataValue","dataPoint","setOriginalData","originalData","defaultStackKey","calculateRate","visibles","individual","totals","datasetDataLength","longestLength","isStack","sum","rec","maxVal","summarizeValues","dv","multiplicator","reflectData","srcData","isHorizontalChart","chartInstance","ChartPluginStacked100","beforeInit","pluginOptions","enable","replaceTooltipLabel","fixNegativeScale","targetAxis","hasNegative","tickOption","baseOption","getTickOption","scaleOption","datasetLabel","originalValue","rateValue","calculatedData","tooltipLabel","optionsPrecision","getPrecision","COLORS","createChart","createElement","className","header","innerText","appendChild","stacked100"],"sourceRoot":""}